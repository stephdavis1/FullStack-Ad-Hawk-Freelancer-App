{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useReducer, useEffect } from 'react';\nimport axios from 'axios';\nconst actions = {\n  make_request: 'make-request',\n  get_data: 'get-data',\n  error: 'error',\n  update_has_next_page: 'update-has-next-page'\n};\nconst baseUrl = 'https://api.allorigins.win/raw?url=https://jobs.github.com/positions.json'; // const baseUrl = 'http://localhost:8080/jobs'\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case actions.make_request:\n      return {\n        loading: true,\n        jobs: []\n      };\n\n    case actions.get_data:\n      return { ...state,\n        loading: false,\n        jobs: action.payload.jobs\n      };\n\n    case actions.error:\n      return { ...state,\n        loading: false,\n        error: action.payload.error,\n        jobs: []\n      };\n\n    case actions.update_has_next_page:\n      return { ...state,\n        hasNextPage: action.payload.hasNextPage\n      };\n\n    default:\n      return state;\n  }\n} // export default function useFilterJobs(jobs) {\n//     const [state, dispatch] = useReducer(filterReducer, { jobs })\n// }\n\n\nexport default function useFetchJobs(params, page) {\n  _s();\n\n  const [state, dispatch] = useReducer(reducer, {\n    jobs: [],\n    loading: true\n  });\n\n  const filterDescription = (description, state) => {\n    if (description !== \"\") {\n      // make a copy of the state\n      let stateCopy = { ...state\n      }; // filter out the state.jobs.description based on params.description\n\n      stateCopy.jobs = stateCopy.jobs.filter(job => {\n        console.log(job);\n        return job.title.includes(description);\n      }); // save filter results back to state copy\n\n      console.log(stateCopy);\n      return stateCopy;\n    }\n\n    return state;\n  };\n\n  const filterLocation = (location, state) => {\n    if (location !== \"\") {\n      // make a copy of the state\n      let stateCopy = { ...state\n      }; // filter out the state.jobs.description based on params.description\n\n      stateCopy.jobs = stateCopy.jobs.filter(job => {\n        console.log(job);\n        return job.title.includes(location);\n      }); // save filter results back to state copy\n\n      return stateCopy;\n    }\n\n    return state;\n  };\n\n  useEffect(() => {\n    const cancelToken1 = axios.CancelToken.source();\n    dispatch({\n      type: actions.make_request\n    });\n    axios.get(baseUrl, {\n      cancelToken: cancelToken1.token,\n      params: {\n        markdown: true,\n        page: page,\n        ...params\n      }\n    }).then(res => {\n      dispatch({\n        type: actions.get_data,\n        payload: {\n          jobs: res.data\n        }\n      });\n    }).catch(e => {\n      if (axios.isCancel(e)) return;\n      dispatch({\n        type: actions.error,\n        payload: {\n          error: e\n        }\n      });\n    });\n    const cancelToken2 = axios.CancelToken.source();\n    axios.get(baseUrl, {\n      cancelToken: cancelToken2.token,\n      params: {\n        markdown: true,\n        page: page + 1,\n        ...params\n      }\n    }).then(res => {\n      dispatch({\n        type: actions.update_has_next_page,\n        payload: {\n          hasNextPage: res.data.length !== 0\n        }\n      });\n    }).catch(e => {\n      if (axios.isCancel(e)) return;\n      dispatch({\n        type: actions.error,\n        payload: {\n          error: e\n        }\n      });\n    });\n    return () => {\n      cancelToken1.cancel();\n      cancelToken2.cancel();\n    };\n  }, [params, page]);\n  console.log(params);\n  console.log(state);\n  console.log(params.description);\n  let descriptionFiltered = filterDescription(params.description, state);\n  let locationFiltered = filterLocation(params.location, descriptionFiltered);\n  return locationFiltered;\n}\n\n_s(useFetchJobs, \"bRLgDQdNj1tsVgoBhwCNrWgJPwM=\");","map":{"version":3,"sources":["/Users/codeclanstudent/codeclan_work/week_14/finalproject/JS-JAVA-Freelancer-App/client/src/components/Joblists/useFetchJobs.js"],"names":["useReducer","useEffect","axios","actions","make_request","get_data","error","update_has_next_page","baseUrl","reducer","state","action","type","loading","jobs","payload","hasNextPage","useFetchJobs","params","page","dispatch","filterDescription","description","stateCopy","filter","job","console","log","title","includes","filterLocation","location","cancelToken1","CancelToken","source","get","cancelToken","token","markdown","then","res","data","catch","e","isCancel","cancelToken2","length","cancel","descriptionFiltered","locationFiltered"],"mappings":"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","sourcesContent":["import { useReducer, useEffect } from 'react';\nimport axios from 'axios';\n\nconst actions = {\n    make_request: 'make-request',\n    get_data: 'get-data',\n    error: 'error',\n    update_has_next_page: 'update-has-next-page'\n}\nconst baseUrl = 'https://api.allorigins.win/raw?url=https://jobs.github.com/positions.json'\n// const baseUrl = 'http://localhost:8080/jobs'\n\nfunction reducer(state, action) {\n    switch (action.type) {\n        case actions.make_request:\n            return { loading: true, jobs: [] }\n        case actions.get_data:\n            return { ...state, loading: false, jobs: action.payload.jobs }\n        case actions.error:\n            return { ...state, loading: false, error: action.payload.error, jobs: [] }\n        case actions.update_has_next_page:\n            return { ...state, hasNextPage: action.payload.hasNextPage }\n\n        default:\n            return state\n    }\n}\n\n// export default function useFilterJobs(jobs) {\n//     const [state, dispatch] = useReducer(filterReducer, { jobs })\n// }\n\nexport default function useFetchJobs(params, page) {\n    const [state, dispatch] = useReducer(reducer, { jobs: [], loading: true })\n\n    const filterDescription = (description, state) => {\n        if (description !== \"\") {\n            // make a copy of the state\n            let stateCopy = { ...state }\n            // filter out the state.jobs.description based on params.description\n            stateCopy.jobs = stateCopy.jobs.filter((job) => {\n                console.log(job)\n                return job.title.includes(description)\n    \n            })\n            // save filter results back to state copy\n            console.log(stateCopy)\n            return stateCopy\n        }\n        return state\n    }\n    const filterLocation = (location, state) => {\n        if (location !== \"\") {\n            // make a copy of the state\n            let stateCopy = { ...state }\n            // filter out the state.jobs.description based on params.description\n            stateCopy.jobs = stateCopy.jobs.filter((job) => {\n                console.log(job)\n                return job.title.includes(location)\n    \n            })\n            // save filter results back to state copy\n            return stateCopy\n        }\n        return state\n    }\n\n    useEffect(() => {\n        const cancelToken1 = axios.CancelToken.source()\n        dispatch({ type: actions.make_request })\n        axios.get(baseUrl, {\n            cancelToken: cancelToken1.token,\n            params: { markdown: true, page: page, ...params }\n        }).then(res => {\n            dispatch({ type: actions.get_data, payload: { jobs: res.data } })\n        }).catch(e => {\n            if (axios.isCancel(e)) return\n            dispatch({ type: actions.error, payload: { error: e } })\n        })\n\n        const cancelToken2 = axios.CancelToken.source()\n        axios.get(baseUrl, {\n            cancelToken: cancelToken2.token,\n            params: { markdown: true, page: page + 1, ...params }\n        }).then(res => {\n            dispatch({ type: actions.update_has_next_page, payload: { hasNextPage: res.data.length !== 0 } })\n        }).catch(e => {\n            if (axios.isCancel(e)) return\n            dispatch({ type: actions.error, payload: { error: e } })\n        })\n\n        return () => {\n            cancelToken1.cancel()\n            cancelToken2.cancel()\n        }\n    }, [params, page])\n\n    console.log(params)\n    console.log(state)\n    console.log(params.description)\n\n    let descriptionFiltered = filterDescription(params.description, state);\n    let locationFiltered = filterLocation(params.location, descriptionFiltered);\n\n    return locationFiltered;\n   \n}"]},"metadata":{},"sourceType":"module"}