{"ast":null,"code":"var _jsxFileName = \"/Users/codeclanstudent/codeclan_work/week_14/finalproject/JS-JAVA-Freelancer-App/client/src/containers/JobContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport JobDisplay from '../components/Jobs/JobDisplay';\nimport Request from '../helpers/request';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst JobContainer = () => {\n  _s();\n\n  const [jobs, setjobs] = useState([]);\n\n  const requestAll = function () {\n    const request = new Request();\n    const jobPromise = request.get('/api/jobs');\n    Promise.all([jobPromise]).then(data => {\n      setjobs(data[0]);\n    });\n  };\n\n  useEffect(() => {\n    requestAll();\n  }, []);\n\n  const findJobById = function (id) {\n    return jobs.find(job => {\n      return job.id === parseInt(id);\n    });\n  };\n\n  const handleDelete = function (id) {\n    const request = new Request();\n    const url = \"/api/jobs/\" + id;\n    request.delete(url).then(() => window.location = \"/jobs\");\n  };\n\n  if (!jobs) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"switch\", {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/jobs/:id\",\n        render: props => {\n          const id = props.match.params.id;\n          const job = findJobById(id);\n          return /*#__PURE__*/_jsxDEV(JobDisplay, {\n            job: job,\n            onDelete: handleDelete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 24\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(JobContainer, \"mMN7+E+HrsdcLjCGgM61yMTQhSc=\");\n\n_c = JobContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"JobContainer\");","map":{"version":3,"sources":["/Users/codeclanstudent/codeclan_work/week_14/finalproject/JS-JAVA-Freelancer-App/client/src/containers/JobContainer.js"],"names":["React","useState","useEffect","Route","Switch","JobDisplay","Request","JobContainer","jobs","setjobs","requestAll","request","jobPromise","get","Promise","all","then","data","findJobById","id","find","job","parseInt","handleDelete","url","delete","window","location","props","match","params"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,KAAR,EAAeC,MAAf,QAA4B,kBAA5B;AACA,OAAOC,UAAP,MAAuB,+BAAvB;AACA,OAAOC,OAAP,MAAoB,oBAApB;;;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACvB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMS,UAAU,GAAG,YAAU;AACzB,UAAMC,OAAO,GAAG,IAAIL,OAAJ,EAAhB;AACA,UAAMM,UAAU,GAAGD,OAAO,CAACE,GAAR,CAAY,WAAZ,CAAnB;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAY,CAACH,UAAD,CAAZ,EACCI,IADD,CACOC,IAAD,IAAU;AACZR,MAAAA,OAAO,CAACQ,IAAI,CAAC,CAAD,CAAL,CAAP;AACH,KAHD;AAIH,GARD;;AAUAf,EAAAA,SAAS,CAAC,MAAI;AACVQ,IAAAA,UAAU;AACb,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMQ,WAAW,GAAG,UAASC,EAAT,EAAY;AAC5B,WAAOX,IAAI,CAACY,IAAL,CAAWC,GAAD,IAAS;AACtB,aAAOA,GAAG,CAACF,EAAJ,KAAWG,QAAQ,CAACH,EAAD,CAA1B;AACH,KAFM,CAAP;AAGH,GAJD;;AAMA,QAAMI,YAAY,GAAG,UAASJ,EAAT,EAAY;AAC7B,UAAMR,OAAO,GAAG,IAAIL,OAAJ,EAAhB;AACA,UAAMkB,GAAG,GAAG,eAAeL,EAA3B;AACAR,IAAAA,OAAO,CAACc,MAAR,CAAeD,GAAf,EACCR,IADD,CACM,MAAMU,MAAM,CAACC,QAAP,GAAkB,OAD9B;AAEH,GALD;;AAOA,MAAG,CAACnB,IAAJ,EAAS;AACL,WAAO,IAAP;AACH;;AACD,sBACI;AAAA,2BACA;AAAA,6BAEI,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,WAAlB;AAA8B,QAAA,MAAM,EAAGoB,KAAD,IAAU;AAC5C,gBAAMT,EAAE,GAAGS,KAAK,CAACC,KAAN,CAAYC,MAAZ,CAAmBX,EAA9B;AACA,gBAAME,GAAG,GAAGH,WAAW,CAACC,EAAD,CAAvB;AACA,8BAAO,QAAC,UAAD;AAAY,YAAA,GAAG,EAAEE,GAAjB;AACP,YAAA,QAAQ,EAAEE;AADH;AAAA;AAAA;AAAA;AAAA,kBAAP;AAGH;AAND;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA;AADA,mBADJ;AAgBH,CAjDD;;GAAMhB,Y;;KAAAA,Y","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {Route, Switch} from 'react-router-dom';\nimport JobDisplay from '../components/Jobs/JobDisplay';\nimport Request from '../helpers/request';\n\nconst JobContainer = () => {\n    const [jobs, setjobs] = useState([]);\n\n    const requestAll = function(){\n        const request = new Request();\n        const jobPromise = request.get('/api/jobs')\n\n        Promise.all([jobPromise])\n        .then((data) => {\n            setjobs(data[0]);\n        })\n    }\n\n    useEffect(()=>{\n        requestAll()\n    }, [])\n\n    const findJobById = function(id){\n        return jobs.find((job) => {\n            return job.id === parseInt(id);\n        })\n    }\n\n    const handleDelete = function(id){\n        const request = new Request();\n        const url = \"/api/jobs/\" + id\n        request.delete(url)\n        .then(() => window.location = \"/jobs\")\n    }\n\n    if(!jobs){\n        return null\n    }\n    return(\n        <>\n        <switch>\n\n            <Route exact path=\"/jobs/:id\" render={(props) =>{\n                const id = props.match.params.id;\n                const job = findJobById(id);\n                return <JobDisplay job={job}\n                onDelete={handleDelete} />\n\n            }}/>\n        \n\n        </switch>\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}