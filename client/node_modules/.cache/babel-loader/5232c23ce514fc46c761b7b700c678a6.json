{"ast":null,"code":"var _jsxFileName = \"/Users/codeclanstudent/codeclan_work/week_14/finalproject/JS-JAVA-Freelancer-App/client/src/containers/MyJobContainer.js\",\n    _s = $RefreshSig$();\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { useState } from 'react';\nimport { Container } from 'react-bootstrap';\nimport Job from '../components/Joblists/Job';\nimport useAcceptedJobs from '../components/Joblists/useAcceptedJobs';\nimport SearchForm from '../components/Joblists/SearchForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MyJobContainer() {\n  _s();\n\n  const [params, setParams] = useState({\n    description: \"\",\n    location: \"\"\n  });\n  const {\n    jobs\n  } = useAcceptedJobs(params);\n\n  function handleParamChange(e) {\n    const param = e.target.name;\n    const value = e.target.value;\n    setParams(prevParams => {\n      return { ...prevParams,\n        [param]: value\n      };\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"my-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"mb-4\",\n      children: \"Accepted Jobs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SearchForm, {\n      params: params,\n      onParamChange: handleParamChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), jobs.map(job => {\n      return /*#__PURE__*/_jsxDEV(Job, {\n        job: job\n      }, job.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 24\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MyJobContainer, \"5LftzIqdIg6VyoHciuqnRkdRmS4=\", false, function () {\n  return [useAcceptedJobs];\n});\n\n_c = MyJobContainer;\n;\nexport default MyJobContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyJobContainer\");","map":{"version":3,"sources":["/Users/codeclanstudent/codeclan_work/week_14/finalproject/JS-JAVA-Freelancer-App/client/src/containers/MyJobContainer.js"],"names":["React","useState","Container","Job","useAcceptedJobs","SearchForm","MyJobContainer","params","setParams","description","location","jobs","handleParamChange","e","param","target","name","value","prevParams","map","job","id"],"mappings":";;;AAAA,OAAO,sCAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,OAAOC,GAAP,MAAgB,4BAAhB;AACA,OAAOC,eAAP,MAA4B,wCAA5B;AACA,OAAOC,UAAP,MAAuB,mCAAvB;;;AAEA,SAASC,cAAT,GAA0B;AAAA;;AAEtB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC;AAAEQ,IAAAA,WAAW,EAAE,EAAf;AAAmBC,IAAAA,QAAQ,EAAE;AAA7B,GAAD,CAApC;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAWP,eAAe,CAACG,MAAD,CAAhC;;AAEA,WAASK,iBAAT,CAA2BC,CAA3B,EAA8B;AAC1B,UAAMC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASC,IAAvB;AACA,UAAMC,KAAK,GAAGJ,CAAC,CAACE,MAAF,CAASE,KAAvB;AACAT,IAAAA,SAAS,CAACU,UAAU,IAAI;AACpB,aAAO,EAAE,GAAGA,UAAL;AAAiB,SAACJ,KAAD,GAASG;AAA1B,OAAP;AACH,KAFQ,CAAT;AAGH;;AAED,sBACI,QAAC,SAAD;AAAW,IAAA,SAAS,EAAC,MAArB;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,UAAD;AAAY,MAAA,MAAM,EAAEV,MAApB;AAA4B,MAAA,aAAa,EAAEK;AAA3C;AAAA;AAAA;AAAA;AAAA,YAFJ,EAGKD,IAAI,CAACQ,GAAL,CAASC,GAAG,IAAI;AACb,0BAAO,QAAC,GAAD;AAAkB,QAAA,GAAG,EAAEA;AAAvB,SAAUA,GAAG,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFA,CAHL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH;;GAvBQf,c;UAGYF,e;;;KAHZE,c;AAuBR;AAED,eAAeA,cAAf","sourcesContent":["import 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { useState } from 'react';\nimport { Container } from 'react-bootstrap';\nimport Job from '../components/Joblists/Job';\nimport useAcceptedJobs from '../components/Joblists/useAcceptedJobs';\nimport SearchForm from '../components/Joblists/SearchForm';\n\nfunction MyJobContainer() {\n\n    const [params, setParams] = useState({ description: \"\", location: \"\" })\n    const { jobs } = useAcceptedJobs(params)\n\n    function handleParamChange(e) {\n        const param = e.target.name\n        const value = e.target.value\n        setParams(prevParams => {\n            return { ...prevParams, [param]: value }\n        })\n    }\n\n    return (\n        <Container className=\"my-4\">\n            <h1 className=\"mb-4\">Accepted Jobs</h1>\n            <SearchForm params={params} onParamChange={handleParamChange} />\n            {jobs.map(job => {\n                return <Job key={job.id} job={job} />\n            })}\n        </Container>\n    );\n\n};\n\nexport default MyJobContainer;"]},"metadata":{},"sourceType":"module"}