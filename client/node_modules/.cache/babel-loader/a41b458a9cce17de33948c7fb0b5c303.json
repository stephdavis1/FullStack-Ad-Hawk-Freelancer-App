{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useReducer, useEffect } from 'react';\nimport axios from 'axios';\nconst actions = {\n  make_request: 'make-request',\n  get_data: 'get-data',\n  error: 'error'\n};\nconst baseUrl = 'https://jobs.github.com/positions.json';\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case actions.make_request:\n      return {\n        loading: true,\n        jobs: []\n      };\n\n    case actions.get_data:\n      return { ...state,\n        loading: false,\n        jobs: action.payload.jobs\n      };\n\n    case actions.error:\n      return { ...state,\n        loading: false,\n        error: action.payload.error,\n        jobs: []\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default function useFetchJobs(params, page) {\n  _s();\n\n  const [state, dispatch] = useReducer(reducer, {\n    jobs: [],\n    loading: true\n  });\n  useEffect(() => {\n    dispatch({\n      type: actions.make_request\n    });\n    axios.get(baseUrl, {\n      params: {\n        markdown: true,\n        page: page,\n        ...params\n      }\n    }).then(res => {\n      dispatch({\n        type: actions.get_data,\n        payload: {\n          jobs: res.data\n        }\n      });\n    }).catch(e => {\n      dispatch({\n        type: actions.error,\n        payload: {\n          error: e\n        }\n      });\n    });\n  }, [params, page]);\n  return {\n    jobs: [],\n    loading: false,\n    error: false\n  };\n}\n\n_s(useFetchJobs, \"bRLgDQdNj1tsVgoBhwCNrWgJPwM=\");","map":{"version":3,"sources":["/Users/codeclanstudent/codeclan_work/week_14/finalproject/JS-JAVA-Freelancer-App/client/src/components/Joblists/useFetchJobs.js"],"names":["useReducer","useEffect","axios","actions","make_request","get_data","error","baseUrl","reducer","state","action","type","loading","jobs","payload","useFetchJobs","params","page","dispatch","get","markdown","then","res","data","catch","e"],"mappings":";;AAAA,SAASA,UAAT,EAAqBC,SAArB,QAAsC,OAAtC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,OAAO,GAAG;AACZC,EAAAA,YAAY,EAAE,cADF;AAEZC,EAAAA,QAAQ,EAAE,UAFE;AAGZC,EAAAA,KAAK,EAAE;AAHK,CAAhB;AAMA,MAAMC,OAAO,GAAG,wCAAhB;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAC5B,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKR,OAAO,CAACC,YAAb;AACI,aAAO;AAAEQ,QAAAA,OAAO,EAAE,IAAX;AAAiBC,QAAAA,IAAI,EAAE;AAAvB,OAAP;;AACJ,SAAKV,OAAO,CAACE,QAAb;AACI,aAAO,EAAC,GAAGI,KAAJ;AAAWG,QAAAA,OAAO,EAAE,KAApB;AAA2BC,QAAAA,IAAI,EAAEH,MAAM,CAACI,OAAP,CAAeD;AAAhD,OAAP;;AACJ,SAAKV,OAAO,CAACG,KAAb;AACI,aAAO,EAAE,GAAGG,KAAL;AAAYG,QAAAA,OAAO,EAAE,KAArB;AAA4BN,QAAAA,KAAK,EAAEI,MAAM,CAACI,OAAP,CAAeR,KAAlD;AAAyDO,QAAAA,IAAI,EAAE;AAA/D,OAAP;;AAEJ;AACI,aAAOJ,KAAP;AATR;AAWH;;AAED,eAAe,SAASM,YAAT,CAAsBC,MAAtB,EAA8BC,IAA9B,EAAmC;AAAA;;AAC9C,QAAM,CAACR,KAAD,EAAQS,QAAR,IAAoBlB,UAAU,CAACQ,OAAD,EAAU;AAAEK,IAAAA,IAAI,EAAE,EAAR;AAAYD,IAAAA,OAAO,EAAE;AAArB,GAAV,CAApC;AAEAX,EAAAA,SAAS,CAAC,MAAM;AACZiB,IAAAA,QAAQ,CAAC;AAAEP,MAAAA,IAAI,EAAER,OAAO,CAACC;AAAhB,KAAD,CAAR;AACAF,IAAAA,KAAK,CAACiB,GAAN,CAAUZ,OAAV,EAAmB;AACfS,MAAAA,MAAM,EAAE;AAAEI,QAAAA,QAAQ,EAAE,IAAZ;AAAkBH,QAAAA,IAAI,EAAEA,IAAxB;AAA8B,WAAGD;AAAjC;AADO,KAAnB,EAEGK,IAFH,CAEQC,GAAG,IAAI;AACXJ,MAAAA,QAAQ,CAAC;AAACP,QAAAA,IAAI,EAAER,OAAO,CAACE,QAAf;AAAyBS,QAAAA,OAAO,EAAE;AAAED,UAAAA,IAAI,EAAES,GAAG,CAACC;AAAZ;AAAlC,OAAD,CAAR;AACH,KAJD,EAIGC,KAJH,CAISC,CAAC,IAAI;AACVP,MAAAA,QAAQ,CAAC;AAACP,QAAAA,IAAI,EAAER,OAAO,CAACG,KAAf;AAAsBQ,QAAAA,OAAO,EAAE;AAAER,UAAAA,KAAK,EAAEmB;AAAT;AAA/B,OAAD,CAAR;AACH,KAND;AAOH,GATQ,EASP,CAACT,MAAD,EAASC,IAAT,CATO,CAAT;AAWA,SAAO;AACHJ,IAAAA,IAAI,EAAE,EADH;AAEHD,IAAAA,OAAO,EAAE,KAFN;AAGHN,IAAAA,KAAK,EAAE;AAHJ,GAAP;AAMH;;GApBuBS,Y","sourcesContent":["import { useReducer, useEffect } from 'react';\nimport axios from 'axios';\n\nconst actions = {\n    make_request: 'make-request',\n    get_data: 'get-data',\n    error: 'error'\n}\n\nconst baseUrl = 'https://jobs.github.com/positions.json'\n \nfunction reducer(state, action) {\n    switch (action.type) {\n        case actions.make_request:\n            return { loading: true, jobs: [] }\n        case actions.get_data:\n            return {...state, loading: false, jobs: action.payload.jobs }\n        case actions.error:\n            return { ...state, loading: false, error: action.payload.error, jobs: [] }\n\n        default:\n            return state\n    }\n}\n\nexport default function useFetchJobs(params, page){\n    const [state, dispatch] = useReducer(reducer, { jobs: [], loading: true })\n\n    useEffect(() => {\n        dispatch({ type: actions.make_request })\n        axios.get(baseUrl, {\n            params: { markdown: true, page: page, ...params }\n        }).then(res => {\n            dispatch({type: actions.get_data, payload: { jobs: res.data } }) \n        }).catch(e => {\n            dispatch({type: actions.error, payload: { error: e } })\n        })\n    },[params, page])\n\n    return {\n        jobs: [],\n        loading: false,\n        error: false\n    }\n\n}"]},"metadata":{},"sourceType":"module"}