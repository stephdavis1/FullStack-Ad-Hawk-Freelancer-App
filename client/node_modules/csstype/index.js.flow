<<<<<<< HEAD
// @flow
export type StandardLonghandProperties<TLength = string | 0> = {
  alignContent?: AlignContentProperty,
  alignItems?: AlignItemsProperty,
  alignSelf?: AlignSelfProperty,
  alignTracks?: AlignTracksProperty,
  animationDelay?: GlobalsString,
  animationDirection?: AnimationDirectionProperty,
  animationDuration?: GlobalsString,
  animationFillMode?: AnimationFillModeProperty,
  animationIterationCount?: AnimationIterationCountProperty,
  animationName?: AnimationNameProperty,
  animationPlayState?: AnimationPlayStateProperty,
  animationTimingFunction?: AnimationTimingFunctionProperty,
  appearance?: AppearanceProperty,
  aspectRatio?: AspectRatioProperty,
  backdropFilter?: BackdropFilterProperty,
  backfaceVisibility?: BackfaceVisibilityProperty,
  backgroundAttachment?: BackgroundAttachmentProperty,
  backgroundBlendMode?: BackgroundBlendModeProperty,
  backgroundClip?: BackgroundClipProperty,
  backgroundColor?: BackgroundColorProperty,
  backgroundImage?: BackgroundImageProperty,
  backgroundOrigin?: BackgroundOriginProperty,
  backgroundPosition?: BackgroundPositionProperty<TLength>,
  backgroundPositionX?: BackgroundPositionXProperty<TLength>,
  backgroundPositionY?: BackgroundPositionYProperty<TLength>,
  backgroundRepeat?: BackgroundRepeatProperty,
  backgroundSize?: BackgroundSizeProperty<TLength>,
  blockOverflow?: BlockOverflowProperty,
  blockSize?: BlockSizeProperty<TLength>,
  borderBlockColor?: BorderBlockColorProperty,
  borderBlockEndColor?: BorderBlockEndColorProperty,
  borderBlockEndStyle?: BorderBlockEndStyleProperty,
  borderBlockEndWidth?: BorderBlockEndWidthProperty<TLength>,
  borderBlockStartColor?: BorderBlockStartColorProperty,
  borderBlockStartStyle?: BorderBlockStartStyleProperty,
  borderBlockStartWidth?: BorderBlockStartWidthProperty<TLength>,
  borderBlockStyle?: BorderBlockStyleProperty,
  borderBlockWidth?: BorderBlockWidthProperty<TLength>,
  borderBottomColor?: BorderBottomColorProperty,
  borderBottomLeftRadius?: BorderBottomLeftRadiusProperty<TLength>,
  borderBottomRightRadius?: BorderBottomRightRadiusProperty<TLength>,
  borderBottomStyle?: BorderBottomStyleProperty,
  borderBottomWidth?: BorderBottomWidthProperty<TLength>,
  borderCollapse?: BorderCollapseProperty,
  borderEndEndRadius?: BorderEndEndRadiusProperty<TLength>,
  borderEndStartRadius?: BorderEndStartRadiusProperty<TLength>,
  borderImageOutset?: BorderImageOutsetProperty<TLength>,
  borderImageRepeat?: BorderImageRepeatProperty,
  borderImageSlice?: BorderImageSliceProperty,
  borderImageSource?: BorderImageSourceProperty,
  borderImageWidth?: BorderImageWidthProperty<TLength>,
  borderInlineColor?: BorderInlineColorProperty,
  borderInlineEndColor?: BorderInlineEndColorProperty,
  borderInlineEndStyle?: BorderInlineEndStyleProperty,
  borderInlineEndWidth?: BorderInlineEndWidthProperty<TLength>,
  borderInlineStartColor?: BorderInlineStartColorProperty,
  borderInlineStartStyle?: BorderInlineStartStyleProperty,
  borderInlineStartWidth?: BorderInlineStartWidthProperty<TLength>,
  borderInlineStyle?: BorderInlineStyleProperty,
  borderInlineWidth?: BorderInlineWidthProperty<TLength>,
  borderLeftColor?: BorderLeftColorProperty,
  borderLeftStyle?: BorderLeftStyleProperty,
  borderLeftWidth?: BorderLeftWidthProperty<TLength>,
  borderRightColor?: BorderRightColorProperty,
  borderRightStyle?: BorderRightStyleProperty,
  borderRightWidth?: BorderRightWidthProperty<TLength>,
  borderSpacing?: BorderSpacingProperty<TLength>,
  borderStartEndRadius?: BorderStartEndRadiusProperty<TLength>,
  borderStartStartRadius?: BorderStartStartRadiusProperty<TLength>,
  borderTopColor?: BorderTopColorProperty,
  borderTopLeftRadius?: BorderTopLeftRadiusProperty<TLength>,
  borderTopRightRadius?: BorderTopRightRadiusProperty<TLength>,
  borderTopStyle?: BorderTopStyleProperty,
  borderTopWidth?: BorderTopWidthProperty<TLength>,
  bottom?: BottomProperty<TLength>,
  boxDecorationBreak?: BoxDecorationBreakProperty,
  boxShadow?: BoxShadowProperty,
  boxSizing?: BoxSizingProperty,
  breakAfter?: BreakAfterProperty,
  breakBefore?: BreakBeforeProperty,
  breakInside?: BreakInsideProperty,
  captionSide?: CaptionSideProperty,
  caretColor?: CaretColorProperty,
  clear?: ClearProperty,
  clipPath?: ClipPathProperty,
  color?: ColorProperty,
  colorAdjust?: ColorAdjustProperty,
  columnCount?: ColumnCountProperty,
  columnFill?: ColumnFillProperty,
  columnGap?: ColumnGapProperty<TLength>,
  columnRuleColor?: ColumnRuleColorProperty,
  columnRuleStyle?: ColumnRuleStyleProperty,
  columnRuleWidth?: ColumnRuleWidthProperty<TLength>,
  columnSpan?: ColumnSpanProperty,
  columnWidth?: ColumnWidthProperty<TLength>,
  contain?: ContainProperty,
  content?: ContentProperty,
  contentVisibility?: ContentVisibilityProperty,
  counterIncrement?: CounterIncrementProperty,
  counterReset?: CounterResetProperty,
  counterSet?: CounterSetProperty,
  cursor?: CursorProperty,
  direction?: DirectionProperty,
  display?: DisplayProperty,
  emptyCells?: EmptyCellsProperty,
  filter?: FilterProperty,
  flexBasis?: FlexBasisProperty<TLength>,
  flexDirection?: FlexDirectionProperty,
  flexGrow?: GlobalsNumber,
  flexShrink?: GlobalsNumber,
  flexWrap?: FlexWrapProperty,
  float?: FloatProperty,
  fontFamily?: FontFamilyProperty,
  fontFeatureSettings?: FontFeatureSettingsProperty,
  fontKerning?: FontKerningProperty,
  fontLanguageOverride?: FontLanguageOverrideProperty,
  fontOpticalSizing?: FontOpticalSizingProperty,
  fontSize?: FontSizeProperty<TLength>,
  fontSizeAdjust?: FontSizeAdjustProperty,
  fontSmooth?: FontSmoothProperty<TLength>,
  fontStretch?: FontStretchProperty,
  fontStyle?: FontStyleProperty,
  fontSynthesis?: FontSynthesisProperty,
  fontVariant?: FontVariantProperty,
  fontVariantCaps?: FontVariantCapsProperty,
  fontVariantEastAsian?: FontVariantEastAsianProperty,
  fontVariantLigatures?: FontVariantLigaturesProperty,
  fontVariantNumeric?: FontVariantNumericProperty,
  fontVariantPosition?: FontVariantPositionProperty,
  fontVariationSettings?: FontVariationSettingsProperty,
  fontWeight?: FontWeightProperty,
  forcedColorAdjust?: ForcedColorAdjustProperty,
  gridAutoColumns?: GridAutoColumnsProperty<TLength>,
  gridAutoFlow?: GridAutoFlowProperty,
  gridAutoRows?: GridAutoRowsProperty<TLength>,
  gridColumnEnd?: GridColumnEndProperty,
  gridColumnStart?: GridColumnStartProperty,
  gridRowEnd?: GridRowEndProperty,
  gridRowStart?: GridRowStartProperty,
  gridTemplateAreas?: GridTemplateAreasProperty,
  gridTemplateColumns?: GridTemplateColumnsProperty<TLength>,
  gridTemplateRows?: GridTemplateRowsProperty<TLength>,
  hangingPunctuation?: HangingPunctuationProperty,
  height?: HeightProperty<TLength>,
  hyphens?: HyphensProperty,
  imageOrientation?: ImageOrientationProperty,
  imageRendering?: ImageRenderingProperty,
  imageResolution?: ImageResolutionProperty,
  initialLetter?: InitialLetterProperty,
  inlineSize?: InlineSizeProperty<TLength>,
  inset?: InsetProperty<TLength>,
  insetBlock?: InsetBlockProperty<TLength>,
  insetBlockEnd?: InsetBlockEndProperty<TLength>,
  insetBlockStart?: InsetBlockStartProperty<TLength>,
  insetInline?: InsetInlineProperty<TLength>,
  insetInlineEnd?: InsetInlineEndProperty<TLength>,
  insetInlineStart?: InsetInlineStartProperty<TLength>,
  isolation?: IsolationProperty,
  justifyContent?: JustifyContentProperty,
  justifyItems?: JustifyItemsProperty,
  justifySelf?: JustifySelfProperty,
  justifyTracks?: JustifyTracksProperty,
  left?: LeftProperty<TLength>,
  letterSpacing?: LetterSpacingProperty<TLength>,
  lineBreak?: LineBreakProperty,
  lineHeight?: LineHeightProperty<TLength>,
  lineHeightStep?: LineHeightStepProperty<TLength>,
  listStyleImage?: ListStyleImageProperty,
  listStylePosition?: ListStylePositionProperty,
  listStyleType?: ListStyleTypeProperty,
  marginBlock?: MarginBlockProperty<TLength>,
  marginBlockEnd?: MarginBlockEndProperty<TLength>,
  marginBlockStart?: MarginBlockStartProperty<TLength>,
  marginBottom?: MarginBottomProperty<TLength>,
  marginInline?: MarginInlineProperty<TLength>,
  marginInlineEnd?: MarginInlineEndProperty<TLength>,
  marginInlineStart?: MarginInlineStartProperty<TLength>,
  marginLeft?: MarginLeftProperty<TLength>,
  marginRight?: MarginRightProperty<TLength>,
  marginTop?: MarginTopProperty<TLength>,
  maskBorderMode?: MaskBorderModeProperty,
  maskBorderOutset?: MaskBorderOutsetProperty<TLength>,
  maskBorderRepeat?: MaskBorderRepeatProperty,
  maskBorderSlice?: MaskBorderSliceProperty,
  maskBorderSource?: MaskBorderSourceProperty,
  maskBorderWidth?: MaskBorderWidthProperty<TLength>,
  maskClip?: MaskClipProperty,
  maskComposite?: MaskCompositeProperty,
  maskImage?: MaskImageProperty,
  maskMode?: MaskModeProperty,
  maskOrigin?: MaskOriginProperty,
  maskPosition?: MaskPositionProperty<TLength>,
  maskRepeat?: MaskRepeatProperty,
  maskSize?: MaskSizeProperty<TLength>,
  maskType?: MaskTypeProperty,
  mathStyle?: MathStyleProperty,
  maxBlockSize?: MaxBlockSizeProperty<TLength>,
  maxHeight?: MaxHeightProperty<TLength>,
  maxInlineSize?: MaxInlineSizeProperty<TLength>,
  maxLines?: MaxLinesProperty,
  maxWidth?: MaxWidthProperty<TLength>,
  minBlockSize?: MinBlockSizeProperty<TLength>,
  minHeight?: MinHeightProperty<TLength>,
  minInlineSize?: MinInlineSizeProperty<TLength>,
  minWidth?: MinWidthProperty<TLength>,
  mixBlendMode?: MixBlendModeProperty,
  motionDistance?: OffsetDistanceProperty<TLength>,
  motionPath?: OffsetPathProperty,
  motionRotation?: OffsetRotateProperty,
  objectFit?: ObjectFitProperty,
  objectPosition?: ObjectPositionProperty<TLength>,
  offsetAnchor?: OffsetAnchorProperty<TLength>,
  offsetDistance?: OffsetDistanceProperty<TLength>,
  offsetPath?: OffsetPathProperty,
  offsetRotate?: OffsetRotateProperty,
  offsetRotation?: OffsetRotateProperty,
  opacity?: OpacityProperty,
  order?: GlobalsNumber,
  orphans?: GlobalsNumber,
  outlineColor?: OutlineColorProperty,
  outlineOffset?: OutlineOffsetProperty<TLength>,
  outlineStyle?: OutlineStyleProperty,
  outlineWidth?: OutlineWidthProperty<TLength>,
  overflowAnchor?: OverflowAnchorProperty,
  overflowBlock?: OverflowBlockProperty,
  overflowClipBox?: OverflowClipBoxProperty,
  overflowInline?: OverflowInlineProperty,
  overflowWrap?: OverflowWrapProperty,
  overflowX?: OverflowXProperty,
  overflowY?: OverflowYProperty,
  overscrollBehavior?: OverscrollBehaviorProperty,
  overscrollBehaviorBlock?: OverscrollBehaviorBlockProperty,
  overscrollBehaviorInline?: OverscrollBehaviorInlineProperty,
  overscrollBehaviorX?: OverscrollBehaviorXProperty,
  overscrollBehaviorY?: OverscrollBehaviorYProperty,
  paddingBlock?: PaddingBlockProperty<TLength>,
  paddingBlockEnd?: PaddingBlockEndProperty<TLength>,
  paddingBlockStart?: PaddingBlockStartProperty<TLength>,
  paddingBottom?: PaddingBottomProperty<TLength>,
  paddingInline?: PaddingInlineProperty<TLength>,
  paddingInlineEnd?: PaddingInlineEndProperty<TLength>,
  paddingInlineStart?: PaddingInlineStartProperty<TLength>,
  paddingLeft?: PaddingLeftProperty<TLength>,
  paddingRight?: PaddingRightProperty<TLength>,
  paddingTop?: PaddingTopProperty<TLength>,
  pageBreakAfter?: PageBreakAfterProperty,
  pageBreakBefore?: PageBreakBeforeProperty,
  pageBreakInside?: PageBreakInsideProperty,
  paintOrder?: PaintOrderProperty,
  perspective?: PerspectiveProperty<TLength>,
  perspectiveOrigin?: PerspectiveOriginProperty<TLength>,
  placeContent?: PlaceContentProperty,
  pointerEvents?: PointerEventsProperty,
  position?: PositionProperty,
  quotes?: QuotesProperty,
  resize?: ResizeProperty,
  right?: RightProperty<TLength>,
  rotate?: RotateProperty,
  rowGap?: RowGapProperty<TLength>,
  rubyAlign?: RubyAlignProperty,
  rubyMerge?: RubyMergeProperty,
  rubyPosition?: RubyPositionProperty,
  scale?: ScaleProperty,
  scrollBehavior?: ScrollBehaviorProperty,
  scrollMargin?: ScrollMarginProperty<TLength>,
  scrollMarginBlock?: ScrollMarginBlockProperty<TLength>,
  scrollMarginBlockEnd?: ScrollMarginBlockEndProperty<TLength>,
  scrollMarginBlockStart?: ScrollMarginBlockStartProperty<TLength>,
  scrollMarginBottom?: ScrollMarginBottomProperty<TLength>,
  scrollMarginInline?: ScrollMarginInlineProperty<TLength>,
  scrollMarginInlineEnd?: ScrollMarginInlineEndProperty<TLength>,
  scrollMarginInlineStart?: ScrollMarginInlineStartProperty<TLength>,
  scrollMarginLeft?: ScrollMarginLeftProperty<TLength>,
  scrollMarginRight?: ScrollMarginRightProperty<TLength>,
  scrollMarginTop?: ScrollMarginTopProperty<TLength>,
  scrollPadding?: ScrollPaddingProperty<TLength>,
  scrollPaddingBlock?: ScrollPaddingBlockProperty<TLength>,
  scrollPaddingBlockEnd?: ScrollPaddingBlockEndProperty<TLength>,
  scrollPaddingBlockStart?: ScrollPaddingBlockStartProperty<TLength>,
  scrollPaddingBottom?: ScrollPaddingBottomProperty<TLength>,
  scrollPaddingInline?: ScrollPaddingInlineProperty<TLength>,
  scrollPaddingInlineEnd?: ScrollPaddingInlineEndProperty<TLength>,
  scrollPaddingInlineStart?: ScrollPaddingInlineStartProperty<TLength>,
  scrollPaddingLeft?: ScrollPaddingLeftProperty<TLength>,
  scrollPaddingRight?: ScrollPaddingRightProperty<TLength>,
  scrollPaddingTop?: ScrollPaddingTopProperty<TLength>,
  scrollSnapAlign?: ScrollSnapAlignProperty,
  scrollSnapMargin?: ScrollMarginProperty<TLength>,
  scrollSnapMarginBottom?: ScrollMarginBottomProperty<TLength>,
  scrollSnapMarginLeft?: ScrollMarginLeftProperty<TLength>,
  scrollSnapMarginRight?: ScrollMarginRightProperty<TLength>,
  scrollSnapMarginTop?: ScrollMarginTopProperty<TLength>,
  scrollSnapStop?: ScrollSnapStopProperty,
  scrollSnapType?: ScrollSnapTypeProperty,
  scrollbarColor?: ScrollbarColorProperty,
  scrollbarGutter?: ScrollbarGutterProperty,
  scrollbarWidth?: ScrollbarWidthProperty,
  shapeImageThreshold?: ShapeImageThresholdProperty,
  shapeMargin?: ShapeMarginProperty<TLength>,
  shapeOutside?: ShapeOutsideProperty,
  tabSize?: TabSizeProperty<TLength>,
  tableLayout?: TableLayoutProperty,
  textAlign?: TextAlignProperty,
  textAlignLast?: TextAlignLastProperty,
  textCombineUpright?: TextCombineUprightProperty,
  textDecorationColor?: TextDecorationColorProperty,
  textDecorationLine?: TextDecorationLineProperty,
  textDecorationSkip?: TextDecorationSkipProperty,
  textDecorationSkipInk?: TextDecorationSkipInkProperty,
  textDecorationStyle?: TextDecorationStyleProperty,
  textDecorationThickness?: TextDecorationThicknessProperty<TLength>,
  textDecorationWidth?: TextDecorationThicknessProperty<TLength>,
  textEmphasisColor?: TextEmphasisColorProperty,
  textEmphasisPosition?: GlobalsString,
  textEmphasisStyle?: TextEmphasisStyleProperty,
  textIndent?: TextIndentProperty<TLength>,
  textJustify?: TextJustifyProperty,
  textOrientation?: TextOrientationProperty,
  textOverflow?: TextOverflowProperty,
  textRendering?: TextRenderingProperty,
  textShadow?: TextShadowProperty,
  textSizeAdjust?: TextSizeAdjustProperty,
  textTransform?: TextTransformProperty,
  textUnderlineOffset?: TextUnderlineOffsetProperty<TLength>,
  textUnderlinePosition?: TextUnderlinePositionProperty,
  top?: TopProperty<TLength>,
  touchAction?: TouchActionProperty,
  transform?: TransformProperty,
  transformBox?: TransformBoxProperty,
  transformOrigin?: TransformOriginProperty<TLength>,
  transformStyle?: TransformStyleProperty,
  transitionDelay?: GlobalsString,
  transitionDuration?: GlobalsString,
  transitionProperty?: TransitionPropertyProperty,
  transitionTimingFunction?: TransitionTimingFunctionProperty,
  translate?: TranslateProperty<TLength>,
  unicodeBidi?: UnicodeBidiProperty,
  userSelect?: UserSelectProperty,
  verticalAlign?: VerticalAlignProperty<TLength>,
  visibility?: VisibilityProperty,
  whiteSpace?: WhiteSpaceProperty,
  widows?: GlobalsNumber,
  width?: WidthProperty<TLength>,
  willChange?: WillChangeProperty,
  wordBreak?: WordBreakProperty,
  wordSpacing?: WordSpacingProperty<TLength>,
  wordWrap?: WordWrapProperty,
  writingMode?: WritingModeProperty,
  zIndex?: ZIndexProperty,
  zoom?: ZoomProperty,
};

export type StandardShorthandProperties<TLength = string | 0> = {
  all?: Globals,
  animation?: AnimationProperty,
  background?: BackgroundProperty<TLength>,
  border?: BorderProperty<TLength>,
  borderBlock?: BorderBlockProperty<TLength>,
  borderBlockEnd?: BorderBlockEndProperty<TLength>,
  borderBlockStart?: BorderBlockStartProperty<TLength>,
  borderBottom?: BorderBottomProperty<TLength>,
  borderColor?: BorderColorProperty,
  borderImage?: BorderImageProperty,
  borderInline?: BorderInlineProperty<TLength>,
  borderInlineEnd?: BorderInlineEndProperty<TLength>,
  borderInlineStart?: BorderInlineStartProperty<TLength>,
  borderLeft?: BorderLeftProperty<TLength>,
  borderRadius?: BorderRadiusProperty<TLength>,
  borderRight?: BorderRightProperty<TLength>,
  borderStyle?: BorderStyleProperty,
  borderTop?: BorderTopProperty<TLength>,
  borderWidth?: BorderWidthProperty<TLength>,
  columnRule?: ColumnRuleProperty<TLength>,
  columns?: ColumnsProperty<TLength>,
  flex?: FlexProperty<TLength>,
  flexFlow?: FlexFlowProperty,
  font?: FontProperty,
  gap?: GapProperty<TLength>,
  grid?: GridProperty,
  gridArea?: GridAreaProperty,
  gridColumn?: GridColumnProperty,
  gridRow?: GridRowProperty,
  gridTemplate?: GridTemplateProperty,
  lineClamp?: LineClampProperty,
  listStyle?: ListStyleProperty,
  margin?: MarginProperty<TLength>,
  mask?: MaskProperty<TLength>,
  maskBorder?: MaskBorderProperty,
  motion?: OffsetProperty<TLength>,
  offset?: OffsetProperty<TLength>,
  outline?: OutlineProperty<TLength>,
  overflow?: OverflowProperty,
  padding?: PaddingProperty<TLength>,
  placeItems?: PlaceItemsProperty,
  placeSelf?: PlaceSelfProperty,
  textDecoration?: TextDecorationProperty<TLength>,
  textEmphasis?: TextEmphasisProperty,
  transition?: TransitionProperty,
};

export type StandardProperties<TLength = string | 0> = StandardLonghandProperties<TLength> & StandardShorthandProperties<TLength>;

export type VendorLonghandProperties<TLength = string | 0> = {
  MozAnimationDelay?: GlobalsString,
  MozAnimationDirection?: AnimationDirectionProperty,
  MozAnimationDuration?: GlobalsString,
  MozAnimationFillMode?: AnimationFillModeProperty,
  MozAnimationIterationCount?: AnimationIterationCountProperty,
  MozAnimationName?: AnimationNameProperty,
  MozAnimationPlayState?: AnimationPlayStateProperty,
  MozAnimationTimingFunction?: AnimationTimingFunctionProperty,
  MozAppearance?: MozAppearanceProperty,
  MozBackfaceVisibility?: BackfaceVisibilityProperty,
  MozBorderBottomColors?: MozBorderBottomColorsProperty,
  MozBorderEndColor?: BorderInlineEndColorProperty,
  MozBorderEndStyle?: BorderInlineEndStyleProperty,
  MozBorderEndWidth?: BorderInlineEndWidthProperty<TLength>,
  MozBorderLeftColors?: MozBorderLeftColorsProperty,
  MozBorderRightColors?: MozBorderRightColorsProperty,
  MozBorderStartColor?: BorderInlineStartColorProperty,
  MozBorderStartStyle?: BorderInlineStartStyleProperty,
  MozBorderTopColors?: MozBorderTopColorsProperty,
  MozBoxSizing?: BoxSizingProperty,
  MozColumnCount?: ColumnCountProperty,
  MozColumnFill?: ColumnFillProperty,
  MozColumnGap?: ColumnGapProperty<TLength>,
  MozColumnRuleColor?: ColumnRuleColorProperty,
  MozColumnRuleStyle?: ColumnRuleStyleProperty,
  MozColumnRuleWidth?: ColumnRuleWidthProperty<TLength>,
  MozColumnWidth?: ColumnWidthProperty<TLength>,
  MozContextProperties?: MozContextPropertiesProperty,
  MozFontFeatureSettings?: FontFeatureSettingsProperty,
  MozFontLanguageOverride?: FontLanguageOverrideProperty,
  MozHyphens?: HyphensProperty,
  MozImageRegion?: MozImageRegionProperty,
  MozMarginEnd?: MarginInlineEndProperty<TLength>,
  MozMarginStart?: MarginInlineStartProperty<TLength>,
  MozOrient?: MozOrientProperty,
  MozOsxFontSmoothing?: FontSmoothProperty<TLength>,
  MozPaddingEnd?: PaddingInlineEndProperty<TLength>,
  MozPaddingStart?: PaddingInlineStartProperty<TLength>,
  MozPerspective?: PerspectiveProperty<TLength>,
  MozPerspectiveOrigin?: PerspectiveOriginProperty<TLength>,
  MozStackSizing?: MozStackSizingProperty,
  MozTabSize?: TabSizeProperty<TLength>,
  MozTextBlink?: MozTextBlinkProperty,
  MozTextSizeAdjust?: TextSizeAdjustProperty,
  MozTransformOrigin?: TransformOriginProperty<TLength>,
  MozTransformStyle?: TransformStyleProperty,
  MozTransitionDelay?: GlobalsString,
  MozTransitionDuration?: GlobalsString,
  MozTransitionProperty?: TransitionPropertyProperty,
  MozTransitionTimingFunction?: TransitionTimingFunctionProperty,
  MozUserFocus?: MozUserFocusProperty,
  MozUserModify?: MozUserModifyProperty,
  MozUserSelect?: UserSelectProperty,
  MozWindowDragging?: MozWindowDraggingProperty,
  MozWindowShadow?: MozWindowShadowProperty,
  msAccelerator?: MsAcceleratorProperty,
  msAlignSelf?: AlignSelfProperty,
  msBlockProgression?: MsBlockProgressionProperty,
  msContentZoomChaining?: MsContentZoomChainingProperty,
  msContentZoomLimitMax?: GlobalsString,
  msContentZoomLimitMin?: GlobalsString,
  msContentZoomSnapPoints?: GlobalsString,
  msContentZoomSnapType?: MsContentZoomSnapTypeProperty,
  msContentZooming?: MsContentZoomingProperty,
  msFilter?: GlobalsString,
  msFlexDirection?: FlexDirectionProperty,
  msFlexPositive?: GlobalsNumber,
  msFlowFrom?: MsFlowFromProperty,
  msFlowInto?: MsFlowIntoProperty,
  msGridColumns?: MsGridColumnsProperty<TLength>,
  msGridRows?: MsGridRowsProperty<TLength>,
  msHighContrastAdjust?: MsHighContrastAdjustProperty,
  msHyphenateLimitChars?: MsHyphenateLimitCharsProperty,
  msHyphenateLimitLines?: MsHyphenateLimitLinesProperty,
  msHyphenateLimitZone?: MsHyphenateLimitZoneProperty<TLength>,
  msHyphens?: HyphensProperty,
  msImeAlign?: MsImeAlignProperty,
  msJustifySelf?: JustifySelfProperty,
  msLineBreak?: LineBreakProperty,
  msOrder?: GlobalsNumber,
  msOverflowStyle?: MsOverflowStyleProperty,
  msOverflowX?: OverflowXProperty,
  msOverflowY?: OverflowYProperty,
  msScrollChaining?: MsScrollChainingProperty,
  msScrollLimitXMax?: MsScrollLimitXMaxProperty<TLength>,
  msScrollLimitXMin?: MsScrollLimitXMinProperty<TLength>,
  msScrollLimitYMax?: MsScrollLimitYMaxProperty<TLength>,
  msScrollLimitYMin?: MsScrollLimitYMinProperty<TLength>,
  msScrollRails?: MsScrollRailsProperty,
  msScrollSnapPointsX?: GlobalsString,
  msScrollSnapPointsY?: GlobalsString,
  msScrollSnapType?: MsScrollSnapTypeProperty,
  msScrollTranslation?: MsScrollTranslationProperty,
  msScrollbar3dlightColor?: MsScrollbar3dlightColorProperty,
  msScrollbarArrowColor?: MsScrollbarArrowColorProperty,
  msScrollbarBaseColor?: MsScrollbarBaseColorProperty,
  msScrollbarDarkshadowColor?: MsScrollbarDarkshadowColorProperty,
  msScrollbarFaceColor?: MsScrollbarFaceColorProperty,
  msScrollbarHighlightColor?: MsScrollbarHighlightColorProperty,
  msScrollbarShadowColor?: MsScrollbarShadowColorProperty,
  msTextAutospace?: MsTextAutospaceProperty,
  msTextCombineHorizontal?: TextCombineUprightProperty,
  msTextOverflow?: TextOverflowProperty,
  msTouchAction?: TouchActionProperty,
  msTouchSelect?: MsTouchSelectProperty,
  msTransform?: TransformProperty,
  msTransformOrigin?: TransformOriginProperty<TLength>,
  msTransitionDelay?: GlobalsString,
  msTransitionDuration?: GlobalsString,
  msTransitionProperty?: TransitionPropertyProperty,
  msTransitionTimingFunction?: TransitionTimingFunctionProperty,
  msUserSelect?: MsUserSelectProperty,
  msWordBreak?: WordBreakProperty,
  msWrapFlow?: MsWrapFlowProperty,
  msWrapMargin?: MsWrapMarginProperty<TLength>,
  msWrapThrough?: MsWrapThroughProperty,
  msWritingMode?: WritingModeProperty,
  WebkitAlignContent?: AlignContentProperty,
  WebkitAlignItems?: AlignItemsProperty,
  WebkitAlignSelf?: AlignSelfProperty,
  WebkitAnimationDelay?: GlobalsString,
  WebkitAnimationDirection?: AnimationDirectionProperty,
  WebkitAnimationDuration?: GlobalsString,
  WebkitAnimationFillMode?: AnimationFillModeProperty,
  WebkitAnimationIterationCount?: AnimationIterationCountProperty,
  WebkitAnimationName?: AnimationNameProperty,
  WebkitAnimationPlayState?: AnimationPlayStateProperty,
  WebkitAnimationTimingFunction?: AnimationTimingFunctionProperty,
  WebkitAppearance?: WebkitAppearanceProperty,
  WebkitBackdropFilter?: BackdropFilterProperty,
  WebkitBackfaceVisibility?: BackfaceVisibilityProperty,
  WebkitBackgroundClip?: BackgroundClipProperty,
  WebkitBackgroundOrigin?: BackgroundOriginProperty,
  WebkitBackgroundSize?: BackgroundSizeProperty<TLength>,
  WebkitBorderBeforeColor?: WebkitBorderBeforeColorProperty,
  WebkitBorderBeforeStyle?: WebkitBorderBeforeStyleProperty,
  WebkitBorderBeforeWidth?: WebkitBorderBeforeWidthProperty<TLength>,
  WebkitBorderBottomLeftRadius?: BorderBottomLeftRadiusProperty<TLength>,
  WebkitBorderBottomRightRadius?: BorderBottomRightRadiusProperty<TLength>,
  WebkitBorderImageSlice?: BorderImageSliceProperty,
  WebkitBorderTopLeftRadius?: BorderTopLeftRadiusProperty<TLength>,
  WebkitBorderTopRightRadius?: BorderTopRightRadiusProperty<TLength>,
  WebkitBoxDecorationBreak?: BoxDecorationBreakProperty,
  WebkitBoxReflect?: WebkitBoxReflectProperty<TLength>,
  WebkitBoxShadow?: BoxShadowProperty,
  WebkitBoxSizing?: BoxSizingProperty,
  WebkitClipPath?: ClipPathProperty,
  WebkitColumnCount?: ColumnCountProperty,
  WebkitColumnFill?: ColumnFillProperty,
  WebkitColumnGap?: ColumnGapProperty<TLength>,
  WebkitColumnRuleColor?: ColumnRuleColorProperty,
  WebkitColumnRuleStyle?: ColumnRuleStyleProperty,
  WebkitColumnRuleWidth?: ColumnRuleWidthProperty<TLength>,
  WebkitColumnSpan?: ColumnSpanProperty,
  WebkitColumnWidth?: ColumnWidthProperty<TLength>,
  WebkitFilter?: FilterProperty,
  WebkitFlexBasis?: FlexBasisProperty<TLength>,
  WebkitFlexDirection?: FlexDirectionProperty,
  WebkitFlexGrow?: GlobalsNumber,
  WebkitFlexShrink?: GlobalsNumber,
  WebkitFlexWrap?: FlexWrapProperty,
  WebkitFontFeatureSettings?: FontFeatureSettingsProperty,
  WebkitFontKerning?: FontKerningProperty,
  WebkitFontSmoothing?: FontSmoothProperty<TLength>,
  WebkitFontVariantLigatures?: FontVariantLigaturesProperty,
  WebkitHyphens?: HyphensProperty,
  WebkitJustifyContent?: JustifyContentProperty,
  WebkitLineBreak?: LineBreakProperty,
  WebkitLineClamp?: WebkitLineClampProperty,
  WebkitMarginEnd?: MarginInlineEndProperty<TLength>,
  WebkitMarginStart?: MarginInlineStartProperty<TLength>,
  WebkitMaskAttachment?: WebkitMaskAttachmentProperty,
  WebkitMaskBoxImageOutset?: MaskBorderOutsetProperty<TLength>,
  WebkitMaskBoxImageRepeat?: MaskBorderRepeatProperty,
  WebkitMaskBoxImageSlice?: MaskBorderSliceProperty,
  WebkitMaskBoxImageSource?: MaskBorderSourceProperty,
  WebkitMaskBoxImageWidth?: MaskBorderWidthProperty<TLength>,
  WebkitMaskClip?: WebkitMaskClipProperty,
  WebkitMaskComposite?: WebkitMaskCompositeProperty,
  WebkitMaskImage?: WebkitMaskImageProperty,
  WebkitMaskOrigin?: WebkitMaskOriginProperty,
  WebkitMaskPosition?: WebkitMaskPositionProperty<TLength>,
  WebkitMaskPositionX?: WebkitMaskPositionXProperty<TLength>,
  WebkitMaskPositionY?: WebkitMaskPositionYProperty<TLength>,
  WebkitMaskRepeat?: WebkitMaskRepeatProperty,
  WebkitMaskRepeatX?: WebkitMaskRepeatXProperty,
  WebkitMaskRepeatY?: WebkitMaskRepeatYProperty,
  WebkitMaskSize?: WebkitMaskSizeProperty<TLength>,
  WebkitMaxInlineSize?: MaxInlineSizeProperty<TLength>,
  WebkitOrder?: GlobalsNumber,
  WebkitOverflowScrolling?: WebkitOverflowScrollingProperty,
  WebkitPaddingEnd?: PaddingInlineEndProperty<TLength>,
  WebkitPaddingStart?: PaddingInlineStartProperty<TLength>,
  WebkitPerspective?: PerspectiveProperty<TLength>,
  WebkitPerspectiveOrigin?: PerspectiveOriginProperty<TLength>,
  WebkitPrintColorAdjust?: ColorAdjustProperty,
  WebkitRubyPosition?: RubyPositionProperty,
  WebkitScrollSnapType?: ScrollSnapTypeProperty,
  WebkitShapeMargin?: ShapeMarginProperty<TLength>,
  WebkitTapHighlightColor?: WebkitTapHighlightColorProperty,
  WebkitTextCombine?: TextCombineUprightProperty,
  WebkitTextDecorationColor?: TextDecorationColorProperty,
  WebkitTextDecorationLine?: TextDecorationLineProperty,
  WebkitTextDecorationSkip?: TextDecorationSkipProperty,
  WebkitTextDecorationStyle?: TextDecorationStyleProperty,
  WebkitTextEmphasisColor?: TextEmphasisColorProperty,
  WebkitTextEmphasisPosition?: GlobalsString,
  WebkitTextEmphasisStyle?: TextEmphasisStyleProperty,
  WebkitTextFillColor?: WebkitTextFillColorProperty,
  WebkitTextOrientation?: TextOrientationProperty,
  WebkitTextSizeAdjust?: TextSizeAdjustProperty,
  WebkitTextStrokeColor?: WebkitTextStrokeColorProperty,
  WebkitTextStrokeWidth?: WebkitTextStrokeWidthProperty<TLength>,
  WebkitTextUnderlinePosition?: TextUnderlinePositionProperty,
  WebkitTouchCallout?: WebkitTouchCalloutProperty,
  WebkitTransform?: TransformProperty,
  WebkitTransformOrigin?: TransformOriginProperty<TLength>,
  WebkitTransformStyle?: TransformStyleProperty,
  WebkitTransitionDelay?: GlobalsString,
  WebkitTransitionDuration?: GlobalsString,
  WebkitTransitionProperty?: TransitionPropertyProperty,
  WebkitTransitionTimingFunction?: TransitionTimingFunctionProperty,
  WebkitUserModify?: WebkitUserModifyProperty,
  WebkitUserSelect?: UserSelectProperty,
  WebkitWritingMode?: WritingModeProperty,
};

export type VendorShorthandProperties<TLength = string | 0> = {
  MozAnimation?: AnimationProperty,
  MozBorderImage?: BorderImageProperty,
  MozColumnRule?: ColumnRuleProperty<TLength>,
  MozColumns?: ColumnsProperty<TLength>,
  MozTransition?: TransitionProperty,
  msContentZoomLimit?: GlobalsString,
  msContentZoomSnap?: MsContentZoomSnapProperty,
  msFlex?: FlexProperty<TLength>,
  msScrollLimit?: GlobalsString,
  msScrollSnapX?: GlobalsString,
  msScrollSnapY?: GlobalsString,
  msTransition?: TransitionProperty,
  WebkitAnimation?: AnimationProperty,
  WebkitBorderBefore?: WebkitBorderBeforeProperty<TLength>,
  WebkitBorderImage?: BorderImageProperty,
  WebkitBorderRadius?: BorderRadiusProperty<TLength>,
  WebkitColumnRule?: ColumnRuleProperty<TLength>,
  WebkitColumns?: ColumnsProperty<TLength>,
  WebkitFlex?: FlexProperty<TLength>,
  WebkitFlexFlow?: FlexFlowProperty,
  WebkitMask?: WebkitMaskProperty<TLength>,
  WebkitMaskBoxImage?: MaskBorderProperty,
  WebkitTextEmphasis?: TextEmphasisProperty,
  WebkitTextStroke?: WebkitTextStrokeProperty<TLength>,
  WebkitTransition?: TransitionProperty,
};

export type VendorProperties<TLength = string | 0> = VendorLonghandProperties<TLength> & VendorShorthandProperties<TLength>;

export type ObsoleteProperties<TLength = string | 0> = {
  azimuth?: AzimuthProperty,
  boxAlign?: BoxAlignProperty,
  boxDirection?: BoxDirectionProperty,
  boxFlex?: GlobalsNumber,
  boxFlexGroup?: GlobalsNumber,
  boxLines?: BoxLinesProperty,
  boxOrdinalGroup?: GlobalsNumber,
  boxOrient?: BoxOrientProperty,
  boxPack?: BoxPackProperty,
  clip?: ClipProperty,
  fontVariantAlternates?: FontVariantAlternatesProperty,
  gridColumnGap?: GridColumnGapProperty<TLength>,
  gridGap?: GridGapProperty<TLength>,
  gridRowGap?: GridRowGapProperty<TLength>,
  imeMode?: ImeModeProperty,
  offsetBlock?: InsetBlockProperty<TLength>,
  offsetBlockEnd?: InsetBlockEndProperty<TLength>,
  offsetBlockStart?: InsetBlockStartProperty<TLength>,
  offsetInline?: InsetInlineProperty<TLength>,
  offsetInlineEnd?: InsetInlineEndProperty<TLength>,
  offsetInlineStart?: InsetInlineStartProperty<TLength>,
  scrollSnapCoordinate?: ScrollSnapCoordinateProperty<TLength>,
  scrollSnapDestination?: ScrollSnapDestinationProperty<TLength>,
  scrollSnapPointsX?: ScrollSnapPointsXProperty,
  scrollSnapPointsY?: ScrollSnapPointsYProperty,
  scrollSnapTypeX?: ScrollSnapTypeXProperty,
  scrollSnapTypeY?: ScrollSnapTypeYProperty,
  scrollbarTrackColor?: MsScrollbarTrackColorProperty,
  textCombineHorizontal?: TextCombineUprightProperty,
  KhtmlBoxAlign?: BoxAlignProperty,
  KhtmlBoxDirection?: BoxDirectionProperty,
  KhtmlBoxFlex?: GlobalsNumber,
  KhtmlBoxFlexGroup?: GlobalsNumber,
  KhtmlBoxLines?: BoxLinesProperty,
  KhtmlBoxOrdinalGroup?: GlobalsNumber,
  KhtmlBoxOrient?: BoxOrientProperty,
  KhtmlBoxPack?: BoxPackProperty,
  KhtmlLineBreak?: LineBreakProperty,
  KhtmlOpacity?: OpacityProperty,
  KhtmlUserSelect?: UserSelectProperty,
  MozBackgroundClip?: BackgroundClipProperty,
  MozBackgroundInlinePolicy?: BoxDecorationBreakProperty,
  MozBackgroundOrigin?: BackgroundOriginProperty,
  MozBackgroundSize?: BackgroundSizeProperty<TLength>,
  MozBinding?: MozBindingProperty,
  MozBorderRadius?: BorderRadiusProperty<TLength>,
  MozBorderRadiusBottomleft?: BorderBottomLeftRadiusProperty<TLength>,
  MozBorderRadiusBottomright?: BorderBottomRightRadiusProperty<TLength>,
  MozBorderRadiusTopleft?: BorderTopLeftRadiusProperty<TLength>,
  MozBorderRadiusTopright?: BorderTopRightRadiusProperty<TLength>,
  MozBoxAlign?: BoxAlignProperty,
  MozBoxDirection?: BoxDirectionProperty,
  MozBoxFlex?: GlobalsNumber,
  MozBoxOrdinalGroup?: GlobalsNumber,
  MozBoxOrient?: BoxOrientProperty,
  MozBoxPack?: BoxPackProperty,
  MozBoxShadow?: BoxShadowProperty,
  MozFloatEdge?: MozFloatEdgeProperty,
  MozForceBrokenImageIcon?: GlobalsNumber,
  MozOpacity?: OpacityProperty,
  MozOutline?: OutlineProperty<TLength>,
  MozOutlineColor?: OutlineColorProperty,
  MozOutlineRadius?: MozOutlineRadiusProperty<TLength>,
  MozOutlineRadiusBottomleft?: MozOutlineRadiusBottomleftProperty<TLength>,
  MozOutlineRadiusBottomright?: MozOutlineRadiusBottomrightProperty<TLength>,
  MozOutlineRadiusTopleft?: MozOutlineRadiusTopleftProperty<TLength>,
  MozOutlineRadiusTopright?: MozOutlineRadiusToprightProperty<TLength>,
  MozOutlineStyle?: OutlineStyleProperty,
  MozOutlineWidth?: OutlineWidthProperty<TLength>,
  MozTextAlignLast?: TextAlignLastProperty,
  MozTextDecorationColor?: TextDecorationColorProperty,
  MozTextDecorationLine?: TextDecorationLineProperty,
  MozTextDecorationStyle?: TextDecorationStyleProperty,
  MozUserInput?: MozUserInputProperty,
  msImeMode?: ImeModeProperty,
  msScrollbarTrackColor?: MsScrollbarTrackColorProperty,
  OAnimation?: AnimationProperty,
  OAnimationDelay?: GlobalsString,
  OAnimationDirection?: AnimationDirectionProperty,
  OAnimationDuration?: GlobalsString,
  OAnimationFillMode?: AnimationFillModeProperty,
  OAnimationIterationCount?: AnimationIterationCountProperty,
  OAnimationName?: AnimationNameProperty,
  OAnimationPlayState?: AnimationPlayStateProperty,
  OAnimationTimingFunction?: AnimationTimingFunctionProperty,
  OBackgroundSize?: BackgroundSizeProperty<TLength>,
  OBorderImage?: BorderImageProperty,
  OObjectFit?: ObjectFitProperty,
  OObjectPosition?: ObjectPositionProperty<TLength>,
  OTabSize?: TabSizeProperty<TLength>,
  OTextOverflow?: TextOverflowProperty,
  OTransform?: TransformProperty,
  OTransformOrigin?: TransformOriginProperty<TLength>,
  OTransition?: TransitionProperty,
  OTransitionDelay?: GlobalsString,
  OTransitionDuration?: GlobalsString,
  OTransitionProperty?: TransitionPropertyProperty,
  OTransitionTimingFunction?: TransitionTimingFunctionProperty,
  WebkitBoxAlign?: BoxAlignProperty,
  WebkitBoxDirection?: BoxDirectionProperty,
  WebkitBoxFlex?: GlobalsNumber,
  WebkitBoxFlexGroup?: GlobalsNumber,
  WebkitBoxLines?: BoxLinesProperty,
  WebkitBoxOrdinalGroup?: GlobalsNumber,
  WebkitBoxOrient?: BoxOrientProperty,
  WebkitBoxPack?: BoxPackProperty,
  WebkitScrollSnapPointsX?: ScrollSnapPointsXProperty,
  WebkitScrollSnapPointsY?: ScrollSnapPointsYProperty,
};

export type SvgProperties<TLength = string | 0> = {
  alignmentBaseline?: AlignmentBaselineProperty,
  baselineShift?: BaselineShiftProperty<TLength>,
  clip?: ClipProperty,
  clipPath?: ClipPathProperty,
  clipRule?: ClipRuleProperty,
  color?: ColorProperty,
  colorInterpolation?: ColorInterpolationProperty,
  colorRendering?: ColorRenderingProperty,
  cursor?: CursorProperty,
  direction?: DirectionProperty,
  display?: DisplayProperty,
  dominantBaseline?: DominantBaselineProperty,
  fill?: FillProperty,
  fillOpacity?: GlobalsNumber,
  fillRule?: FillRuleProperty,
  filter?: FilterProperty,
  floodColor?: FloodColorProperty,
  floodOpacity?: GlobalsNumber,
  font?: FontProperty,
  fontFamily?: FontFamilyProperty,
  fontSize?: FontSizeProperty<TLength>,
  fontSizeAdjust?: FontSizeAdjustProperty,
  fontStretch?: FontStretchProperty,
  fontStyle?: FontStyleProperty,
  fontVariant?: FontVariantProperty,
  fontWeight?: FontWeightProperty,
  glyphOrientationVertical?: GlyphOrientationVerticalProperty,
  imageRendering?: ImageRenderingProperty,
  letterSpacing?: LetterSpacingProperty<TLength>,
  lightingColor?: LightingColorProperty,
  lineHeight?: LineHeightProperty<TLength>,
  marker?: MarkerProperty,
  markerEnd?: MarkerEndProperty,
  markerMid?: MarkerMidProperty,
  markerStart?: MarkerStartProperty,
  mask?: MaskProperty<TLength>,
  opacity?: OpacityProperty,
  overflow?: OverflowProperty,
  paintOrder?: PaintOrderProperty,
  pointerEvents?: PointerEventsProperty,
  shapeRendering?: ShapeRenderingProperty,
  stopColor?: StopColorProperty,
  stopOpacity?: GlobalsNumber,
  stroke?: StrokeProperty,
  strokeDasharray?: StrokeDasharrayProperty<TLength>,
  strokeDashoffset?: StrokeDashoffsetProperty<TLength>,
  strokeLinecap?: StrokeLinecapProperty,
  strokeLinejoin?: StrokeLinejoinProperty,
  strokeMiterlimit?: GlobalsNumber,
  strokeOpacity?: GlobalsNumber,
  strokeWidth?: StrokeWidthProperty<TLength>,
  textAnchor?: TextAnchorProperty,
  textDecoration?: TextDecorationProperty<TLength>,
  textRendering?: TextRenderingProperty,
  unicodeBidi?: UnicodeBidiProperty,
  vectorEffect?: VectorEffectProperty,
  visibility?: VisibilityProperty,
  whiteSpace?: WhiteSpaceProperty,
  wordSpacing?: WordSpacingProperty<TLength>,
  writingMode?: WritingModeProperty,
};

export type Properties<TLength = string | 0> = StandardProperties<TLength> & VendorProperties<TLength> & ObsoleteProperties<TLength> & SvgProperties<TLength>;

export type StandardLonghandPropertiesHyphen<TLength = string | 0> = {
  "align-content"?: AlignContentProperty,
  "align-items"?: AlignItemsProperty,
  "align-self"?: AlignSelfProperty,
  "align-tracks"?: AlignTracksProperty,
  "animation-delay"?: GlobalsString,
  "animation-direction"?: AnimationDirectionProperty,
  "animation-duration"?: GlobalsString,
  "animation-fill-mode"?: AnimationFillModeProperty,
  "animation-iteration-count"?: AnimationIterationCountProperty,
  "animation-name"?: AnimationNameProperty,
  "animation-play-state"?: AnimationPlayStateProperty,
  "animation-timing-function"?: AnimationTimingFunctionProperty,
  appearance?: AppearanceProperty,
  "aspect-ratio"?: AspectRatioProperty,
  "backdrop-filter"?: BackdropFilterProperty,
  "backface-visibility"?: BackfaceVisibilityProperty,
  "background-attachment"?: BackgroundAttachmentProperty,
  "background-blend-mode"?: BackgroundBlendModeProperty,
  "background-clip"?: BackgroundClipProperty,
  "background-color"?: BackgroundColorProperty,
  "background-image"?: BackgroundImageProperty,
  "background-origin"?: BackgroundOriginProperty,
  "background-position"?: BackgroundPositionProperty<TLength>,
  "background-position-x"?: BackgroundPositionXProperty<TLength>,
  "background-position-y"?: BackgroundPositionYProperty<TLength>,
  "background-repeat"?: BackgroundRepeatProperty,
  "background-size"?: BackgroundSizeProperty<TLength>,
  "block-overflow"?: BlockOverflowProperty,
  "block-size"?: BlockSizeProperty<TLength>,
  "border-block-color"?: BorderBlockColorProperty,
  "border-block-end-color"?: BorderBlockEndColorProperty,
  "border-block-end-style"?: BorderBlockEndStyleProperty,
  "border-block-end-width"?: BorderBlockEndWidthProperty<TLength>,
  "border-block-start-color"?: BorderBlockStartColorProperty,
  "border-block-start-style"?: BorderBlockStartStyleProperty,
  "border-block-start-width"?: BorderBlockStartWidthProperty<TLength>,
  "border-block-style"?: BorderBlockStyleProperty,
  "border-block-width"?: BorderBlockWidthProperty<TLength>,
  "border-bottom-color"?: BorderBottomColorProperty,
  "border-bottom-left-radius"?: BorderBottomLeftRadiusProperty<TLength>,
  "border-bottom-right-radius"?: BorderBottomRightRadiusProperty<TLength>,
  "border-bottom-style"?: BorderBottomStyleProperty,
  "border-bottom-width"?: BorderBottomWidthProperty<TLength>,
  "border-collapse"?: BorderCollapseProperty,
  "border-end-end-radius"?: BorderEndEndRadiusProperty<TLength>,
  "border-end-start-radius"?: BorderEndStartRadiusProperty<TLength>,
  "border-image-outset"?: BorderImageOutsetProperty<TLength>,
  "border-image-repeat"?: BorderImageRepeatProperty,
  "border-image-slice"?: BorderImageSliceProperty,
  "border-image-source"?: BorderImageSourceProperty,
  "border-image-width"?: BorderImageWidthProperty<TLength>,
  "border-inline-color"?: BorderInlineColorProperty,
  "border-inline-end-color"?: BorderInlineEndColorProperty,
  "border-inline-end-style"?: BorderInlineEndStyleProperty,
  "border-inline-end-width"?: BorderInlineEndWidthProperty<TLength>,
  "border-inline-start-color"?: BorderInlineStartColorProperty,
  "border-inline-start-style"?: BorderInlineStartStyleProperty,
  "border-inline-start-width"?: BorderInlineStartWidthProperty<TLength>,
  "border-inline-style"?: BorderInlineStyleProperty,
  "border-inline-width"?: BorderInlineWidthProperty<TLength>,
  "border-left-color"?: BorderLeftColorProperty,
  "border-left-style"?: BorderLeftStyleProperty,
  "border-left-width"?: BorderLeftWidthProperty<TLength>,
  "border-right-color"?: BorderRightColorProperty,
  "border-right-style"?: BorderRightStyleProperty,
  "border-right-width"?: BorderRightWidthProperty<TLength>,
  "border-spacing"?: BorderSpacingProperty<TLength>,
  "border-start-end-radius"?: BorderStartEndRadiusProperty<TLength>,
  "border-start-start-radius"?: BorderStartStartRadiusProperty<TLength>,
  "border-top-color"?: BorderTopColorProperty,
  "border-top-left-radius"?: BorderTopLeftRadiusProperty<TLength>,
  "border-top-right-radius"?: BorderTopRightRadiusProperty<TLength>,
  "border-top-style"?: BorderTopStyleProperty,
  "border-top-width"?: BorderTopWidthProperty<TLength>,
  bottom?: BottomProperty<TLength>,
  "box-decoration-break"?: BoxDecorationBreakProperty,
  "box-shadow"?: BoxShadowProperty,
  "box-sizing"?: BoxSizingProperty,
  "break-after"?: BreakAfterProperty,
  "break-before"?: BreakBeforeProperty,
  "break-inside"?: BreakInsideProperty,
  "caption-side"?: CaptionSideProperty,
  "caret-color"?: CaretColorProperty,
  clear?: ClearProperty,
  "clip-path"?: ClipPathProperty,
  color?: ColorProperty,
  "color-adjust"?: ColorAdjustProperty,
  "column-count"?: ColumnCountProperty,
  "column-fill"?: ColumnFillProperty,
  "column-gap"?: ColumnGapProperty<TLength>,
  "column-rule-color"?: ColumnRuleColorProperty,
  "column-rule-style"?: ColumnRuleStyleProperty,
  "column-rule-width"?: ColumnRuleWidthProperty<TLength>,
  "column-span"?: ColumnSpanProperty,
  "column-width"?: ColumnWidthProperty<TLength>,
  contain?: ContainProperty,
  content?: ContentProperty,
  "content-visibility"?: ContentVisibilityProperty,
  "counter-increment"?: CounterIncrementProperty,
  "counter-reset"?: CounterResetProperty,
  "counter-set"?: CounterSetProperty,
  cursor?: CursorProperty,
  direction?: DirectionProperty,
  display?: DisplayProperty,
  "empty-cells"?: EmptyCellsProperty,
  filter?: FilterProperty,
  "flex-basis"?: FlexBasisProperty<TLength>,
  "flex-direction"?: FlexDirectionProperty,
  "flex-grow"?: GlobalsNumber,
  "flex-shrink"?: GlobalsNumber,
  "flex-wrap"?: FlexWrapProperty,
  float?: FloatProperty,
  "font-family"?: FontFamilyProperty,
  "font-feature-settings"?: FontFeatureSettingsProperty,
  "font-kerning"?: FontKerningProperty,
  "font-language-override"?: FontLanguageOverrideProperty,
  "font-optical-sizing"?: FontOpticalSizingProperty,
  "font-size"?: FontSizeProperty<TLength>,
  "font-size-adjust"?: FontSizeAdjustProperty,
  "font-smooth"?: FontSmoothProperty<TLength>,
  "font-stretch"?: FontStretchProperty,
  "font-style"?: FontStyleProperty,
  "font-synthesis"?: FontSynthesisProperty,
  "font-variant"?: FontVariantProperty,
  "font-variant-caps"?: FontVariantCapsProperty,
  "font-variant-east-asian"?: FontVariantEastAsianProperty,
  "font-variant-ligatures"?: FontVariantLigaturesProperty,
  "font-variant-numeric"?: FontVariantNumericProperty,
  "font-variant-position"?: FontVariantPositionProperty,
  "font-variation-settings"?: FontVariationSettingsProperty,
  "font-weight"?: FontWeightProperty,
  "forced-color-adjust"?: ForcedColorAdjustProperty,
  "grid-auto-columns"?: GridAutoColumnsProperty<TLength>,
  "grid-auto-flow"?: GridAutoFlowProperty,
  "grid-auto-rows"?: GridAutoRowsProperty<TLength>,
  "grid-column-end"?: GridColumnEndProperty,
  "grid-column-start"?: GridColumnStartProperty,
  "grid-row-end"?: GridRowEndProperty,
  "grid-row-start"?: GridRowStartProperty,
  "grid-template-areas"?: GridTemplateAreasProperty,
  "grid-template-columns"?: GridTemplateColumnsProperty<TLength>,
  "grid-template-rows"?: GridTemplateRowsProperty<TLength>,
  "hanging-punctuation"?: HangingPunctuationProperty,
  height?: HeightProperty<TLength>,
  hyphens?: HyphensProperty,
  "image-orientation"?: ImageOrientationProperty,
  "image-rendering"?: ImageRenderingProperty,
  "image-resolution"?: ImageResolutionProperty,
  "initial-letter"?: InitialLetterProperty,
  "inline-size"?: InlineSizeProperty<TLength>,
  inset?: InsetProperty<TLength>,
  "inset-block"?: InsetBlockProperty<TLength>,
  "inset-block-end"?: InsetBlockEndProperty<TLength>,
  "inset-block-start"?: InsetBlockStartProperty<TLength>,
  "inset-inline"?: InsetInlineProperty<TLength>,
  "inset-inline-end"?: InsetInlineEndProperty<TLength>,
  "inset-inline-start"?: InsetInlineStartProperty<TLength>,
  isolation?: IsolationProperty,
  "justify-content"?: JustifyContentProperty,
  "justify-items"?: JustifyItemsProperty,
  "justify-self"?: JustifySelfProperty,
  "justify-tracks"?: JustifyTracksProperty,
  left?: LeftProperty<TLength>,
  "letter-spacing"?: LetterSpacingProperty<TLength>,
  "line-break"?: LineBreakProperty,
  "line-height"?: LineHeightProperty<TLength>,
  "line-height-step"?: LineHeightStepProperty<TLength>,
  "list-style-image"?: ListStyleImageProperty,
  "list-style-position"?: ListStylePositionProperty,
  "list-style-type"?: ListStyleTypeProperty,
  "margin-block"?: MarginBlockProperty<TLength>,
  "margin-block-end"?: MarginBlockEndProperty<TLength>,
  "margin-block-start"?: MarginBlockStartProperty<TLength>,
  "margin-bottom"?: MarginBottomProperty<TLength>,
  "margin-inline"?: MarginInlineProperty<TLength>,
  "margin-inline-end"?: MarginInlineEndProperty<TLength>,
  "margin-inline-start"?: MarginInlineStartProperty<TLength>,
  "margin-left"?: MarginLeftProperty<TLength>,
  "margin-right"?: MarginRightProperty<TLength>,
  "margin-top"?: MarginTopProperty<TLength>,
  "mask-border-mode"?: MaskBorderModeProperty,
  "mask-border-outset"?: MaskBorderOutsetProperty<TLength>,
  "mask-border-repeat"?: MaskBorderRepeatProperty,
  "mask-border-slice"?: MaskBorderSliceProperty,
  "mask-border-source"?: MaskBorderSourceProperty,
  "mask-border-width"?: MaskBorderWidthProperty<TLength>,
  "mask-clip"?: MaskClipProperty,
  "mask-composite"?: MaskCompositeProperty,
  "mask-image"?: MaskImageProperty,
  "mask-mode"?: MaskModeProperty,
  "mask-origin"?: MaskOriginProperty,
  "mask-position"?: MaskPositionProperty<TLength>,
  "mask-repeat"?: MaskRepeatProperty,
  "mask-size"?: MaskSizeProperty<TLength>,
  "mask-type"?: MaskTypeProperty,
  "math-style"?: MathStyleProperty,
  "max-block-size"?: MaxBlockSizeProperty<TLength>,
  "max-height"?: MaxHeightProperty<TLength>,
  "max-inline-size"?: MaxInlineSizeProperty<TLength>,
  "max-lines"?: MaxLinesProperty,
  "max-width"?: MaxWidthProperty<TLength>,
  "min-block-size"?: MinBlockSizeProperty<TLength>,
  "min-height"?: MinHeightProperty<TLength>,
  "min-inline-size"?: MinInlineSizeProperty<TLength>,
  "min-width"?: MinWidthProperty<TLength>,
  "mix-blend-mode"?: MixBlendModeProperty,
  "motion-distance"?: OffsetDistanceProperty<TLength>,
  "motion-path"?: OffsetPathProperty,
  "motion-rotation"?: OffsetRotateProperty,
  "object-fit"?: ObjectFitProperty,
  "object-position"?: ObjectPositionProperty<TLength>,
  "offset-anchor"?: OffsetAnchorProperty<TLength>,
  "offset-distance"?: OffsetDistanceProperty<TLength>,
  "offset-path"?: OffsetPathProperty,
  "offset-rotate"?: OffsetRotateProperty,
  "offset-rotation"?: OffsetRotateProperty,
  opacity?: OpacityProperty,
  order?: GlobalsNumber,
  orphans?: GlobalsNumber,
  "outline-color"?: OutlineColorProperty,
  "outline-offset"?: OutlineOffsetProperty<TLength>,
  "outline-style"?: OutlineStyleProperty,
  "outline-width"?: OutlineWidthProperty<TLength>,
  "overflow-anchor"?: OverflowAnchorProperty,
  "overflow-block"?: OverflowBlockProperty,
  "overflow-clip-box"?: OverflowClipBoxProperty,
  "overflow-inline"?: OverflowInlineProperty,
  "overflow-wrap"?: OverflowWrapProperty,
  "overflow-x"?: OverflowXProperty,
  "overflow-y"?: OverflowYProperty,
  "overscroll-behavior"?: OverscrollBehaviorProperty,
  "overscroll-behavior-block"?: OverscrollBehaviorBlockProperty,
  "overscroll-behavior-inline"?: OverscrollBehaviorInlineProperty,
  "overscroll-behavior-x"?: OverscrollBehaviorXProperty,
  "overscroll-behavior-y"?: OverscrollBehaviorYProperty,
  "padding-block"?: PaddingBlockProperty<TLength>,
  "padding-block-end"?: PaddingBlockEndProperty<TLength>,
  "padding-block-start"?: PaddingBlockStartProperty<TLength>,
  "padding-bottom"?: PaddingBottomProperty<TLength>,
  "padding-inline"?: PaddingInlineProperty<TLength>,
  "padding-inline-end"?: PaddingInlineEndProperty<TLength>,
  "padding-inline-start"?: PaddingInlineStartProperty<TLength>,
  "padding-left"?: PaddingLeftProperty<TLength>,
  "padding-right"?: PaddingRightProperty<TLength>,
  "padding-top"?: PaddingTopProperty<TLength>,
  "page-break-after"?: PageBreakAfterProperty,
  "page-break-before"?: PageBreakBeforeProperty,
  "page-break-inside"?: PageBreakInsideProperty,
  "paint-order"?: PaintOrderProperty,
  perspective?: PerspectiveProperty<TLength>,
  "perspective-origin"?: PerspectiveOriginProperty<TLength>,
  "place-content"?: PlaceContentProperty,
  "pointer-events"?: PointerEventsProperty,
  position?: PositionProperty,
  quotes?: QuotesProperty,
  resize?: ResizeProperty,
  right?: RightProperty<TLength>,
  rotate?: RotateProperty,
  "row-gap"?: RowGapProperty<TLength>,
  "ruby-align"?: RubyAlignProperty,
  "ruby-merge"?: RubyMergeProperty,
  "ruby-position"?: RubyPositionProperty,
  scale?: ScaleProperty,
  "scroll-behavior"?: ScrollBehaviorProperty,
  "scroll-margin"?: ScrollMarginProperty<TLength>,
  "scroll-margin-block"?: ScrollMarginBlockProperty<TLength>,
  "scroll-margin-block-end"?: ScrollMarginBlockEndProperty<TLength>,
  "scroll-margin-block-start"?: ScrollMarginBlockStartProperty<TLength>,
  "scroll-margin-bottom"?: ScrollMarginBottomProperty<TLength>,
  "scroll-margin-inline"?: ScrollMarginInlineProperty<TLength>,
  "scroll-margin-inline-end"?: ScrollMarginInlineEndProperty<TLength>,
  "scroll-margin-inline-start"?: ScrollMarginInlineStartProperty<TLength>,
  "scroll-margin-left"?: ScrollMarginLeftProperty<TLength>,
  "scroll-margin-right"?: ScrollMarginRightProperty<TLength>,
  "scroll-margin-top"?: ScrollMarginTopProperty<TLength>,
  "scroll-padding"?: ScrollPaddingProperty<TLength>,
  "scroll-padding-block"?: ScrollPaddingBlockProperty<TLength>,
  "scroll-padding-block-end"?: ScrollPaddingBlockEndProperty<TLength>,
  "scroll-padding-block-start"?: ScrollPaddingBlockStartProperty<TLength>,
  "scroll-padding-bottom"?: ScrollPaddingBottomProperty<TLength>,
  "scroll-padding-inline"?: ScrollPaddingInlineProperty<TLength>,
  "scroll-padding-inline-end"?: ScrollPaddingInlineEndProperty<TLength>,
  "scroll-padding-inline-start"?: ScrollPaddingInlineStartProperty<TLength>,
  "scroll-padding-left"?: ScrollPaddingLeftProperty<TLength>,
  "scroll-padding-right"?: ScrollPaddingRightProperty<TLength>,
  "scroll-padding-top"?: ScrollPaddingTopProperty<TLength>,
  "scroll-snap-align"?: ScrollSnapAlignProperty,
  "scroll-snap-margin"?: ScrollMarginProperty<TLength>,
  "scroll-snap-margin-bottom"?: ScrollMarginBottomProperty<TLength>,
  "scroll-snap-margin-left"?: ScrollMarginLeftProperty<TLength>,
  "scroll-snap-margin-right"?: ScrollMarginRightProperty<TLength>,
  "scroll-snap-margin-top"?: ScrollMarginTopProperty<TLength>,
  "scroll-snap-stop"?: ScrollSnapStopProperty,
  "scroll-snap-type"?: ScrollSnapTypeProperty,
  "scrollbar-color"?: ScrollbarColorProperty,
  "scrollbar-gutter"?: ScrollbarGutterProperty,
  "scrollbar-width"?: ScrollbarWidthProperty,
  "shape-image-threshold"?: ShapeImageThresholdProperty,
  "shape-margin"?: ShapeMarginProperty<TLength>,
  "shape-outside"?: ShapeOutsideProperty,
  "tab-size"?: TabSizeProperty<TLength>,
  "table-layout"?: TableLayoutProperty,
  "text-align"?: TextAlignProperty,
  "text-align-last"?: TextAlignLastProperty,
  "text-combine-upright"?: TextCombineUprightProperty,
  "text-decoration-color"?: TextDecorationColorProperty,
  "text-decoration-line"?: TextDecorationLineProperty,
  "text-decoration-skip"?: TextDecorationSkipProperty,
  "text-decoration-skip-ink"?: TextDecorationSkipInkProperty,
  "text-decoration-style"?: TextDecorationStyleProperty,
  "text-decoration-thickness"?: TextDecorationThicknessProperty<TLength>,
  "text-decoration-width"?: TextDecorationThicknessProperty<TLength>,
  "text-emphasis-color"?: TextEmphasisColorProperty,
  "text-emphasis-position"?: GlobalsString,
  "text-emphasis-style"?: TextEmphasisStyleProperty,
  "text-indent"?: TextIndentProperty<TLength>,
  "text-justify"?: TextJustifyProperty,
  "text-orientation"?: TextOrientationProperty,
  "text-overflow"?: TextOverflowProperty,
  "text-rendering"?: TextRenderingProperty,
  "text-shadow"?: TextShadowProperty,
  "text-size-adjust"?: TextSizeAdjustProperty,
  "text-transform"?: TextTransformProperty,
  "text-underline-offset"?: TextUnderlineOffsetProperty<TLength>,
  "text-underline-position"?: TextUnderlinePositionProperty,
  top?: TopProperty<TLength>,
  "touch-action"?: TouchActionProperty,
  transform?: TransformProperty,
  "transform-box"?: TransformBoxProperty,
  "transform-origin"?: TransformOriginProperty<TLength>,
  "transform-style"?: TransformStyleProperty,
  "transition-delay"?: GlobalsString,
  "transition-duration"?: GlobalsString,
  "transition-property"?: TransitionPropertyProperty,
  "transition-timing-function"?: TransitionTimingFunctionProperty,
  translate?: TranslateProperty<TLength>,
  "unicode-bidi"?: UnicodeBidiProperty,
  "user-select"?: UserSelectProperty,
  "vertical-align"?: VerticalAlignProperty<TLength>,
  visibility?: VisibilityProperty,
  "white-space"?: WhiteSpaceProperty,
  widows?: GlobalsNumber,
  width?: WidthProperty<TLength>,
  "will-change"?: WillChangeProperty,
  "word-break"?: WordBreakProperty,
  "word-spacing"?: WordSpacingProperty<TLength>,
  "word-wrap"?: WordWrapProperty,
  "writing-mode"?: WritingModeProperty,
  "z-index"?: ZIndexProperty,
  zoom?: ZoomProperty,
};

export type StandardShorthandPropertiesHyphen<TLength = string | 0> = {
  all?: Globals,
  animation?: AnimationProperty,
  background?: BackgroundProperty<TLength>,
  border?: BorderProperty<TLength>,
  "border-block"?: BorderBlockProperty<TLength>,
  "border-block-end"?: BorderBlockEndProperty<TLength>,
  "border-block-start"?: BorderBlockStartProperty<TLength>,
  "border-bottom"?: BorderBottomProperty<TLength>,
  "border-color"?: BorderColorProperty,
  "border-image"?: BorderImageProperty,
  "border-inline"?: BorderInlineProperty<TLength>,
  "border-inline-end"?: BorderInlineEndProperty<TLength>,
  "border-inline-start"?: BorderInlineStartProperty<TLength>,
  "border-left"?: BorderLeftProperty<TLength>,
  "border-radius"?: BorderRadiusProperty<TLength>,
  "border-right"?: BorderRightProperty<TLength>,
  "border-style"?: BorderStyleProperty,
  "border-top"?: BorderTopProperty<TLength>,
  "border-width"?: BorderWidthProperty<TLength>,
  "column-rule"?: ColumnRuleProperty<TLength>,
  columns?: ColumnsProperty<TLength>,
  flex?: FlexProperty<TLength>,
  "flex-flow"?: FlexFlowProperty,
  font?: FontProperty,
  gap?: GapProperty<TLength>,
  grid?: GridProperty,
  "grid-area"?: GridAreaProperty,
  "grid-column"?: GridColumnProperty,
  "grid-row"?: GridRowProperty,
  "grid-template"?: GridTemplateProperty,
  "line-clamp"?: LineClampProperty,
  "list-style"?: ListStyleProperty,
  margin?: MarginProperty<TLength>,
  mask?: MaskProperty<TLength>,
  "mask-border"?: MaskBorderProperty,
  motion?: OffsetProperty<TLength>,
  offset?: OffsetProperty<TLength>,
  outline?: OutlineProperty<TLength>,
  overflow?: OverflowProperty,
  padding?: PaddingProperty<TLength>,
  "place-items"?: PlaceItemsProperty,
  "place-self"?: PlaceSelfProperty,
  "text-decoration"?: TextDecorationProperty<TLength>,
  "text-emphasis"?: TextEmphasisProperty,
  transition?: TransitionProperty,
};

export type StandardPropertiesHyphen<TLength = string | 0> = StandardLonghandPropertiesHyphen<TLength> & StandardShorthandPropertiesHyphen<TLength>;

export type VendorLonghandPropertiesHyphen<TLength = string | 0> = {
  "-moz-animation-delay"?: GlobalsString,
  "-moz-animation-direction"?: AnimationDirectionProperty,
  "-moz-animation-duration"?: GlobalsString,
  "-moz-animation-fill-mode"?: AnimationFillModeProperty,
  "-moz-animation-iteration-count"?: AnimationIterationCountProperty,
  "-moz-animation-name"?: AnimationNameProperty,
  "-moz-animation-play-state"?: AnimationPlayStateProperty,
  "-moz-animation-timing-function"?: AnimationTimingFunctionProperty,
  "-moz-appearance"?: MozAppearanceProperty,
  "-moz-backface-visibility"?: BackfaceVisibilityProperty,
  "-moz-border-bottom-colors"?: MozBorderBottomColorsProperty,
  "-moz-border-end-color"?: BorderInlineEndColorProperty,
  "-moz-border-end-style"?: BorderInlineEndStyleProperty,
  "-moz-border-end-width"?: BorderInlineEndWidthProperty<TLength>,
  "-moz-border-left-colors"?: MozBorderLeftColorsProperty,
  "-moz-border-right-colors"?: MozBorderRightColorsProperty,
  "-moz-border-start-color"?: BorderInlineStartColorProperty,
  "-moz-border-start-style"?: BorderInlineStartStyleProperty,
  "-moz-border-top-colors"?: MozBorderTopColorsProperty,
  "-moz-box-sizing"?: BoxSizingProperty,
  "-moz-column-count"?: ColumnCountProperty,
  "-moz-column-fill"?: ColumnFillProperty,
  "-moz-column-gap"?: ColumnGapProperty<TLength>,
  "-moz-column-rule-color"?: ColumnRuleColorProperty,
  "-moz-column-rule-style"?: ColumnRuleStyleProperty,
  "-moz-column-rule-width"?: ColumnRuleWidthProperty<TLength>,
  "-moz-column-width"?: ColumnWidthProperty<TLength>,
  "-moz-context-properties"?: MozContextPropertiesProperty,
  "-moz-font-feature-settings"?: FontFeatureSettingsProperty,
  "-moz-font-language-override"?: FontLanguageOverrideProperty,
  "-moz-hyphens"?: HyphensProperty,
  "-moz-image-region"?: MozImageRegionProperty,
  "-moz-margin-end"?: MarginInlineEndProperty<TLength>,
  "-moz-margin-start"?: MarginInlineStartProperty<TLength>,
  "-moz-orient"?: MozOrientProperty,
  "-moz-osx-font-smoothing"?: FontSmoothProperty<TLength>,
  "-moz-padding-end"?: PaddingInlineEndProperty<TLength>,
  "-moz-padding-start"?: PaddingInlineStartProperty<TLength>,
  "-moz-perspective"?: PerspectiveProperty<TLength>,
  "-moz-perspective-origin"?: PerspectiveOriginProperty<TLength>,
  "-moz-stack-sizing"?: MozStackSizingProperty,
  "-moz-tab-size"?: TabSizeProperty<TLength>,
  "-moz-text-blink"?: MozTextBlinkProperty,
  "-moz-text-size-adjust"?: TextSizeAdjustProperty,
  "-moz-transform-origin"?: TransformOriginProperty<TLength>,
  "-moz-transform-style"?: TransformStyleProperty,
  "-moz-transition-delay"?: GlobalsString,
  "-moz-transition-duration"?: GlobalsString,
  "-moz-transition-property"?: TransitionPropertyProperty,
  "-moz-transition-timing-function"?: TransitionTimingFunctionProperty,
  "-moz-user-focus"?: MozUserFocusProperty,
  "-moz-user-modify"?: MozUserModifyProperty,
  "-moz-user-select"?: UserSelectProperty,
  "-moz-window-dragging"?: MozWindowDraggingProperty,
  "-moz-window-shadow"?: MozWindowShadowProperty,
  "-ms-accelerator"?: MsAcceleratorProperty,
  "-ms-align-self"?: AlignSelfProperty,
  "-ms-block-progression"?: MsBlockProgressionProperty,
  "-ms-content-zoom-chaining"?: MsContentZoomChainingProperty,
  "-ms-content-zoom-limit-max"?: GlobalsString,
  "-ms-content-zoom-limit-min"?: GlobalsString,
  "-ms-content-zoom-snap-points"?: GlobalsString,
  "-ms-content-zoom-snap-type"?: MsContentZoomSnapTypeProperty,
  "-ms-content-zooming"?: MsContentZoomingProperty,
  "-ms-filter"?: GlobalsString,
  "-ms-flex-direction"?: FlexDirectionProperty,
  "-ms-flex-positive"?: GlobalsNumber,
  "-ms-flow-from"?: MsFlowFromProperty,
  "-ms-flow-into"?: MsFlowIntoProperty,
  "-ms-grid-columns"?: MsGridColumnsProperty<TLength>,
  "-ms-grid-rows"?: MsGridRowsProperty<TLength>,
  "-ms-high-contrast-adjust"?: MsHighContrastAdjustProperty,
  "-ms-hyphenate-limit-chars"?: MsHyphenateLimitCharsProperty,
  "-ms-hyphenate-limit-lines"?: MsHyphenateLimitLinesProperty,
  "-ms-hyphenate-limit-zone"?: MsHyphenateLimitZoneProperty<TLength>,
  "-ms-hyphens"?: HyphensProperty,
  "-ms-ime-align"?: MsImeAlignProperty,
  "-ms-justify-self"?: JustifySelfProperty,
  "-ms-line-break"?: LineBreakProperty,
  "-ms-order"?: GlobalsNumber,
  "-ms-overflow-style"?: MsOverflowStyleProperty,
  "-ms-overflow-x"?: OverflowXProperty,
  "-ms-overflow-y"?: OverflowYProperty,
  "-ms-scroll-chaining"?: MsScrollChainingProperty,
  "-ms-scroll-limit-x-max"?: MsScrollLimitXMaxProperty<TLength>,
  "-ms-scroll-limit-x-min"?: MsScrollLimitXMinProperty<TLength>,
  "-ms-scroll-limit-y-max"?: MsScrollLimitYMaxProperty<TLength>,
  "-ms-scroll-limit-y-min"?: MsScrollLimitYMinProperty<TLength>,
  "-ms-scroll-rails"?: MsScrollRailsProperty,
  "-ms-scroll-snap-points-x"?: GlobalsString,
  "-ms-scroll-snap-points-y"?: GlobalsString,
  "-ms-scroll-snap-type"?: MsScrollSnapTypeProperty,
  "-ms-scroll-translation"?: MsScrollTranslationProperty,
  "-ms-scrollbar-3dlight-color"?: MsScrollbar3dlightColorProperty,
  "-ms-scrollbar-arrow-color"?: MsScrollbarArrowColorProperty,
  "-ms-scrollbar-base-color"?: MsScrollbarBaseColorProperty,
  "-ms-scrollbar-darkshadow-color"?: MsScrollbarDarkshadowColorProperty,
  "-ms-scrollbar-face-color"?: MsScrollbarFaceColorProperty,
  "-ms-scrollbar-highlight-color"?: MsScrollbarHighlightColorProperty,
  "-ms-scrollbar-shadow-color"?: MsScrollbarShadowColorProperty,
  "-ms-text-autospace"?: MsTextAutospaceProperty,
  "-ms-text-combine-horizontal"?: TextCombineUprightProperty,
  "-ms-text-overflow"?: TextOverflowProperty,
  "-ms-touch-action"?: TouchActionProperty,
  "-ms-touch-select"?: MsTouchSelectProperty,
  "-ms-transform"?: TransformProperty,
  "-ms-transform-origin"?: TransformOriginProperty<TLength>,
  "-ms-transition-delay"?: GlobalsString,
  "-ms-transition-duration"?: GlobalsString,
  "-ms-transition-property"?: TransitionPropertyProperty,
  "-ms-transition-timing-function"?: TransitionTimingFunctionProperty,
  "-ms-user-select"?: MsUserSelectProperty,
  "-ms-word-break"?: WordBreakProperty,
  "-ms-wrap-flow"?: MsWrapFlowProperty,
  "-ms-wrap-margin"?: MsWrapMarginProperty<TLength>,
  "-ms-wrap-through"?: MsWrapThroughProperty,
  "-ms-writing-mode"?: WritingModeProperty,
  "-webkit-align-content"?: AlignContentProperty,
  "-webkit-align-items"?: AlignItemsProperty,
  "-webkit-align-self"?: AlignSelfProperty,
  "-webkit-animation-delay"?: GlobalsString,
  "-webkit-animation-direction"?: AnimationDirectionProperty,
  "-webkit-animation-duration"?: GlobalsString,
  "-webkit-animation-fill-mode"?: AnimationFillModeProperty,
  "-webkit-animation-iteration-count"?: AnimationIterationCountProperty,
  "-webkit-animation-name"?: AnimationNameProperty,
  "-webkit-animation-play-state"?: AnimationPlayStateProperty,
  "-webkit-animation-timing-function"?: AnimationTimingFunctionProperty,
  "-webkit-appearance"?: WebkitAppearanceProperty,
  "-webkit-backdrop-filter"?: BackdropFilterProperty,
  "-webkit-backface-visibility"?: BackfaceVisibilityProperty,
  "-webkit-background-clip"?: BackgroundClipProperty,
  "-webkit-background-origin"?: BackgroundOriginProperty,
  "-webkit-background-size"?: BackgroundSizeProperty<TLength>,
  "-webkit-border-before-color"?: WebkitBorderBeforeColorProperty,
  "-webkit-border-before-style"?: WebkitBorderBeforeStyleProperty,
  "-webkit-border-before-width"?: WebkitBorderBeforeWidthProperty<TLength>,
  "-webkit-border-bottom-left-radius"?: BorderBottomLeftRadiusProperty<TLength>,
  "-webkit-border-bottom-right-radius"?: BorderBottomRightRadiusProperty<TLength>,
  "-webkit-border-image-slice"?: BorderImageSliceProperty,
  "-webkit-border-top-left-radius"?: BorderTopLeftRadiusProperty<TLength>,
  "-webkit-border-top-right-radius"?: BorderTopRightRadiusProperty<TLength>,
  "-webkit-box-decoration-break"?: BoxDecorationBreakProperty,
  "-webkit-box-reflect"?: WebkitBoxReflectProperty<TLength>,
  "-webkit-box-shadow"?: BoxShadowProperty,
  "-webkit-box-sizing"?: BoxSizingProperty,
  "-webkit-clip-path"?: ClipPathProperty,
  "-webkit-column-count"?: ColumnCountProperty,
  "-webkit-column-fill"?: ColumnFillProperty,
  "-webkit-column-gap"?: ColumnGapProperty<TLength>,
  "-webkit-column-rule-color"?: ColumnRuleColorProperty,
  "-webkit-column-rule-style"?: ColumnRuleStyleProperty,
  "-webkit-column-rule-width"?: ColumnRuleWidthProperty<TLength>,
  "-webkit-column-span"?: ColumnSpanProperty,
  "-webkit-column-width"?: ColumnWidthProperty<TLength>,
  "-webkit-filter"?: FilterProperty,
  "-webkit-flex-basis"?: FlexBasisProperty<TLength>,
  "-webkit-flex-direction"?: FlexDirectionProperty,
  "-webkit-flex-grow"?: GlobalsNumber,
  "-webkit-flex-shrink"?: GlobalsNumber,
  "-webkit-flex-wrap"?: FlexWrapProperty,
  "-webkit-font-feature-settings"?: FontFeatureSettingsProperty,
  "-webkit-font-kerning"?: FontKerningProperty,
  "-webkit-font-smoothing"?: FontSmoothProperty<TLength>,
  "-webkit-font-variant-ligatures"?: FontVariantLigaturesProperty,
  "-webkit-hyphens"?: HyphensProperty,
  "-webkit-justify-content"?: JustifyContentProperty,
  "-webkit-line-break"?: LineBreakProperty,
  "-webkit-line-clamp"?: WebkitLineClampProperty,
  "-webkit-margin-end"?: MarginInlineEndProperty<TLength>,
  "-webkit-margin-start"?: MarginInlineStartProperty<TLength>,
  "-webkit-mask-attachment"?: WebkitMaskAttachmentProperty,
  "-webkit-mask-box-image-outset"?: MaskBorderOutsetProperty<TLength>,
  "-webkit-mask-box-image-repeat"?: MaskBorderRepeatProperty,
  "-webkit-mask-box-image-slice"?: MaskBorderSliceProperty,
  "-webkit-mask-box-image-source"?: MaskBorderSourceProperty,
  "-webkit-mask-box-image-width"?: MaskBorderWidthProperty<TLength>,
  "-webkit-mask-clip"?: WebkitMaskClipProperty,
  "-webkit-mask-composite"?: WebkitMaskCompositeProperty,
  "-webkit-mask-image"?: WebkitMaskImageProperty,
  "-webkit-mask-origin"?: WebkitMaskOriginProperty,
  "-webkit-mask-position"?: WebkitMaskPositionProperty<TLength>,
  "-webkit-mask-position-x"?: WebkitMaskPositionXProperty<TLength>,
  "-webkit-mask-position-y"?: WebkitMaskPositionYProperty<TLength>,
  "-webkit-mask-repeat"?: WebkitMaskRepeatProperty,
  "-webkit-mask-repeat-x"?: WebkitMaskRepeatXProperty,
  "-webkit-mask-repeat-y"?: WebkitMaskRepeatYProperty,
  "-webkit-mask-size"?: WebkitMaskSizeProperty<TLength>,
  "-webkit-max-inline-size"?: MaxInlineSizeProperty<TLength>,
  "-webkit-order"?: GlobalsNumber,
  "-webkit-overflow-scrolling"?: WebkitOverflowScrollingProperty,
  "-webkit-padding-end"?: PaddingInlineEndProperty<TLength>,
  "-webkit-padding-start"?: PaddingInlineStartProperty<TLength>,
  "-webkit-perspective"?: PerspectiveProperty<TLength>,
  "-webkit-perspective-origin"?: PerspectiveOriginProperty<TLength>,
  "-webkit-print-color-adjust"?: ColorAdjustProperty,
  "-webkit-ruby-position"?: RubyPositionProperty,
  "-webkit-scroll-snap-type"?: ScrollSnapTypeProperty,
  "-webkit-shape-margin"?: ShapeMarginProperty<TLength>,
  "-webkit-tap-highlight-color"?: WebkitTapHighlightColorProperty,
  "-webkit-text-combine"?: TextCombineUprightProperty,
  "-webkit-text-decoration-color"?: TextDecorationColorProperty,
  "-webkit-text-decoration-line"?: TextDecorationLineProperty,
  "-webkit-text-decoration-skip"?: TextDecorationSkipProperty,
  "-webkit-text-decoration-style"?: TextDecorationStyleProperty,
  "-webkit-text-emphasis-color"?: TextEmphasisColorProperty,
  "-webkit-text-emphasis-position"?: GlobalsString,
  "-webkit-text-emphasis-style"?: TextEmphasisStyleProperty,
  "-webkit-text-fill-color"?: WebkitTextFillColorProperty,
  "-webkit-text-orientation"?: TextOrientationProperty,
  "-webkit-text-size-adjust"?: TextSizeAdjustProperty,
  "-webkit-text-stroke-color"?: WebkitTextStrokeColorProperty,
  "-webkit-text-stroke-width"?: WebkitTextStrokeWidthProperty<TLength>,
  "-webkit-text-underline-position"?: TextUnderlinePositionProperty,
  "-webkit-touch-callout"?: WebkitTouchCalloutProperty,
  "-webkit-transform"?: TransformProperty,
  "-webkit-transform-origin"?: TransformOriginProperty<TLength>,
  "-webkit-transform-style"?: TransformStyleProperty,
  "-webkit-transition-delay"?: GlobalsString,
  "-webkit-transition-duration"?: GlobalsString,
  "-webkit-transition-property"?: TransitionPropertyProperty,
  "-webkit-transition-timing-function"?: TransitionTimingFunctionProperty,
  "-webkit-user-modify"?: WebkitUserModifyProperty,
  "-webkit-user-select"?: UserSelectProperty,
  "-webkit-writing-mode"?: WritingModeProperty,
};

export type VendorShorthandPropertiesHyphen<TLength = string | 0> = {
  "-moz-animation"?: AnimationProperty,
  "-moz-border-image"?: BorderImageProperty,
  "-moz-column-rule"?: ColumnRuleProperty<TLength>,
  "-moz-columns"?: ColumnsProperty<TLength>,
  "-moz-transition"?: TransitionProperty,
  "-ms-content-zoom-limit"?: GlobalsString,
  "-ms-content-zoom-snap"?: MsContentZoomSnapProperty,
  "-ms-flex"?: FlexProperty<TLength>,
  "-ms-scroll-limit"?: GlobalsString,
  "-ms-scroll-snap-x"?: GlobalsString,
  "-ms-scroll-snap-y"?: GlobalsString,
  "-ms-transition"?: TransitionProperty,
  "-webkit-animation"?: AnimationProperty,
  "-webkit-border-before"?: WebkitBorderBeforeProperty<TLength>,
  "-webkit-border-image"?: BorderImageProperty,
  "-webkit-border-radius"?: BorderRadiusProperty<TLength>,
  "-webkit-column-rule"?: ColumnRuleProperty<TLength>,
  "-webkit-columns"?: ColumnsProperty<TLength>,
  "-webkit-flex"?: FlexProperty<TLength>,
  "-webkit-flex-flow"?: FlexFlowProperty,
  "-webkit-mask"?: WebkitMaskProperty<TLength>,
  "-webkit-mask-box-image"?: MaskBorderProperty,
  "-webkit-text-emphasis"?: TextEmphasisProperty,
  "-webkit-text-stroke"?: WebkitTextStrokeProperty<TLength>,
  "-webkit-transition"?: TransitionProperty,
};

export type VendorPropertiesHyphen<TLength = string | 0> = VendorLonghandPropertiesHyphen<TLength> & VendorShorthandPropertiesHyphen<TLength>;

export type ObsoletePropertiesHyphen<TLength = string | 0> = {
  azimuth?: AzimuthProperty,
  "box-align"?: BoxAlignProperty,
  "box-direction"?: BoxDirectionProperty,
  "box-flex"?: GlobalsNumber,
  "box-flex-group"?: GlobalsNumber,
  "box-lines"?: BoxLinesProperty,
  "box-ordinal-group"?: GlobalsNumber,
  "box-orient"?: BoxOrientProperty,
  "box-pack"?: BoxPackProperty,
  clip?: ClipProperty,
  "font-variant-alternates"?: FontVariantAlternatesProperty,
  "grid-column-gap"?: GridColumnGapProperty<TLength>,
  "grid-gap"?: GridGapProperty<TLength>,
  "grid-row-gap"?: GridRowGapProperty<TLength>,
  "ime-mode"?: ImeModeProperty,
  "offset-block"?: InsetBlockProperty<TLength>,
  "offset-block-end"?: InsetBlockEndProperty<TLength>,
  "offset-block-start"?: InsetBlockStartProperty<TLength>,
  "offset-inline"?: InsetInlineProperty<TLength>,
  "offset-inline-end"?: InsetInlineEndProperty<TLength>,
  "offset-inline-start"?: InsetInlineStartProperty<TLength>,
  "scroll-snap-coordinate"?: ScrollSnapCoordinateProperty<TLength>,
  "scroll-snap-destination"?: ScrollSnapDestinationProperty<TLength>,
  "scroll-snap-points-x"?: ScrollSnapPointsXProperty,
  "scroll-snap-points-y"?: ScrollSnapPointsYProperty,
  "scroll-snap-type-x"?: ScrollSnapTypeXProperty,
  "scroll-snap-type-y"?: ScrollSnapTypeYProperty,
  "scrollbar-track-color"?: MsScrollbarTrackColorProperty,
  "text-combine-horizontal"?: TextCombineUprightProperty,
  "-khtml-box-align"?: BoxAlignProperty,
  "-khtml-box-direction"?: BoxDirectionProperty,
  "-khtml-box-flex"?: GlobalsNumber,
  "-khtml-box-flex-group"?: GlobalsNumber,
  "-khtml-box-lines"?: BoxLinesProperty,
  "-khtml-box-ordinal-group"?: GlobalsNumber,
  "-khtml-box-orient"?: BoxOrientProperty,
  "-khtml-box-pack"?: BoxPackProperty,
  "-khtml-line-break"?: LineBreakProperty,
  "-khtml-opacity"?: OpacityProperty,
  "-khtml-user-select"?: UserSelectProperty,
  "-moz-background-clip"?: BackgroundClipProperty,
  "-moz-background-inline-policy"?: BoxDecorationBreakProperty,
  "-moz-background-origin"?: BackgroundOriginProperty,
  "-moz-background-size"?: BackgroundSizeProperty<TLength>,
  "-moz-binding"?: MozBindingProperty,
  "-moz-border-radius"?: BorderRadiusProperty<TLength>,
  "-moz-border-radius-bottomleft"?: BorderBottomLeftRadiusProperty<TLength>,
  "-moz-border-radius-bottomright"?: BorderBottomRightRadiusProperty<TLength>,
  "-moz-border-radius-topleft"?: BorderTopLeftRadiusProperty<TLength>,
  "-moz-border-radius-topright"?: BorderTopRightRadiusProperty<TLength>,
  "-moz-box-align"?: BoxAlignProperty,
  "-moz-box-direction"?: BoxDirectionProperty,
  "-moz-box-flex"?: GlobalsNumber,
  "-moz-box-ordinal-group"?: GlobalsNumber,
  "-moz-box-orient"?: BoxOrientProperty,
  "-moz-box-pack"?: BoxPackProperty,
  "-moz-box-shadow"?: BoxShadowProperty,
  "-moz-float-edge"?: MozFloatEdgeProperty,
  "-moz-force-broken-image-icon"?: GlobalsNumber,
  "-moz-opacity"?: OpacityProperty,
  "-moz-outline"?: OutlineProperty<TLength>,
  "-moz-outline-color"?: OutlineColorProperty,
  "-moz-outline-radius"?: MozOutlineRadiusProperty<TLength>,
  "-moz-outline-radius-bottomleft"?: MozOutlineRadiusBottomleftProperty<TLength>,
  "-moz-outline-radius-bottomright"?: MozOutlineRadiusBottomrightProperty<TLength>,
  "-moz-outline-radius-topleft"?: MozOutlineRadiusTopleftProperty<TLength>,
  "-moz-outline-radius-topright"?: MozOutlineRadiusToprightProperty<TLength>,
  "-moz-outline-style"?: OutlineStyleProperty,
  "-moz-outline-width"?: OutlineWidthProperty<TLength>,
  "-moz-text-align-last"?: TextAlignLastProperty,
  "-moz-text-decoration-color"?: TextDecorationColorProperty,
  "-moz-text-decoration-line"?: TextDecorationLineProperty,
  "-moz-text-decoration-style"?: TextDecorationStyleProperty,
  "-moz-user-input"?: MozUserInputProperty,
  "-ms-ime-mode"?: ImeModeProperty,
  "-ms-scrollbar-track-color"?: MsScrollbarTrackColorProperty,
  "-o-animation"?: AnimationProperty,
  "-o-animation-delay"?: GlobalsString,
  "-o-animation-direction"?: AnimationDirectionProperty,
  "-o-animation-duration"?: GlobalsString,
  "-o-animation-fill-mode"?: AnimationFillModeProperty,
  "-o-animation-iteration-count"?: AnimationIterationCountProperty,
  "-o-animation-name"?: AnimationNameProperty,
  "-o-animation-play-state"?: AnimationPlayStateProperty,
  "-o-animation-timing-function"?: AnimationTimingFunctionProperty,
  "-o-background-size"?: BackgroundSizeProperty<TLength>,
  "-o-border-image"?: BorderImageProperty,
  "-o-object-fit"?: ObjectFitProperty,
  "-o-object-position"?: ObjectPositionProperty<TLength>,
  "-o-tab-size"?: TabSizeProperty<TLength>,
  "-o-text-overflow"?: TextOverflowProperty,
  "-o-transform"?: TransformProperty,
  "-o-transform-origin"?: TransformOriginProperty<TLength>,
  "-o-transition"?: TransitionProperty,
  "-o-transition-delay"?: GlobalsString,
  "-o-transition-duration"?: GlobalsString,
  "-o-transition-property"?: TransitionPropertyProperty,
  "-o-transition-timing-function"?: TransitionTimingFunctionProperty,
  "-webkit-box-align"?: BoxAlignProperty,
  "-webkit-box-direction"?: BoxDirectionProperty,
  "-webkit-box-flex"?: GlobalsNumber,
  "-webkit-box-flex-group"?: GlobalsNumber,
  "-webkit-box-lines"?: BoxLinesProperty,
  "-webkit-box-ordinal-group"?: GlobalsNumber,
  "-webkit-box-orient"?: BoxOrientProperty,
  "-webkit-box-pack"?: BoxPackProperty,
  "-webkit-scroll-snap-points-x"?: ScrollSnapPointsXProperty,
  "-webkit-scroll-snap-points-y"?: ScrollSnapPointsYProperty,
};

export type SvgPropertiesHyphen<TLength = string | 0> = {
  "alignment-baseline"?: AlignmentBaselineProperty,
  "baseline-shift"?: BaselineShiftProperty<TLength>,
  clip?: ClipProperty,
  "clip-path"?: ClipPathProperty,
  "clip-rule"?: ClipRuleProperty,
  color?: ColorProperty,
  "color-interpolation"?: ColorInterpolationProperty,
  "color-rendering"?: ColorRenderingProperty,
  cursor?: CursorProperty,
  direction?: DirectionProperty,
  display?: DisplayProperty,
  "dominant-baseline"?: DominantBaselineProperty,
  fill?: FillProperty,
  "fill-opacity"?: GlobalsNumber,
  "fill-rule"?: FillRuleProperty,
  filter?: FilterProperty,
  "flood-color"?: FloodColorProperty,
  "flood-opacity"?: GlobalsNumber,
  font?: FontProperty,
  "font-family"?: FontFamilyProperty,
  "font-size"?: FontSizeProperty<TLength>,
  "font-size-adjust"?: FontSizeAdjustProperty,
  "font-stretch"?: FontStretchProperty,
  "font-style"?: FontStyleProperty,
  "font-variant"?: FontVariantProperty,
  "font-weight"?: FontWeightProperty,
  "glyph-orientation-vertical"?: GlyphOrientationVerticalProperty,
  "image-rendering"?: ImageRenderingProperty,
  "letter-spacing"?: LetterSpacingProperty<TLength>,
  "lighting-color"?: LightingColorProperty,
  "line-height"?: LineHeightProperty<TLength>,
  marker?: MarkerProperty,
  "marker-end"?: MarkerEndProperty,
  "marker-mid"?: MarkerMidProperty,
  "marker-start"?: MarkerStartProperty,
  mask?: MaskProperty<TLength>,
  opacity?: OpacityProperty,
  overflow?: OverflowProperty,
  "paint-order"?: PaintOrderProperty,
  "pointer-events"?: PointerEventsProperty,
  "shape-rendering"?: ShapeRenderingProperty,
  "stop-color"?: StopColorProperty,
  "stop-opacity"?: GlobalsNumber,
  stroke?: StrokeProperty,
  "stroke-dasharray"?: StrokeDasharrayProperty<TLength>,
  "stroke-dashoffset"?: StrokeDashoffsetProperty<TLength>,
  "stroke-linecap"?: StrokeLinecapProperty,
  "stroke-linejoin"?: StrokeLinejoinProperty,
  "stroke-miterlimit"?: GlobalsNumber,
  "stroke-opacity"?: GlobalsNumber,
  "stroke-width"?: StrokeWidthProperty<TLength>,
  "text-anchor"?: TextAnchorProperty,
  "text-decoration"?: TextDecorationProperty<TLength>,
  "text-rendering"?: TextRenderingProperty,
  "unicode-bidi"?: UnicodeBidiProperty,
  "vector-effect"?: VectorEffectProperty,
  visibility?: VisibilityProperty,
  "white-space"?: WhiteSpaceProperty,
  "word-spacing"?: WordSpacingProperty<TLength>,
  "writing-mode"?: WritingModeProperty,
};

export type PropertiesHyphen<TLength = string | 0> = StandardPropertiesHyphen<TLength> &
  VendorPropertiesHyphen<TLength> &
  ObsoletePropertiesHyphen<TLength> &
  SvgPropertiesHyphen<TLength>;

export type StandardLonghandPropertiesFallback<TLength = string | 0> = {
  alignContent?: AlignContentProperty | AlignContentProperty[],
  alignItems?: AlignItemsProperty | AlignItemsProperty[],
  alignSelf?: AlignSelfProperty | AlignSelfProperty[],
  alignTracks?: AlignTracksProperty | AlignTracksProperty[],
  animationDelay?: GlobalsString | GlobalsString[],
  animationDirection?: AnimationDirectionProperty | AnimationDirectionProperty[],
  animationDuration?: GlobalsString | GlobalsString[],
  animationFillMode?: AnimationFillModeProperty | AnimationFillModeProperty[],
  animationIterationCount?: AnimationIterationCountProperty | AnimationIterationCountProperty[],
  animationName?: AnimationNameProperty | AnimationNameProperty[],
  animationPlayState?: AnimationPlayStateProperty | AnimationPlayStateProperty[],
  animationTimingFunction?: AnimationTimingFunctionProperty | AnimationTimingFunctionProperty[],
  appearance?: AppearanceProperty | AppearanceProperty[],
  aspectRatio?: AspectRatioProperty | AspectRatioProperty[],
  backdropFilter?: BackdropFilterProperty | BackdropFilterProperty[],
  backfaceVisibility?: BackfaceVisibilityProperty | BackfaceVisibilityProperty[],
  backgroundAttachment?: BackgroundAttachmentProperty | BackgroundAttachmentProperty[],
  backgroundBlendMode?: BackgroundBlendModeProperty | BackgroundBlendModeProperty[],
  backgroundClip?: BackgroundClipProperty | BackgroundClipProperty[],
  backgroundColor?: BackgroundColorProperty | BackgroundColorProperty[],
  backgroundImage?: BackgroundImageProperty | BackgroundImageProperty[],
  backgroundOrigin?: BackgroundOriginProperty | BackgroundOriginProperty[],
  backgroundPosition?: BackgroundPositionProperty<TLength> | BackgroundPositionProperty<TLength>[],
  backgroundPositionX?: BackgroundPositionXProperty<TLength> | BackgroundPositionXProperty<TLength>[],
  backgroundPositionY?: BackgroundPositionYProperty<TLength> | BackgroundPositionYProperty<TLength>[],
  backgroundRepeat?: BackgroundRepeatProperty | BackgroundRepeatProperty[],
  backgroundSize?: BackgroundSizeProperty<TLength> | BackgroundSizeProperty<TLength>[],
  blockOverflow?: BlockOverflowProperty | BlockOverflowProperty[],
  blockSize?: BlockSizeProperty<TLength> | BlockSizeProperty<TLength>[],
  borderBlockColor?: BorderBlockColorProperty | BorderBlockColorProperty[],
  borderBlockEndColor?: BorderBlockEndColorProperty | BorderBlockEndColorProperty[],
  borderBlockEndStyle?: BorderBlockEndStyleProperty | BorderBlockEndStyleProperty[],
  borderBlockEndWidth?: BorderBlockEndWidthProperty<TLength> | BorderBlockEndWidthProperty<TLength>[],
  borderBlockStartColor?: BorderBlockStartColorProperty | BorderBlockStartColorProperty[],
  borderBlockStartStyle?: BorderBlockStartStyleProperty | BorderBlockStartStyleProperty[],
  borderBlockStartWidth?: BorderBlockStartWidthProperty<TLength> | BorderBlockStartWidthProperty<TLength>[],
  borderBlockStyle?: BorderBlockStyleProperty | BorderBlockStyleProperty[],
  borderBlockWidth?: BorderBlockWidthProperty<TLength> | BorderBlockWidthProperty<TLength>[],
  borderBottomColor?: BorderBottomColorProperty | BorderBottomColorProperty[],
  borderBottomLeftRadius?: BorderBottomLeftRadiusProperty<TLength> | BorderBottomLeftRadiusProperty<TLength>[],
  borderBottomRightRadius?: BorderBottomRightRadiusProperty<TLength> | BorderBottomRightRadiusProperty<TLength>[],
  borderBottomStyle?: BorderBottomStyleProperty | BorderBottomStyleProperty[],
  borderBottomWidth?: BorderBottomWidthProperty<TLength> | BorderBottomWidthProperty<TLength>[],
  borderCollapse?: BorderCollapseProperty | BorderCollapseProperty[],
  borderEndEndRadius?: BorderEndEndRadiusProperty<TLength> | BorderEndEndRadiusProperty<TLength>[],
  borderEndStartRadius?: BorderEndStartRadiusProperty<TLength> | BorderEndStartRadiusProperty<TLength>[],
  borderImageOutset?: BorderImageOutsetProperty<TLength> | BorderImageOutsetProperty<TLength>[],
  borderImageRepeat?: BorderImageRepeatProperty | BorderImageRepeatProperty[],
  borderImageSlice?: BorderImageSliceProperty | BorderImageSliceProperty[],
  borderImageSource?: BorderImageSourceProperty | BorderImageSourceProperty[],
  borderImageWidth?: BorderImageWidthProperty<TLength> | BorderImageWidthProperty<TLength>[],
  borderInlineColor?: BorderInlineColorProperty | BorderInlineColorProperty[],
  borderInlineEndColor?: BorderInlineEndColorProperty | BorderInlineEndColorProperty[],
  borderInlineEndStyle?: BorderInlineEndStyleProperty | BorderInlineEndStyleProperty[],
  borderInlineEndWidth?: BorderInlineEndWidthProperty<TLength> | BorderInlineEndWidthProperty<TLength>[],
  borderInlineStartColor?: BorderInlineStartColorProperty | BorderInlineStartColorProperty[],
  borderInlineStartStyle?: BorderInlineStartStyleProperty | BorderInlineStartStyleProperty[],
  borderInlineStartWidth?: BorderInlineStartWidthProperty<TLength> | BorderInlineStartWidthProperty<TLength>[],
  borderInlineStyle?: BorderInlineStyleProperty | BorderInlineStyleProperty[],
  borderInlineWidth?: BorderInlineWidthProperty<TLength> | BorderInlineWidthProperty<TLength>[],
  borderLeftColor?: BorderLeftColorProperty | BorderLeftColorProperty[],
  borderLeftStyle?: BorderLeftStyleProperty | BorderLeftStyleProperty[],
  borderLeftWidth?: BorderLeftWidthProperty<TLength> | BorderLeftWidthProperty<TLength>[],
  borderRightColor?: BorderRightColorProperty | BorderRightColorProperty[],
  borderRightStyle?: BorderRightStyleProperty | BorderRightStyleProperty[],
  borderRightWidth?: BorderRightWidthProperty<TLength> | BorderRightWidthProperty<TLength>[],
  borderSpacing?: BorderSpacingProperty<TLength> | BorderSpacingProperty<TLength>[],
  borderStartEndRadius?: BorderStartEndRadiusProperty<TLength> | BorderStartEndRadiusProperty<TLength>[],
  borderStartStartRadius?: BorderStartStartRadiusProperty<TLength> | BorderStartStartRadiusProperty<TLength>[],
  borderTopColor?: BorderTopColorProperty | BorderTopColorProperty[],
  borderTopLeftRadius?: BorderTopLeftRadiusProperty<TLength> | BorderTopLeftRadiusProperty<TLength>[],
  borderTopRightRadius?: BorderTopRightRadiusProperty<TLength> | BorderTopRightRadiusProperty<TLength>[],
  borderTopStyle?: BorderTopStyleProperty | BorderTopStyleProperty[],
  borderTopWidth?: BorderTopWidthProperty<TLength> | BorderTopWidthProperty<TLength>[],
  bottom?: BottomProperty<TLength> | BottomProperty<TLength>[],
  boxDecorationBreak?: BoxDecorationBreakProperty | BoxDecorationBreakProperty[],
  boxShadow?: BoxShadowProperty | BoxShadowProperty[],
  boxSizing?: BoxSizingProperty | BoxSizingProperty[],
  breakAfter?: BreakAfterProperty | BreakAfterProperty[],
  breakBefore?: BreakBeforeProperty | BreakBeforeProperty[],
  breakInside?: BreakInsideProperty | BreakInsideProperty[],
  captionSide?: CaptionSideProperty | CaptionSideProperty[],
  caretColor?: CaretColorProperty | CaretColorProperty[],
  clear?: ClearProperty | ClearProperty[],
  clipPath?: ClipPathProperty | ClipPathProperty[],
  color?: ColorProperty | ColorProperty[],
  colorAdjust?: ColorAdjustProperty | ColorAdjustProperty[],
  columnCount?: ColumnCountProperty | ColumnCountProperty[],
  columnFill?: ColumnFillProperty | ColumnFillProperty[],
  columnGap?: ColumnGapProperty<TLength> | ColumnGapProperty<TLength>[],
  columnRuleColor?: ColumnRuleColorProperty | ColumnRuleColorProperty[],
  columnRuleStyle?: ColumnRuleStyleProperty | ColumnRuleStyleProperty[],
  columnRuleWidth?: ColumnRuleWidthProperty<TLength> | ColumnRuleWidthProperty<TLength>[],
  columnSpan?: ColumnSpanProperty | ColumnSpanProperty[],
  columnWidth?: ColumnWidthProperty<TLength> | ColumnWidthProperty<TLength>[],
  contain?: ContainProperty | ContainProperty[],
  content?: ContentProperty | ContentProperty[],
  contentVisibility?: ContentVisibilityProperty | ContentVisibilityProperty[],
  counterIncrement?: CounterIncrementProperty | CounterIncrementProperty[],
  counterReset?: CounterResetProperty | CounterResetProperty[],
  counterSet?: CounterSetProperty | CounterSetProperty[],
  cursor?: CursorProperty | CursorProperty[],
  direction?: DirectionProperty | DirectionProperty[],
  display?: DisplayProperty | DisplayProperty[],
  emptyCells?: EmptyCellsProperty | EmptyCellsProperty[],
  filter?: FilterProperty | FilterProperty[],
  flexBasis?: FlexBasisProperty<TLength> | FlexBasisProperty<TLength>[],
  flexDirection?: FlexDirectionProperty | FlexDirectionProperty[],
  flexGrow?: GlobalsNumber | GlobalsNumber[],
  flexShrink?: GlobalsNumber | GlobalsNumber[],
  flexWrap?: FlexWrapProperty | FlexWrapProperty[],
  float?: FloatProperty | FloatProperty[],
  fontFamily?: FontFamilyProperty | FontFamilyProperty[],
  fontFeatureSettings?: FontFeatureSettingsProperty | FontFeatureSettingsProperty[],
  fontKerning?: FontKerningProperty | FontKerningProperty[],
  fontLanguageOverride?: FontLanguageOverrideProperty | FontLanguageOverrideProperty[],
  fontOpticalSizing?: FontOpticalSizingProperty | FontOpticalSizingProperty[],
  fontSize?: FontSizeProperty<TLength> | FontSizeProperty<TLength>[],
  fontSizeAdjust?: FontSizeAdjustProperty | FontSizeAdjustProperty[],
  fontSmooth?: FontSmoothProperty<TLength> | FontSmoothProperty<TLength>[],
  fontStretch?: FontStretchProperty | FontStretchProperty[],
  fontStyle?: FontStyleProperty | FontStyleProperty[],
  fontSynthesis?: FontSynthesisProperty | FontSynthesisProperty[],
  fontVariant?: FontVariantProperty | FontVariantProperty[],
  fontVariantCaps?: FontVariantCapsProperty | FontVariantCapsProperty[],
  fontVariantEastAsian?: FontVariantEastAsianProperty | FontVariantEastAsianProperty[],
  fontVariantLigatures?: FontVariantLigaturesProperty | FontVariantLigaturesProperty[],
  fontVariantNumeric?: FontVariantNumericProperty | FontVariantNumericProperty[],
  fontVariantPosition?: FontVariantPositionProperty | FontVariantPositionProperty[],
  fontVariationSettings?: FontVariationSettingsProperty | FontVariationSettingsProperty[],
  fontWeight?: FontWeightProperty | FontWeightProperty[],
  forcedColorAdjust?: ForcedColorAdjustProperty | ForcedColorAdjustProperty[],
  gridAutoColumns?: GridAutoColumnsProperty<TLength> | GridAutoColumnsProperty<TLength>[],
  gridAutoFlow?: GridAutoFlowProperty | GridAutoFlowProperty[],
  gridAutoRows?: GridAutoRowsProperty<TLength> | GridAutoRowsProperty<TLength>[],
  gridColumnEnd?: GridColumnEndProperty | GridColumnEndProperty[],
  gridColumnStart?: GridColumnStartProperty | GridColumnStartProperty[],
  gridRowEnd?: GridRowEndProperty | GridRowEndProperty[],
  gridRowStart?: GridRowStartProperty | GridRowStartProperty[],
  gridTemplateAreas?: GridTemplateAreasProperty | GridTemplateAreasProperty[],
  gridTemplateColumns?: GridTemplateColumnsProperty<TLength> | GridTemplateColumnsProperty<TLength>[],
  gridTemplateRows?: GridTemplateRowsProperty<TLength> | GridTemplateRowsProperty<TLength>[],
  hangingPunctuation?: HangingPunctuationProperty | HangingPunctuationProperty[],
  height?: HeightProperty<TLength> | HeightProperty<TLength>[],
  hyphens?: HyphensProperty | HyphensProperty[],
  imageOrientation?: ImageOrientationProperty | ImageOrientationProperty[],
  imageRendering?: ImageRenderingProperty | ImageRenderingProperty[],
  imageResolution?: ImageResolutionProperty | ImageResolutionProperty[],
  initialLetter?: InitialLetterProperty | InitialLetterProperty[],
  inlineSize?: InlineSizeProperty<TLength> | InlineSizeProperty<TLength>[],
  inset?: InsetProperty<TLength> | InsetProperty<TLength>[],
  insetBlock?: InsetBlockProperty<TLength> | InsetBlockProperty<TLength>[],
  insetBlockEnd?: InsetBlockEndProperty<TLength> | InsetBlockEndProperty<TLength>[],
  insetBlockStart?: InsetBlockStartProperty<TLength> | InsetBlockStartProperty<TLength>[],
  insetInline?: InsetInlineProperty<TLength> | InsetInlineProperty<TLength>[],
  insetInlineEnd?: InsetInlineEndProperty<TLength> | InsetInlineEndProperty<TLength>[],
  insetInlineStart?: InsetInlineStartProperty<TLength> | InsetInlineStartProperty<TLength>[],
  isolation?: IsolationProperty | IsolationProperty[],
  justifyContent?: JustifyContentProperty | JustifyContentProperty[],
  justifyItems?: JustifyItemsProperty | JustifyItemsProperty[],
  justifySelf?: JustifySelfProperty | JustifySelfProperty[],
  justifyTracks?: JustifyTracksProperty | JustifyTracksProperty[],
  left?: LeftProperty<TLength> | LeftProperty<TLength>[],
  letterSpacing?: LetterSpacingProperty<TLength> | LetterSpacingProperty<TLength>[],
  lineBreak?: LineBreakProperty | LineBreakProperty[],
  lineHeight?: LineHeightProperty<TLength> | LineHeightProperty<TLength>[],
  lineHeightStep?: LineHeightStepProperty<TLength> | LineHeightStepProperty<TLength>[],
  listStyleImage?: ListStyleImageProperty | ListStyleImageProperty[],
  listStylePosition?: ListStylePositionProperty | ListStylePositionProperty[],
  listStyleType?: ListStyleTypeProperty | ListStyleTypeProperty[],
  marginBlock?: MarginBlockProperty<TLength> | MarginBlockProperty<TLength>[],
  marginBlockEnd?: MarginBlockEndProperty<TLength> | MarginBlockEndProperty<TLength>[],
  marginBlockStart?: MarginBlockStartProperty<TLength> | MarginBlockStartProperty<TLength>[],
  marginBottom?: MarginBottomProperty<TLength> | MarginBottomProperty<TLength>[],
  marginInline?: MarginInlineProperty<TLength> | MarginInlineProperty<TLength>[],
  marginInlineEnd?: MarginInlineEndProperty<TLength> | MarginInlineEndProperty<TLength>[],
  marginInlineStart?: MarginInlineStartProperty<TLength> | MarginInlineStartProperty<TLength>[],
  marginLeft?: MarginLeftProperty<TLength> | MarginLeftProperty<TLength>[],
  marginRight?: MarginRightProperty<TLength> | MarginRightProperty<TLength>[],
  marginTop?: MarginTopProperty<TLength> | MarginTopProperty<TLength>[],
  maskBorderMode?: MaskBorderModeProperty | MaskBorderModeProperty[],
  maskBorderOutset?: MaskBorderOutsetProperty<TLength> | MaskBorderOutsetProperty<TLength>[],
  maskBorderRepeat?: MaskBorderRepeatProperty | MaskBorderRepeatProperty[],
  maskBorderSlice?: MaskBorderSliceProperty | MaskBorderSliceProperty[],
  maskBorderSource?: MaskBorderSourceProperty | MaskBorderSourceProperty[],
  maskBorderWidth?: MaskBorderWidthProperty<TLength> | MaskBorderWidthProperty<TLength>[],
  maskClip?: MaskClipProperty | MaskClipProperty[],
  maskComposite?: MaskCompositeProperty | MaskCompositeProperty[],
  maskImage?: MaskImageProperty | MaskImageProperty[],
  maskMode?: MaskModeProperty | MaskModeProperty[],
  maskOrigin?: MaskOriginProperty | MaskOriginProperty[],
  maskPosition?: MaskPositionProperty<TLength> | MaskPositionProperty<TLength>[],
  maskRepeat?: MaskRepeatProperty | MaskRepeatProperty[],
  maskSize?: MaskSizeProperty<TLength> | MaskSizeProperty<TLength>[],
  maskType?: MaskTypeProperty | MaskTypeProperty[],
  mathStyle?: MathStyleProperty | MathStyleProperty[],
  maxBlockSize?: MaxBlockSizeProperty<TLength> | MaxBlockSizeProperty<TLength>[],
  maxHeight?: MaxHeightProperty<TLength> | MaxHeightProperty<TLength>[],
  maxInlineSize?: MaxInlineSizeProperty<TLength> | MaxInlineSizeProperty<TLength>[],
  maxLines?: MaxLinesProperty | MaxLinesProperty[],
  maxWidth?: MaxWidthProperty<TLength> | MaxWidthProperty<TLength>[],
  minBlockSize?: MinBlockSizeProperty<TLength> | MinBlockSizeProperty<TLength>[],
  minHeight?: MinHeightProperty<TLength> | MinHeightProperty<TLength>[],
  minInlineSize?: MinInlineSizeProperty<TLength> | MinInlineSizeProperty<TLength>[],
  minWidth?: MinWidthProperty<TLength> | MinWidthProperty<TLength>[],
  mixBlendMode?: MixBlendModeProperty | MixBlendModeProperty[],
  motionDistance?: OffsetDistanceProperty<TLength> | OffsetDistanceProperty<TLength>[],
  motionPath?: OffsetPathProperty | OffsetPathProperty[],
  motionRotation?: OffsetRotateProperty | OffsetRotateProperty[],
  objectFit?: ObjectFitProperty | ObjectFitProperty[],
  objectPosition?: ObjectPositionProperty<TLength> | ObjectPositionProperty<TLength>[],
  offsetAnchor?: OffsetAnchorProperty<TLength> | OffsetAnchorProperty<TLength>[],
  offsetDistance?: OffsetDistanceProperty<TLength> | OffsetDistanceProperty<TLength>[],
  offsetPath?: OffsetPathProperty | OffsetPathProperty[],
  offsetRotate?: OffsetRotateProperty | OffsetRotateProperty[],
  offsetRotation?: OffsetRotateProperty | OffsetRotateProperty[],
  opacity?: OpacityProperty | OpacityProperty[],
  order?: GlobalsNumber | GlobalsNumber[],
  orphans?: GlobalsNumber | GlobalsNumber[],
  outlineColor?: OutlineColorProperty | OutlineColorProperty[],
  outlineOffset?: OutlineOffsetProperty<TLength> | OutlineOffsetProperty<TLength>[],
  outlineStyle?: OutlineStyleProperty | OutlineStyleProperty[],
  outlineWidth?: OutlineWidthProperty<TLength> | OutlineWidthProperty<TLength>[],
  overflowAnchor?: OverflowAnchorProperty | OverflowAnchorProperty[],
  overflowBlock?: OverflowBlockProperty | OverflowBlockProperty[],
  overflowClipBox?: OverflowClipBoxProperty | OverflowClipBoxProperty[],
  overflowInline?: OverflowInlineProperty | OverflowInlineProperty[],
  overflowWrap?: OverflowWrapProperty | OverflowWrapProperty[],
  overflowX?: OverflowXProperty | OverflowXProperty[],
  overflowY?: OverflowYProperty | OverflowYProperty[],
  overscrollBehavior?: OverscrollBehaviorProperty | OverscrollBehaviorProperty[],
  overscrollBehaviorBlock?: OverscrollBehaviorBlockProperty | OverscrollBehaviorBlockProperty[],
  overscrollBehaviorInline?: OverscrollBehaviorInlineProperty | OverscrollBehaviorInlineProperty[],
  overscrollBehaviorX?: OverscrollBehaviorXProperty | OverscrollBehaviorXProperty[],
  overscrollBehaviorY?: OverscrollBehaviorYProperty | OverscrollBehaviorYProperty[],
  paddingBlock?: PaddingBlockProperty<TLength> | PaddingBlockProperty<TLength>[],
  paddingBlockEnd?: PaddingBlockEndProperty<TLength> | PaddingBlockEndProperty<TLength>[],
  paddingBlockStart?: PaddingBlockStartProperty<TLength> | PaddingBlockStartProperty<TLength>[],
  paddingBottom?: PaddingBottomProperty<TLength> | PaddingBottomProperty<TLength>[],
  paddingInline?: PaddingInlineProperty<TLength> | PaddingInlineProperty<TLength>[],
  paddingInlineEnd?: PaddingInlineEndProperty<TLength> | PaddingInlineEndProperty<TLength>[],
  paddingInlineStart?: PaddingInlineStartProperty<TLength> | PaddingInlineStartProperty<TLength>[],
  paddingLeft?: PaddingLeftProperty<TLength> | PaddingLeftProperty<TLength>[],
  paddingRight?: PaddingRightProperty<TLength> | PaddingRightProperty<TLength>[],
  paddingTop?: PaddingTopProperty<TLength> | PaddingTopProperty<TLength>[],
  pageBreakAfter?: PageBreakAfterProperty | PageBreakAfterProperty[],
  pageBreakBefore?: PageBreakBeforeProperty | PageBreakBeforeProperty[],
  pageBreakInside?: PageBreakInsideProperty | PageBreakInsideProperty[],
  paintOrder?: PaintOrderProperty | PaintOrderProperty[],
  perspective?: PerspectiveProperty<TLength> | PerspectiveProperty<TLength>[],
  perspectiveOrigin?: PerspectiveOriginProperty<TLength> | PerspectiveOriginProperty<TLength>[],
  placeContent?: PlaceContentProperty | PlaceContentProperty[],
  pointerEvents?: PointerEventsProperty | PointerEventsProperty[],
  position?: PositionProperty | PositionProperty[],
  quotes?: QuotesProperty | QuotesProperty[],
  resize?: ResizeProperty | ResizeProperty[],
  right?: RightProperty<TLength> | RightProperty<TLength>[],
  rotate?: RotateProperty | RotateProperty[],
  rowGap?: RowGapProperty<TLength> | RowGapProperty<TLength>[],
  rubyAlign?: RubyAlignProperty | RubyAlignProperty[],
  rubyMerge?: RubyMergeProperty | RubyMergeProperty[],
  rubyPosition?: RubyPositionProperty | RubyPositionProperty[],
  scale?: ScaleProperty | ScaleProperty[],
  scrollBehavior?: ScrollBehaviorProperty | ScrollBehaviorProperty[],
  scrollMargin?: ScrollMarginProperty<TLength> | ScrollMarginProperty<TLength>[],
  scrollMarginBlock?: ScrollMarginBlockProperty<TLength> | ScrollMarginBlockProperty<TLength>[],
  scrollMarginBlockEnd?: ScrollMarginBlockEndProperty<TLength> | ScrollMarginBlockEndProperty<TLength>[],
  scrollMarginBlockStart?: ScrollMarginBlockStartProperty<TLength> | ScrollMarginBlockStartProperty<TLength>[],
  scrollMarginBottom?: ScrollMarginBottomProperty<TLength> | ScrollMarginBottomProperty<TLength>[],
  scrollMarginInline?: ScrollMarginInlineProperty<TLength> | ScrollMarginInlineProperty<TLength>[],
  scrollMarginInlineEnd?: ScrollMarginInlineEndProperty<TLength> | ScrollMarginInlineEndProperty<TLength>[],
  scrollMarginInlineStart?: ScrollMarginInlineStartProperty<TLength> | ScrollMarginInlineStartProperty<TLength>[],
  scrollMarginLeft?: ScrollMarginLeftProperty<TLength> | ScrollMarginLeftProperty<TLength>[],
  scrollMarginRight?: ScrollMarginRightProperty<TLength> | ScrollMarginRightProperty<TLength>[],
  scrollMarginTop?: ScrollMarginTopProperty<TLength> | ScrollMarginTopProperty<TLength>[],
  scrollPadding?: ScrollPaddingProperty<TLength> | ScrollPaddingProperty<TLength>[],
  scrollPaddingBlock?: ScrollPaddingBlockProperty<TLength> | ScrollPaddingBlockProperty<TLength>[],
  scrollPaddingBlockEnd?: ScrollPaddingBlockEndProperty<TLength> | ScrollPaddingBlockEndProperty<TLength>[],
  scrollPaddingBlockStart?: ScrollPaddingBlockStartProperty<TLength> | ScrollPaddingBlockStartProperty<TLength>[],
  scrollPaddingBottom?: ScrollPaddingBottomProperty<TLength> | ScrollPaddingBottomProperty<TLength>[],
  scrollPaddingInline?: ScrollPaddingInlineProperty<TLength> | ScrollPaddingInlineProperty<TLength>[],
  scrollPaddingInlineEnd?: ScrollPaddingInlineEndProperty<TLength> | ScrollPaddingInlineEndProperty<TLength>[],
  scrollPaddingInlineStart?: ScrollPaddingInlineStartProperty<TLength> | ScrollPaddingInlineStartProperty<TLength>[],
  scrollPaddingLeft?: ScrollPaddingLeftProperty<TLength> | ScrollPaddingLeftProperty<TLength>[],
  scrollPaddingRight?: ScrollPaddingRightProperty<TLength> | ScrollPaddingRightProperty<TLength>[],
  scrollPaddingTop?: ScrollPaddingTopProperty<TLength> | ScrollPaddingTopProperty<TLength>[],
  scrollSnapAlign?: ScrollSnapAlignProperty | ScrollSnapAlignProperty[],
  scrollSnapMargin?: ScrollMarginProperty<TLength> | ScrollMarginProperty<TLength>[],
  scrollSnapMarginBottom?: ScrollMarginBottomProperty<TLength> | ScrollMarginBottomProperty<TLength>[],
  scrollSnapMarginLeft?: ScrollMarginLeftProperty<TLength> | ScrollMarginLeftProperty<TLength>[],
  scrollSnapMarginRight?: ScrollMarginRightProperty<TLength> | ScrollMarginRightProperty<TLength>[],
  scrollSnapMarginTop?: ScrollMarginTopProperty<TLength> | ScrollMarginTopProperty<TLength>[],
  scrollSnapStop?: ScrollSnapStopProperty | ScrollSnapStopProperty[],
  scrollSnapType?: ScrollSnapTypeProperty | ScrollSnapTypeProperty[],
  scrollbarColor?: ScrollbarColorProperty | ScrollbarColorProperty[],
  scrollbarGutter?: ScrollbarGutterProperty | ScrollbarGutterProperty[],
  scrollbarWidth?: ScrollbarWidthProperty | ScrollbarWidthProperty[],
  shapeImageThreshold?: ShapeImageThresholdProperty | ShapeImageThresholdProperty[],
  shapeMargin?: ShapeMarginProperty<TLength> | ShapeMarginProperty<TLength>[],
  shapeOutside?: ShapeOutsideProperty | ShapeOutsideProperty[],
  tabSize?: TabSizeProperty<TLength> | TabSizeProperty<TLength>[],
  tableLayout?: TableLayoutProperty | TableLayoutProperty[],
  textAlign?: TextAlignProperty | TextAlignProperty[],
  textAlignLast?: TextAlignLastProperty | TextAlignLastProperty[],
  textCombineUpright?: TextCombineUprightProperty | TextCombineUprightProperty[],
  textDecorationColor?: TextDecorationColorProperty | TextDecorationColorProperty[],
  textDecorationLine?: TextDecorationLineProperty | TextDecorationLineProperty[],
  textDecorationSkip?: TextDecorationSkipProperty | TextDecorationSkipProperty[],
  textDecorationSkipInk?: TextDecorationSkipInkProperty | TextDecorationSkipInkProperty[],
  textDecorationStyle?: TextDecorationStyleProperty | TextDecorationStyleProperty[],
  textDecorationThickness?: TextDecorationThicknessProperty<TLength> | TextDecorationThicknessProperty<TLength>[],
  textDecorationWidth?: TextDecorationThicknessProperty<TLength> | TextDecorationThicknessProperty<TLength>[],
  textEmphasisColor?: TextEmphasisColorProperty | TextEmphasisColorProperty[],
  textEmphasisPosition?: GlobalsString | GlobalsString[],
  textEmphasisStyle?: TextEmphasisStyleProperty | TextEmphasisStyleProperty[],
  textIndent?: TextIndentProperty<TLength> | TextIndentProperty<TLength>[],
  textJustify?: TextJustifyProperty | TextJustifyProperty[],
  textOrientation?: TextOrientationProperty | TextOrientationProperty[],
  textOverflow?: TextOverflowProperty | TextOverflowProperty[],
  textRendering?: TextRenderingProperty | TextRenderingProperty[],
  textShadow?: TextShadowProperty | TextShadowProperty[],
  textSizeAdjust?: TextSizeAdjustProperty | TextSizeAdjustProperty[],
  textTransform?: TextTransformProperty | TextTransformProperty[],
  textUnderlineOffset?: TextUnderlineOffsetProperty<TLength> | TextUnderlineOffsetProperty<TLength>[],
  textUnderlinePosition?: TextUnderlinePositionProperty | TextUnderlinePositionProperty[],
  top?: TopProperty<TLength> | TopProperty<TLength>[],
  touchAction?: TouchActionProperty | TouchActionProperty[],
  transform?: TransformProperty | TransformProperty[],
  transformBox?: TransformBoxProperty | TransformBoxProperty[],
  transformOrigin?: TransformOriginProperty<TLength> | TransformOriginProperty<TLength>[],
  transformStyle?: TransformStyleProperty | TransformStyleProperty[],
  transitionDelay?: GlobalsString | GlobalsString[],
  transitionDuration?: GlobalsString | GlobalsString[],
  transitionProperty?: TransitionPropertyProperty | TransitionPropertyProperty[],
  transitionTimingFunction?: TransitionTimingFunctionProperty | TransitionTimingFunctionProperty[],
  translate?: TranslateProperty<TLength> | TranslateProperty<TLength>[],
  unicodeBidi?: UnicodeBidiProperty | UnicodeBidiProperty[],
  userSelect?: UserSelectProperty | UserSelectProperty[],
  verticalAlign?: VerticalAlignProperty<TLength> | VerticalAlignProperty<TLength>[],
  visibility?: VisibilityProperty | VisibilityProperty[],
  whiteSpace?: WhiteSpaceProperty | WhiteSpaceProperty[],
  widows?: GlobalsNumber | GlobalsNumber[],
  width?: WidthProperty<TLength> | WidthProperty<TLength>[],
  willChange?: WillChangeProperty | WillChangeProperty[],
  wordBreak?: WordBreakProperty | WordBreakProperty[],
  wordSpacing?: WordSpacingProperty<TLength> | WordSpacingProperty<TLength>[],
  wordWrap?: WordWrapProperty | WordWrapProperty[],
  writingMode?: WritingModeProperty | WritingModeProperty[],
  zIndex?: ZIndexProperty | ZIndexProperty[],
  zoom?: ZoomProperty | ZoomProperty[],
};

export type StandardShorthandPropertiesFallback<TLength = string | 0> = {
  all?: Globals | Globals[],
  animation?: AnimationProperty | AnimationProperty[],
  background?: BackgroundProperty<TLength> | BackgroundProperty<TLength>[],
  border?: BorderProperty<TLength> | BorderProperty<TLength>[],
  borderBlock?: BorderBlockProperty<TLength> | BorderBlockProperty<TLength>[],
  borderBlockEnd?: BorderBlockEndProperty<TLength> | BorderBlockEndProperty<TLength>[],
  borderBlockStart?: BorderBlockStartProperty<TLength> | BorderBlockStartProperty<TLength>[],
  borderBottom?: BorderBottomProperty<TLength> | BorderBottomProperty<TLength>[],
  borderColor?: BorderColorProperty | BorderColorProperty[],
  borderImage?: BorderImageProperty | BorderImageProperty[],
  borderInline?: BorderInlineProperty<TLength> | BorderInlineProperty<TLength>[],
  borderInlineEnd?: BorderInlineEndProperty<TLength> | BorderInlineEndProperty<TLength>[],
  borderInlineStart?: BorderInlineStartProperty<TLength> | BorderInlineStartProperty<TLength>[],
  borderLeft?: BorderLeftProperty<TLength> | BorderLeftProperty<TLength>[],
  borderRadius?: BorderRadiusProperty<TLength> | BorderRadiusProperty<TLength>[],
  borderRight?: BorderRightProperty<TLength> | BorderRightProperty<TLength>[],
  borderStyle?: BorderStyleProperty | BorderStyleProperty[],
  borderTop?: BorderTopProperty<TLength> | BorderTopProperty<TLength>[],
  borderWidth?: BorderWidthProperty<TLength> | BorderWidthProperty<TLength>[],
  columnRule?: ColumnRuleProperty<TLength> | ColumnRuleProperty<TLength>[],
  columns?: ColumnsProperty<TLength> | ColumnsProperty<TLength>[],
  flex?: FlexProperty<TLength> | FlexProperty<TLength>[],
  flexFlow?: FlexFlowProperty | FlexFlowProperty[],
  font?: FontProperty | FontProperty[],
  gap?: GapProperty<TLength> | GapProperty<TLength>[],
  grid?: GridProperty | GridProperty[],
  gridArea?: GridAreaProperty | GridAreaProperty[],
  gridColumn?: GridColumnProperty | GridColumnProperty[],
  gridRow?: GridRowProperty | GridRowProperty[],
  gridTemplate?: GridTemplateProperty | GridTemplateProperty[],
  lineClamp?: LineClampProperty | LineClampProperty[],
  listStyle?: ListStyleProperty | ListStyleProperty[],
  margin?: MarginProperty<TLength> | MarginProperty<TLength>[],
  mask?: MaskProperty<TLength> | MaskProperty<TLength>[],
  maskBorder?: MaskBorderProperty | MaskBorderProperty[],
  motion?: OffsetProperty<TLength> | OffsetProperty<TLength>[],
  offset?: OffsetProperty<TLength> | OffsetProperty<TLength>[],
  outline?: OutlineProperty<TLength> | OutlineProperty<TLength>[],
  overflow?: OverflowProperty | OverflowProperty[],
  padding?: PaddingProperty<TLength> | PaddingProperty<TLength>[],
  placeItems?: PlaceItemsProperty | PlaceItemsProperty[],
  placeSelf?: PlaceSelfProperty | PlaceSelfProperty[],
  textDecoration?: TextDecorationProperty<TLength> | TextDecorationProperty<TLength>[],
  textEmphasis?: TextEmphasisProperty | TextEmphasisProperty[],
  transition?: TransitionProperty | TransitionProperty[],
};

export type StandardPropertiesFallback<TLength = string | 0> = StandardLonghandPropertiesFallback<TLength> & StandardShorthandPropertiesFallback<TLength>;

export type VendorLonghandPropertiesFallback<TLength = string | 0> = {
  MozAnimationDelay?: GlobalsString | GlobalsString[],
  MozAnimationDirection?: AnimationDirectionProperty | AnimationDirectionProperty[],
  MozAnimationDuration?: GlobalsString | GlobalsString[],
  MozAnimationFillMode?: AnimationFillModeProperty | AnimationFillModeProperty[],
  MozAnimationIterationCount?: AnimationIterationCountProperty | AnimationIterationCountProperty[],
  MozAnimationName?: AnimationNameProperty | AnimationNameProperty[],
  MozAnimationPlayState?: AnimationPlayStateProperty | AnimationPlayStateProperty[],
  MozAnimationTimingFunction?: AnimationTimingFunctionProperty | AnimationTimingFunctionProperty[],
  MozAppearance?: MozAppearanceProperty | MozAppearanceProperty[],
  MozBackfaceVisibility?: BackfaceVisibilityProperty | BackfaceVisibilityProperty[],
  MozBorderBottomColors?: MozBorderBottomColorsProperty | MozBorderBottomColorsProperty[],
  MozBorderEndColor?: BorderInlineEndColorProperty | BorderInlineEndColorProperty[],
  MozBorderEndStyle?: BorderInlineEndStyleProperty | BorderInlineEndStyleProperty[],
  MozBorderEndWidth?: BorderInlineEndWidthProperty<TLength> | BorderInlineEndWidthProperty<TLength>[],
  MozBorderLeftColors?: MozBorderLeftColorsProperty | MozBorderLeftColorsProperty[],
  MozBorderRightColors?: MozBorderRightColorsProperty | MozBorderRightColorsProperty[],
  MozBorderStartColor?: BorderInlineStartColorProperty | BorderInlineStartColorProperty[],
  MozBorderStartStyle?: BorderInlineStartStyleProperty | BorderInlineStartStyleProperty[],
  MozBorderTopColors?: MozBorderTopColorsProperty | MozBorderTopColorsProperty[],
  MozBoxSizing?: BoxSizingProperty | BoxSizingProperty[],
  MozColumnCount?: ColumnCountProperty | ColumnCountProperty[],
  MozColumnFill?: ColumnFillProperty | ColumnFillProperty[],
  MozColumnGap?: ColumnGapProperty<TLength> | ColumnGapProperty<TLength>[],
  MozColumnRuleColor?: ColumnRuleColorProperty | ColumnRuleColorProperty[],
  MozColumnRuleStyle?: ColumnRuleStyleProperty | ColumnRuleStyleProperty[],
  MozColumnRuleWidth?: ColumnRuleWidthProperty<TLength> | ColumnRuleWidthProperty<TLength>[],
  MozColumnWidth?: ColumnWidthProperty<TLength> | ColumnWidthProperty<TLength>[],
  MozContextProperties?: MozContextPropertiesProperty | MozContextPropertiesProperty[],
  MozFontFeatureSettings?: FontFeatureSettingsProperty | FontFeatureSettingsProperty[],
  MozFontLanguageOverride?: FontLanguageOverrideProperty | FontLanguageOverrideProperty[],
  MozHyphens?: HyphensProperty | HyphensProperty[],
  MozImageRegion?: MozImageRegionProperty | MozImageRegionProperty[],
  MozMarginEnd?: MarginInlineEndProperty<TLength> | MarginInlineEndProperty<TLength>[],
  MozMarginStart?: MarginInlineStartProperty<TLength> | MarginInlineStartProperty<TLength>[],
  MozOrient?: MozOrientProperty | MozOrientProperty[],
  MozOsxFontSmoothing?: FontSmoothProperty<TLength> | FontSmoothProperty<TLength>[],
  MozPaddingEnd?: PaddingInlineEndProperty<TLength> | PaddingInlineEndProperty<TLength>[],
  MozPaddingStart?: PaddingInlineStartProperty<TLength> | PaddingInlineStartProperty<TLength>[],
  MozPerspective?: PerspectiveProperty<TLength> | PerspectiveProperty<TLength>[],
  MozPerspectiveOrigin?: PerspectiveOriginProperty<TLength> | PerspectiveOriginProperty<TLength>[],
  MozStackSizing?: MozStackSizingProperty | MozStackSizingProperty[],
  MozTabSize?: TabSizeProperty<TLength> | TabSizeProperty<TLength>[],
  MozTextBlink?: MozTextBlinkProperty | MozTextBlinkProperty[],
  MozTextSizeAdjust?: TextSizeAdjustProperty | TextSizeAdjustProperty[],
  MozTransformOrigin?: TransformOriginProperty<TLength> | TransformOriginProperty<TLength>[],
  MozTransformStyle?: TransformStyleProperty | TransformStyleProperty[],
  MozTransitionDelay?: GlobalsString | GlobalsString[],
  MozTransitionDuration?: GlobalsString | GlobalsString[],
  MozTransitionProperty?: TransitionPropertyProperty | TransitionPropertyProperty[],
  MozTransitionTimingFunction?: TransitionTimingFunctionProperty | TransitionTimingFunctionProperty[],
  MozUserFocus?: MozUserFocusProperty | MozUserFocusProperty[],
  MozUserModify?: MozUserModifyProperty | MozUserModifyProperty[],
  MozUserSelect?: UserSelectProperty | UserSelectProperty[],
  MozWindowDragging?: MozWindowDraggingProperty | MozWindowDraggingProperty[],
  MozWindowShadow?: MozWindowShadowProperty | MozWindowShadowProperty[],
  msAccelerator?: MsAcceleratorProperty | MsAcceleratorProperty[],
  msAlignSelf?: AlignSelfProperty | AlignSelfProperty[],
  msBlockProgression?: MsBlockProgressionProperty | MsBlockProgressionProperty[],
  msContentZoomChaining?: MsContentZoomChainingProperty | MsContentZoomChainingProperty[],
  msContentZoomLimitMax?: GlobalsString | GlobalsString[],
  msContentZoomLimitMin?: GlobalsString | GlobalsString[],
  msContentZoomSnapPoints?: GlobalsString | GlobalsString[],
  msContentZoomSnapType?: MsContentZoomSnapTypeProperty | MsContentZoomSnapTypeProperty[],
  msContentZooming?: MsContentZoomingProperty | MsContentZoomingProperty[],
  msFilter?: GlobalsString | GlobalsString[],
  msFlexDirection?: FlexDirectionProperty | FlexDirectionProperty[],
  msFlexPositive?: GlobalsNumber | GlobalsNumber[],
  msFlowFrom?: MsFlowFromProperty | MsFlowFromProperty[],
  msFlowInto?: MsFlowIntoProperty | MsFlowIntoProperty[],
  msGridColumns?: MsGridColumnsProperty<TLength> | MsGridColumnsProperty<TLength>[],
  msGridRows?: MsGridRowsProperty<TLength> | MsGridRowsProperty<TLength>[],
  msHighContrastAdjust?: MsHighContrastAdjustProperty | MsHighContrastAdjustProperty[],
  msHyphenateLimitChars?: MsHyphenateLimitCharsProperty | MsHyphenateLimitCharsProperty[],
  msHyphenateLimitLines?: MsHyphenateLimitLinesProperty | MsHyphenateLimitLinesProperty[],
  msHyphenateLimitZone?: MsHyphenateLimitZoneProperty<TLength> | MsHyphenateLimitZoneProperty<TLength>[],
  msHyphens?: HyphensProperty | HyphensProperty[],
  msImeAlign?: MsImeAlignProperty | MsImeAlignProperty[],
  msJustifySelf?: JustifySelfProperty | JustifySelfProperty[],
  msLineBreak?: LineBreakProperty | LineBreakProperty[],
  msOrder?: GlobalsNumber | GlobalsNumber[],
  msOverflowStyle?: MsOverflowStyleProperty | MsOverflowStyleProperty[],
  msOverflowX?: OverflowXProperty | OverflowXProperty[],
  msOverflowY?: OverflowYProperty | OverflowYProperty[],
  msScrollChaining?: MsScrollChainingProperty | MsScrollChainingProperty[],
  msScrollLimitXMax?: MsScrollLimitXMaxProperty<TLength> | MsScrollLimitXMaxProperty<TLength>[],
  msScrollLimitXMin?: MsScrollLimitXMinProperty<TLength> | MsScrollLimitXMinProperty<TLength>[],
  msScrollLimitYMax?: MsScrollLimitYMaxProperty<TLength> | MsScrollLimitYMaxProperty<TLength>[],
  msScrollLimitYMin?: MsScrollLimitYMinProperty<TLength> | MsScrollLimitYMinProperty<TLength>[],
  msScrollRails?: MsScrollRailsProperty | MsScrollRailsProperty[],
  msScrollSnapPointsX?: GlobalsString | GlobalsString[],
  msScrollSnapPointsY?: GlobalsString | GlobalsString[],
  msScrollSnapType?: MsScrollSnapTypeProperty | MsScrollSnapTypeProperty[],
  msScrollTranslation?: MsScrollTranslationProperty | MsScrollTranslationProperty[],
  msScrollbar3dlightColor?: MsScrollbar3dlightColorProperty | MsScrollbar3dlightColorProperty[],
  msScrollbarArrowColor?: MsScrollbarArrowColorProperty | MsScrollbarArrowColorProperty[],
  msScrollbarBaseColor?: MsScrollbarBaseColorProperty | MsScrollbarBaseColorProperty[],
  msScrollbarDarkshadowColor?: MsScrollbarDarkshadowColorProperty | MsScrollbarDarkshadowColorProperty[],
  msScrollbarFaceColor?: MsScrollbarFaceColorProperty | MsScrollbarFaceColorProperty[],
  msScrollbarHighlightColor?: MsScrollbarHighlightColorProperty | MsScrollbarHighlightColorProperty[],
  msScrollbarShadowColor?: MsScrollbarShadowColorProperty | MsScrollbarShadowColorProperty[],
  msTextAutospace?: MsTextAutospaceProperty | MsTextAutospaceProperty[],
  msTextCombineHorizontal?: TextCombineUprightProperty | TextCombineUprightProperty[],
  msTextOverflow?: TextOverflowProperty | TextOverflowProperty[],
  msTouchAction?: TouchActionProperty | TouchActionProperty[],
  msTouchSelect?: MsTouchSelectProperty | MsTouchSelectProperty[],
  msTransform?: TransformProperty | TransformProperty[],
  msTransformOrigin?: TransformOriginProperty<TLength> | TransformOriginProperty<TLength>[],
  msTransitionDelay?: GlobalsString | GlobalsString[],
  msTransitionDuration?: GlobalsString | GlobalsString[],
  msTransitionProperty?: TransitionPropertyProperty | TransitionPropertyProperty[],
  msTransitionTimingFunction?: TransitionTimingFunctionProperty | TransitionTimingFunctionProperty[],
  msUserSelect?: MsUserSelectProperty | MsUserSelectProperty[],
  msWordBreak?: WordBreakProperty | WordBreakProperty[],
  msWrapFlow?: MsWrapFlowProperty | MsWrapFlowProperty[],
  msWrapMargin?: MsWrapMarginProperty<TLength> | MsWrapMarginProperty<TLength>[],
  msWrapThrough?: MsWrapThroughProperty | MsWrapThroughProperty[],
  msWritingMode?: WritingModeProperty | WritingModeProperty[],
  WebkitAlignContent?: AlignContentProperty | AlignContentProperty[],
  WebkitAlignItems?: AlignItemsProperty | AlignItemsProperty[],
  WebkitAlignSelf?: AlignSelfProperty | AlignSelfProperty[],
  WebkitAnimationDelay?: GlobalsString | GlobalsString[],
  WebkitAnimationDirection?: AnimationDirectionProperty | AnimationDirectionProperty[],
  WebkitAnimationDuration?: GlobalsString | GlobalsString[],
  WebkitAnimationFillMode?: AnimationFillModeProperty | AnimationFillModeProperty[],
  WebkitAnimationIterationCount?: AnimationIterationCountProperty | AnimationIterationCountProperty[],
  WebkitAnimationName?: AnimationNameProperty | AnimationNameProperty[],
  WebkitAnimationPlayState?: AnimationPlayStateProperty | AnimationPlayStateProperty[],
  WebkitAnimationTimingFunction?: AnimationTimingFunctionProperty | AnimationTimingFunctionProperty[],
  WebkitAppearance?: WebkitAppearanceProperty | WebkitAppearanceProperty[],
  WebkitBackdropFilter?: BackdropFilterProperty | BackdropFilterProperty[],
  WebkitBackfaceVisibility?: BackfaceVisibilityProperty | BackfaceVisibilityProperty[],
  WebkitBackgroundClip?: BackgroundClipProperty | BackgroundClipProperty[],
  WebkitBackgroundOrigin?: BackgroundOriginProperty | BackgroundOriginProperty[],
  WebkitBackgroundSize?: BackgroundSizeProperty<TLength> | BackgroundSizeProperty<TLength>[],
  WebkitBorderBeforeColor?: WebkitBorderBeforeColorProperty | WebkitBorderBeforeColorProperty[],
  WebkitBorderBeforeStyle?: WebkitBorderBeforeStyleProperty | WebkitBorderBeforeStyleProperty[],
  WebkitBorderBeforeWidth?: WebkitBorderBeforeWidthProperty<TLength> | WebkitBorderBeforeWidthProperty<TLength>[],
  WebkitBorderBottomLeftRadius?: BorderBottomLeftRadiusProperty<TLength> | BorderBottomLeftRadiusProperty<TLength>[],
  WebkitBorderBottomRightRadius?: BorderBottomRightRadiusProperty<TLength> | BorderBottomRightRadiusProperty<TLength>[],
  WebkitBorderImageSlice?: BorderImageSliceProperty | BorderImageSliceProperty[],
  WebkitBorderTopLeftRadius?: BorderTopLeftRadiusProperty<TLength> | BorderTopLeftRadiusProperty<TLength>[],
  WebkitBorderTopRightRadius?: BorderTopRightRadiusProperty<TLength> | BorderTopRightRadiusProperty<TLength>[],
  WebkitBoxDecorationBreak?: BoxDecorationBreakProperty | BoxDecorationBreakProperty[],
  WebkitBoxReflect?: WebkitBoxReflectProperty<TLength> | WebkitBoxReflectProperty<TLength>[],
  WebkitBoxShadow?: BoxShadowProperty | BoxShadowProperty[],
  WebkitBoxSizing?: BoxSizingProperty | BoxSizingProperty[],
  WebkitClipPath?: ClipPathProperty | ClipPathProperty[],
  WebkitColumnCount?: ColumnCountProperty | ColumnCountProperty[],
  WebkitColumnFill?: ColumnFillProperty | ColumnFillProperty[],
  WebkitColumnGap?: ColumnGapProperty<TLength> | ColumnGapProperty<TLength>[],
  WebkitColumnRuleColor?: ColumnRuleColorProperty | ColumnRuleColorProperty[],
  WebkitColumnRuleStyle?: ColumnRuleStyleProperty | ColumnRuleStyleProperty[],
  WebkitColumnRuleWidth?: ColumnRuleWidthProperty<TLength> | ColumnRuleWidthProperty<TLength>[],
  WebkitColumnSpan?: ColumnSpanProperty | ColumnSpanProperty[],
  WebkitColumnWidth?: ColumnWidthProperty<TLength> | ColumnWidthProperty<TLength>[],
  WebkitFilter?: FilterProperty | FilterProperty[],
  WebkitFlexBasis?: FlexBasisProperty<TLength> | FlexBasisProperty<TLength>[],
  WebkitFlexDirection?: FlexDirectionProperty | FlexDirectionProperty[],
  WebkitFlexGrow?: GlobalsNumber | GlobalsNumber[],
  WebkitFlexShrink?: GlobalsNumber | GlobalsNumber[],
  WebkitFlexWrap?: FlexWrapProperty | FlexWrapProperty[],
  WebkitFontFeatureSettings?: FontFeatureSettingsProperty | FontFeatureSettingsProperty[],
  WebkitFontKerning?: FontKerningProperty | FontKerningProperty[],
  WebkitFontSmoothing?: FontSmoothProperty<TLength> | FontSmoothProperty<TLength>[],
  WebkitFontVariantLigatures?: FontVariantLigaturesProperty | FontVariantLigaturesProperty[],
  WebkitHyphens?: HyphensProperty | HyphensProperty[],
  WebkitJustifyContent?: JustifyContentProperty | JustifyContentProperty[],
  WebkitLineBreak?: LineBreakProperty | LineBreakProperty[],
  WebkitLineClamp?: WebkitLineClampProperty | WebkitLineClampProperty[],
  WebkitMarginEnd?: MarginInlineEndProperty<TLength> | MarginInlineEndProperty<TLength>[],
  WebkitMarginStart?: MarginInlineStartProperty<TLength> | MarginInlineStartProperty<TLength>[],
  WebkitMaskAttachment?: WebkitMaskAttachmentProperty | WebkitMaskAttachmentProperty[],
  WebkitMaskBoxImageOutset?: MaskBorderOutsetProperty<TLength> | MaskBorderOutsetProperty<TLength>[],
  WebkitMaskBoxImageRepeat?: MaskBorderRepeatProperty | MaskBorderRepeatProperty[],
  WebkitMaskBoxImageSlice?: MaskBorderSliceProperty | MaskBorderSliceProperty[],
  WebkitMaskBoxImageSource?: MaskBorderSourceProperty | MaskBorderSourceProperty[],
  WebkitMaskBoxImageWidth?: MaskBorderWidthProperty<TLength> | MaskBorderWidthProperty<TLength>[],
  WebkitMaskClip?: WebkitMaskClipProperty | WebkitMaskClipProperty[],
  WebkitMaskComposite?: WebkitMaskCompositeProperty | WebkitMaskCompositeProperty[],
  WebkitMaskImage?: WebkitMaskImageProperty | WebkitMaskImageProperty[],
  WebkitMaskOrigin?: WebkitMaskOriginProperty | WebkitMaskOriginProperty[],
  WebkitMaskPosition?: WebkitMaskPositionProperty<TLength> | WebkitMaskPositionProperty<TLength>[],
  WebkitMaskPositionX?: WebkitMaskPositionXProperty<TLength> | WebkitMaskPositionXProperty<TLength>[],
  WebkitMaskPositionY?: WebkitMaskPositionYProperty<TLength> | WebkitMaskPositionYProperty<TLength>[],
  WebkitMaskRepeat?: WebkitMaskRepeatProperty | WebkitMaskRepeatProperty[],
  WebkitMaskRepeatX?: WebkitMaskRepeatXProperty | WebkitMaskRepeatXProperty[],
  WebkitMaskRepeatY?: WebkitMaskRepeatYProperty | WebkitMaskRepeatYProperty[],
  WebkitMaskSize?: WebkitMaskSizeProperty<TLength> | WebkitMaskSizeProperty<TLength>[],
  WebkitMaxInlineSize?: MaxInlineSizeProperty<TLength> | MaxInlineSizeProperty<TLength>[],
  WebkitOrder?: GlobalsNumber | GlobalsNumber[],
  WebkitOverflowScrolling?: WebkitOverflowScrollingProperty | WebkitOverflowScrollingProperty[],
  WebkitPaddingEnd?: PaddingInlineEndProperty<TLength> | PaddingInlineEndProperty<TLength>[],
  WebkitPaddingStart?: PaddingInlineStartProperty<TLength> | PaddingInlineStartProperty<TLength>[],
  WebkitPerspective?: PerspectiveProperty<TLength> | PerspectiveProperty<TLength>[],
  WebkitPerspectiveOrigin?: PerspectiveOriginProperty<TLength> | PerspectiveOriginProperty<TLength>[],
  WebkitPrintColorAdjust?: ColorAdjustProperty | ColorAdjustProperty[],
  WebkitRubyPosition?: RubyPositionProperty | RubyPositionProperty[],
  WebkitScrollSnapType?: ScrollSnapTypeProperty | ScrollSnapTypeProperty[],
  WebkitShapeMargin?: ShapeMarginProperty<TLength> | ShapeMarginProperty<TLength>[],
  WebkitTapHighlightColor?: WebkitTapHighlightColorProperty | WebkitTapHighlightColorProperty[],
  WebkitTextCombine?: TextCombineUprightProperty | TextCombineUprightProperty[],
  WebkitTextDecorationColor?: TextDecorationColorProperty | TextDecorationColorProperty[],
  WebkitTextDecorationLine?: TextDecorationLineProperty | TextDecorationLineProperty[],
  WebkitTextDecorationSkip?: TextDecorationSkipProperty | TextDecorationSkipProperty[],
  WebkitTextDecorationStyle?: TextDecorationStyleProperty | TextDecorationStyleProperty[],
  WebkitTextEmphasisColor?: TextEmphasisColorProperty | TextEmphasisColorProperty[],
  WebkitTextEmphasisPosition?: GlobalsString | GlobalsString[],
  WebkitTextEmphasisStyle?: TextEmphasisStyleProperty | TextEmphasisStyleProperty[],
  WebkitTextFillColor?: WebkitTextFillColorProperty | WebkitTextFillColorProperty[],
  WebkitTextOrientation?: TextOrientationProperty | TextOrientationProperty[],
  WebkitTextSizeAdjust?: TextSizeAdjustProperty | TextSizeAdjustProperty[],
  WebkitTextStrokeColor?: WebkitTextStrokeColorProperty | WebkitTextStrokeColorProperty[],
  WebkitTextStrokeWidth?: WebkitTextStrokeWidthProperty<TLength> | WebkitTextStrokeWidthProperty<TLength>[],
  WebkitTextUnderlinePosition?: TextUnderlinePositionProperty | TextUnderlinePositionProperty[],
  WebkitTouchCallout?: WebkitTouchCalloutProperty | WebkitTouchCalloutProperty[],
  WebkitTransform?: TransformProperty | TransformProperty[],
  WebkitTransformOrigin?: TransformOriginProperty<TLength> | TransformOriginProperty<TLength>[],
  WebkitTransformStyle?: TransformStyleProperty | TransformStyleProperty[],
  WebkitTransitionDelay?: GlobalsString | GlobalsString[],
  WebkitTransitionDuration?: GlobalsString | GlobalsString[],
  WebkitTransitionProperty?: TransitionPropertyProperty | TransitionPropertyProperty[],
  WebkitTransitionTimingFunction?: TransitionTimingFunctionProperty | TransitionTimingFunctionProperty[],
  WebkitUserModify?: WebkitUserModifyProperty | WebkitUserModifyProperty[],
  WebkitUserSelect?: UserSelectProperty | UserSelectProperty[],
  WebkitWritingMode?: WritingModeProperty | WritingModeProperty[],
};

export type VendorShorthandPropertiesFallback<TLength = string | 0> = {
  MozAnimation?: AnimationProperty | AnimationProperty[],
  MozBorderImage?: BorderImageProperty | BorderImageProperty[],
  MozColumnRule?: ColumnRuleProperty<TLength> | ColumnRuleProperty<TLength>[],
  MozColumns?: ColumnsProperty<TLength> | ColumnsProperty<TLength>[],
  MozTransition?: TransitionProperty | TransitionProperty[],
  msContentZoomLimit?: GlobalsString | GlobalsString[],
  msContentZoomSnap?: MsContentZoomSnapProperty | MsContentZoomSnapProperty[],
  msFlex?: FlexProperty<TLength> | FlexProperty<TLength>[],
  msScrollLimit?: GlobalsString | GlobalsString[],
  msScrollSnapX?: GlobalsString | GlobalsString[],
  msScrollSnapY?: GlobalsString | GlobalsString[],
  msTransition?: TransitionProperty | TransitionProperty[],
  WebkitAnimation?: AnimationProperty | AnimationProperty[],
  WebkitBorderBefore?: WebkitBorderBeforeProperty<TLength> | WebkitBorderBeforeProperty<TLength>[],
  WebkitBorderImage?: BorderImageProperty | BorderImageProperty[],
  WebkitBorderRadius?: BorderRadiusProperty<TLength> | BorderRadiusProperty<TLength>[],
  WebkitColumnRule?: ColumnRuleProperty<TLength> | ColumnRuleProperty<TLength>[],
  WebkitColumns?: ColumnsProperty<TLength> | ColumnsProperty<TLength>[],
  WebkitFlex?: FlexProperty<TLength> | FlexProperty<TLength>[],
  WebkitFlexFlow?: FlexFlowProperty | FlexFlowProperty[],
  WebkitMask?: WebkitMaskProperty<TLength> | WebkitMaskProperty<TLength>[],
  WebkitMaskBoxImage?: MaskBorderProperty | MaskBorderProperty[],
  WebkitTextEmphasis?: TextEmphasisProperty | TextEmphasisProperty[],
  WebkitTextStroke?: WebkitTextStrokeProperty<TLength> | WebkitTextStrokeProperty<TLength>[],
  WebkitTransition?: TransitionProperty | TransitionProperty[],
};

export type VendorPropertiesFallback<TLength = string | 0> = VendorLonghandPropertiesFallback<TLength> & VendorShorthandPropertiesFallback<TLength>;

export type ObsoletePropertiesFallback<TLength = string | 0> = {
  azimuth?: AzimuthProperty | AzimuthProperty[],
  boxAlign?: BoxAlignProperty | BoxAlignProperty[],
  boxDirection?: BoxDirectionProperty | BoxDirectionProperty[],
  boxFlex?: GlobalsNumber | GlobalsNumber[],
  boxFlexGroup?: GlobalsNumber | GlobalsNumber[],
  boxLines?: BoxLinesProperty | BoxLinesProperty[],
  boxOrdinalGroup?: GlobalsNumber | GlobalsNumber[],
  boxOrient?: BoxOrientProperty | BoxOrientProperty[],
  boxPack?: BoxPackProperty | BoxPackProperty[],
  clip?: ClipProperty | ClipProperty[],
  fontVariantAlternates?: FontVariantAlternatesProperty | FontVariantAlternatesProperty[],
  gridColumnGap?: GridColumnGapProperty<TLength> | GridColumnGapProperty<TLength>[],
  gridGap?: GridGapProperty<TLength> | GridGapProperty<TLength>[],
  gridRowGap?: GridRowGapProperty<TLength> | GridRowGapProperty<TLength>[],
  imeMode?: ImeModeProperty | ImeModeProperty[],
  offsetBlock?: InsetBlockProperty<TLength> | InsetBlockProperty<TLength>[],
  offsetBlockEnd?: InsetBlockEndProperty<TLength> | InsetBlockEndProperty<TLength>[],
  offsetBlockStart?: InsetBlockStartProperty<TLength> | InsetBlockStartProperty<TLength>[],
  offsetInline?: InsetInlineProperty<TLength> | InsetInlineProperty<TLength>[],
  offsetInlineEnd?: InsetInlineEndProperty<TLength> | InsetInlineEndProperty<TLength>[],
  offsetInlineStart?: InsetInlineStartProperty<TLength> | InsetInlineStartProperty<TLength>[],
  scrollSnapCoordinate?: ScrollSnapCoordinateProperty<TLength> | ScrollSnapCoordinateProperty<TLength>[],
  scrollSnapDestination?: ScrollSnapDestinationProperty<TLength> | ScrollSnapDestinationProperty<TLength>[],
  scrollSnapPointsX?: ScrollSnapPointsXProperty | ScrollSnapPointsXProperty[],
  scrollSnapPointsY?: ScrollSnapPointsYProperty | ScrollSnapPointsYProperty[],
  scrollSnapTypeX?: ScrollSnapTypeXProperty | ScrollSnapTypeXProperty[],
  scrollSnapTypeY?: ScrollSnapTypeYProperty | ScrollSnapTypeYProperty[],
  scrollbarTrackColor?: MsScrollbarTrackColorProperty | MsScrollbarTrackColorProperty[],
  textCombineHorizontal?: TextCombineUprightProperty | TextCombineUprightProperty[],
  KhtmlBoxAlign?: BoxAlignProperty | BoxAlignProperty[],
  KhtmlBoxDirection?: BoxDirectionProperty | BoxDirectionProperty[],
  KhtmlBoxFlex?: GlobalsNumber | GlobalsNumber[],
  KhtmlBoxFlexGroup?: GlobalsNumber | GlobalsNumber[],
  KhtmlBoxLines?: BoxLinesProperty | BoxLinesProperty[],
  KhtmlBoxOrdinalGroup?: GlobalsNumber | GlobalsNumber[],
  KhtmlBoxOrient?: BoxOrientProperty | BoxOrientProperty[],
  KhtmlBoxPack?: BoxPackProperty | BoxPackProperty[],
  KhtmlLineBreak?: LineBreakProperty | LineBreakProperty[],
  KhtmlOpacity?: OpacityProperty | OpacityProperty[],
  KhtmlUserSelect?: UserSelectProperty | UserSelectProperty[],
  MozBackgroundClip?: BackgroundClipProperty | BackgroundClipProperty[],
  MozBackgroundInlinePolicy?: BoxDecorationBreakProperty | BoxDecorationBreakProperty[],
  MozBackgroundOrigin?: BackgroundOriginProperty | BackgroundOriginProperty[],
  MozBackgroundSize?: BackgroundSizeProperty<TLength> | BackgroundSizeProperty<TLength>[],
  MozBinding?: MozBindingProperty | MozBindingProperty[],
  MozBorderRadius?: BorderRadiusProperty<TLength> | BorderRadiusProperty<TLength>[],
  MozBorderRadiusBottomleft?: BorderBottomLeftRadiusProperty<TLength> | BorderBottomLeftRadiusProperty<TLength>[],
  MozBorderRadiusBottomright?: BorderBottomRightRadiusProperty<TLength> | BorderBottomRightRadiusProperty<TLength>[],
  MozBorderRadiusTopleft?: BorderTopLeftRadiusProperty<TLength> | BorderTopLeftRadiusProperty<TLength>[],
  MozBorderRadiusTopright?: BorderTopRightRadiusProperty<TLength> | BorderTopRightRadiusProperty<TLength>[],
  MozBoxAlign?: BoxAlignProperty | BoxAlignProperty[],
  MozBoxDirection?: BoxDirectionProperty | BoxDirectionProperty[],
  MozBoxFlex?: GlobalsNumber | GlobalsNumber[],
  MozBoxOrdinalGroup?: GlobalsNumber | GlobalsNumber[],
  MozBoxOrient?: BoxOrientProperty | BoxOrientProperty[],
  MozBoxPack?: BoxPackProperty | BoxPackProperty[],
  MozBoxShadow?: BoxShadowProperty | BoxShadowProperty[],
  MozFloatEdge?: MozFloatEdgeProperty | MozFloatEdgeProperty[],
  MozForceBrokenImageIcon?: GlobalsNumber | GlobalsNumber[],
  MozOpacity?: OpacityProperty | OpacityProperty[],
  MozOutline?: OutlineProperty<TLength> | OutlineProperty<TLength>[],
  MozOutlineColor?: OutlineColorProperty | OutlineColorProperty[],
  MozOutlineRadius?: MozOutlineRadiusProperty<TLength> | MozOutlineRadiusProperty<TLength>[],
  MozOutlineRadiusBottomleft?: MozOutlineRadiusBottomleftProperty<TLength> | MozOutlineRadiusBottomleftProperty<TLength>[],
  MozOutlineRadiusBottomright?: MozOutlineRadiusBottomrightProperty<TLength> | MozOutlineRadiusBottomrightProperty<TLength>[],
  MozOutlineRadiusTopleft?: MozOutlineRadiusTopleftProperty<TLength> | MozOutlineRadiusTopleftProperty<TLength>[],
  MozOutlineRadiusTopright?: MozOutlineRadiusToprightProperty<TLength> | MozOutlineRadiusToprightProperty<TLength>[],
  MozOutlineStyle?: OutlineStyleProperty | OutlineStyleProperty[],
  MozOutlineWidth?: OutlineWidthProperty<TLength> | OutlineWidthProperty<TLength>[],
  MozTextAlignLast?: TextAlignLastProperty | TextAlignLastProperty[],
  MozTextDecorationColor?: TextDecorationColorProperty | TextDecorationColorProperty[],
  MozTextDecorationLine?: TextDecorationLineProperty | TextDecorationLineProperty[],
  MozTextDecorationStyle?: TextDecorationStyleProperty | TextDecorationStyleProperty[],
  MozUserInput?: MozUserInputProperty | MozUserInputProperty[],
  msImeMode?: ImeModeProperty | ImeModeProperty[],
  msScrollbarTrackColor?: MsScrollbarTrackColorProperty | MsScrollbarTrackColorProperty[],
  OAnimation?: AnimationProperty | AnimationProperty[],
  OAnimationDelay?: GlobalsString | GlobalsString[],
  OAnimationDirection?: AnimationDirectionProperty | AnimationDirectionProperty[],
  OAnimationDuration?: GlobalsString | GlobalsString[],
  OAnimationFillMode?: AnimationFillModeProperty | AnimationFillModeProperty[],
  OAnimationIterationCount?: AnimationIterationCountProperty | AnimationIterationCountProperty[],
  OAnimationName?: AnimationNameProperty | AnimationNameProperty[],
  OAnimationPlayState?: AnimationPlayStateProperty | AnimationPlayStateProperty[],
  OAnimationTimingFunction?: AnimationTimingFunctionProperty | AnimationTimingFunctionProperty[],
  OBackgroundSize?: BackgroundSizeProperty<TLength> | BackgroundSizeProperty<TLength>[],
  OBorderImage?: BorderImageProperty | BorderImageProperty[],
  OObjectFit?: ObjectFitProperty | ObjectFitProperty[],
  OObjectPosition?: ObjectPositionProperty<TLength> | ObjectPositionProperty<TLength>[],
  OTabSize?: TabSizeProperty<TLength> | TabSizeProperty<TLength>[],
  OTextOverflow?: TextOverflowProperty | TextOverflowProperty[],
  OTransform?: TransformProperty | TransformProperty[],
  OTransformOrigin?: TransformOriginProperty<TLength> | TransformOriginProperty<TLength>[],
  OTransition?: TransitionProperty | TransitionProperty[],
  OTransitionDelay?: GlobalsString | GlobalsString[],
  OTransitionDuration?: GlobalsString | GlobalsString[],
  OTransitionProperty?: TransitionPropertyProperty | TransitionPropertyProperty[],
  OTransitionTimingFunction?: TransitionTimingFunctionProperty | TransitionTimingFunctionProperty[],
  WebkitBoxAlign?: BoxAlignProperty | BoxAlignProperty[],
  WebkitBoxDirection?: BoxDirectionProperty | BoxDirectionProperty[],
  WebkitBoxFlex?: GlobalsNumber | GlobalsNumber[],
  WebkitBoxFlexGroup?: GlobalsNumber | GlobalsNumber[],
  WebkitBoxLines?: BoxLinesProperty | BoxLinesProperty[],
  WebkitBoxOrdinalGroup?: GlobalsNumber | GlobalsNumber[],
  WebkitBoxOrient?: BoxOrientProperty | BoxOrientProperty[],
  WebkitBoxPack?: BoxPackProperty | BoxPackProperty[],
  WebkitScrollSnapPointsX?: ScrollSnapPointsXProperty | ScrollSnapPointsXProperty[],
  WebkitScrollSnapPointsY?: ScrollSnapPointsYProperty | ScrollSnapPointsYProperty[],
};

export type SvgPropertiesFallback<TLength = string | 0> = {
  alignmentBaseline?: AlignmentBaselineProperty | AlignmentBaselineProperty[],
  baselineShift?: BaselineShiftProperty<TLength> | BaselineShiftProperty<TLength>[],
  clip?: ClipProperty | ClipProperty[],
  clipPath?: ClipPathProperty | ClipPathProperty[],
  clipRule?: ClipRuleProperty | ClipRuleProperty[],
  color?: ColorProperty | ColorProperty[],
  colorInterpolation?: ColorInterpolationProperty | ColorInterpolationProperty[],
  colorRendering?: ColorRenderingProperty | ColorRenderingProperty[],
  cursor?: CursorProperty | CursorProperty[],
  direction?: DirectionProperty | DirectionProperty[],
  display?: DisplayProperty | DisplayProperty[],
  dominantBaseline?: DominantBaselineProperty | DominantBaselineProperty[],
  fill?: FillProperty | FillProperty[],
  fillOpacity?: GlobalsNumber | GlobalsNumber[],
  fillRule?: FillRuleProperty | FillRuleProperty[],
  filter?: FilterProperty | FilterProperty[],
  floodColor?: FloodColorProperty | FloodColorProperty[],
  floodOpacity?: GlobalsNumber | GlobalsNumber[],
  font?: FontProperty | FontProperty[],
  fontFamily?: FontFamilyProperty | FontFamilyProperty[],
  fontSize?: FontSizeProperty<TLength> | FontSizeProperty<TLength>[],
  fontSizeAdjust?: FontSizeAdjustProperty | FontSizeAdjustProperty[],
  fontStretch?: FontStretchProperty | FontStretchProperty[],
  fontStyle?: FontStyleProperty | FontStyleProperty[],
  fontVariant?: FontVariantProperty | FontVariantProperty[],
  fontWeight?: FontWeightProperty | FontWeightProperty[],
  glyphOrientationVertical?: GlyphOrientationVerticalProperty | GlyphOrientationVerticalProperty[],
  imageRendering?: ImageRenderingProperty | ImageRenderingProperty[],
  letterSpacing?: LetterSpacingProperty<TLength> | LetterSpacingProperty<TLength>[],
  lightingColor?: LightingColorProperty | LightingColorProperty[],
  lineHeight?: LineHeightProperty<TLength> | LineHeightProperty<TLength>[],
  marker?: MarkerProperty | MarkerProperty[],
  markerEnd?: MarkerEndProperty | MarkerEndProperty[],
  markerMid?: MarkerMidProperty | MarkerMidProperty[],
  markerStart?: MarkerStartProperty | MarkerStartProperty[],
  mask?: MaskProperty<TLength> | MaskProperty<TLength>[],
  opacity?: OpacityProperty | OpacityProperty[],
  overflow?: OverflowProperty | OverflowProperty[],
  paintOrder?: PaintOrderProperty | PaintOrderProperty[],
  pointerEvents?: PointerEventsProperty | PointerEventsProperty[],
  shapeRendering?: ShapeRenderingProperty | ShapeRenderingProperty[],
  stopColor?: StopColorProperty | StopColorProperty[],
  stopOpacity?: GlobalsNumber | GlobalsNumber[],
  stroke?: StrokeProperty | StrokeProperty[],
  strokeDasharray?: StrokeDasharrayProperty<TLength> | StrokeDasharrayProperty<TLength>[],
  strokeDashoffset?: StrokeDashoffsetProperty<TLength> | StrokeDashoffsetProperty<TLength>[],
  strokeLinecap?: StrokeLinecapProperty | StrokeLinecapProperty[],
  strokeLinejoin?: StrokeLinejoinProperty | StrokeLinejoinProperty[],
  strokeMiterlimit?: GlobalsNumber | GlobalsNumber[],
  strokeOpacity?: GlobalsNumber | GlobalsNumber[],
  strokeWidth?: StrokeWidthProperty<TLength> | StrokeWidthProperty<TLength>[],
  textAnchor?: TextAnchorProperty | TextAnchorProperty[],
  textDecoration?: TextDecorationProperty<TLength> | TextDecorationProperty<TLength>[],
  textRendering?: TextRenderingProperty | TextRenderingProperty[],
  unicodeBidi?: UnicodeBidiProperty | UnicodeBidiProperty[],
  vectorEffect?: VectorEffectProperty | VectorEffectProperty[],
  visibility?: VisibilityProperty | VisibilityProperty[],
  whiteSpace?: WhiteSpaceProperty | WhiteSpaceProperty[],
  wordSpacing?: WordSpacingProperty<TLength> | WordSpacingProperty<TLength>[],
  writingMode?: WritingModeProperty | WritingModeProperty[],
};

export type PropertiesFallback<TLength = string | 0> = StandardPropertiesFallback<TLength> &
  VendorPropertiesFallback<TLength> &
  ObsoletePropertiesFallback<TLength> &
  SvgPropertiesFallback<TLength>;

export type StandardLonghandPropertiesHyphenFallback<TLength = string | 0> = {
  "align-content"?: AlignContentProperty | AlignContentProperty[],
  "align-items"?: AlignItemsProperty | AlignItemsProperty[],
  "align-self"?: AlignSelfProperty | AlignSelfProperty[],
  "align-tracks"?: AlignTracksProperty | AlignTracksProperty[],
  "animation-delay"?: GlobalsString | GlobalsString[],
  "animation-direction"?: AnimationDirectionProperty | AnimationDirectionProperty[],
  "animation-duration"?: GlobalsString | GlobalsString[],
  "animation-fill-mode"?: AnimationFillModeProperty | AnimationFillModeProperty[],
  "animation-iteration-count"?: AnimationIterationCountProperty | AnimationIterationCountProperty[],
  "animation-name"?: AnimationNameProperty | AnimationNameProperty[],
  "animation-play-state"?: AnimationPlayStateProperty | AnimationPlayStateProperty[],
  "animation-timing-function"?: AnimationTimingFunctionProperty | AnimationTimingFunctionProperty[],
  appearance?: AppearanceProperty | AppearanceProperty[],
  "aspect-ratio"?: AspectRatioProperty | AspectRatioProperty[],
  "backdrop-filter"?: BackdropFilterProperty | BackdropFilterProperty[],
  "backface-visibility"?: BackfaceVisibilityProperty | BackfaceVisibilityProperty[],
  "background-attachment"?: BackgroundAttachmentProperty | BackgroundAttachmentProperty[],
  "background-blend-mode"?: BackgroundBlendModeProperty | BackgroundBlendModeProperty[],
  "background-clip"?: BackgroundClipProperty | BackgroundClipProperty[],
  "background-color"?: BackgroundColorProperty | BackgroundColorProperty[],
  "background-image"?: BackgroundImageProperty | BackgroundImageProperty[],
  "background-origin"?: BackgroundOriginProperty | BackgroundOriginProperty[],
  "background-position"?: BackgroundPositionProperty<TLength> | BackgroundPositionProperty<TLength>[],
  "background-position-x"?: BackgroundPositionXProperty<TLength> | BackgroundPositionXProperty<TLength>[],
  "background-position-y"?: BackgroundPositionYProperty<TLength> | BackgroundPositionYProperty<TLength>[],
  "background-repeat"?: BackgroundRepeatProperty | BackgroundRepeatProperty[],
  "background-size"?: BackgroundSizeProperty<TLength> | BackgroundSizeProperty<TLength>[],
  "block-overflow"?: BlockOverflowProperty | BlockOverflowProperty[],
  "block-size"?: BlockSizeProperty<TLength> | BlockSizeProperty<TLength>[],
  "border-block-color"?: BorderBlockColorProperty | BorderBlockColorProperty[],
  "border-block-end-color"?: BorderBlockEndColorProperty | BorderBlockEndColorProperty[],
  "border-block-end-style"?: BorderBlockEndStyleProperty | BorderBlockEndStyleProperty[],
  "border-block-end-width"?: BorderBlockEndWidthProperty<TLength> | BorderBlockEndWidthProperty<TLength>[],
  "border-block-start-color"?: BorderBlockStartColorProperty | BorderBlockStartColorProperty[],
  "border-block-start-style"?: BorderBlockStartStyleProperty | BorderBlockStartStyleProperty[],
  "border-block-start-width"?: BorderBlockStartWidthProperty<TLength> | BorderBlockStartWidthProperty<TLength>[],
  "border-block-style"?: BorderBlockStyleProperty | BorderBlockStyleProperty[],
  "border-block-width"?: BorderBlockWidthProperty<TLength> | BorderBlockWidthProperty<TLength>[],
  "border-bottom-color"?: BorderBottomColorProperty | BorderBottomColorProperty[],
  "border-bottom-left-radius"?: BorderBottomLeftRadiusProperty<TLength> | BorderBottomLeftRadiusProperty<TLength>[],
  "border-bottom-right-radius"?: BorderBottomRightRadiusProperty<TLength> | BorderBottomRightRadiusProperty<TLength>[],
  "border-bottom-style"?: BorderBottomStyleProperty | BorderBottomStyleProperty[],
  "border-bottom-width"?: BorderBottomWidthProperty<TLength> | BorderBottomWidthProperty<TLength>[],
  "border-collapse"?: BorderCollapseProperty | BorderCollapseProperty[],
  "border-end-end-radius"?: BorderEndEndRadiusProperty<TLength> | BorderEndEndRadiusProperty<TLength>[],
  "border-end-start-radius"?: BorderEndStartRadiusProperty<TLength> | BorderEndStartRadiusProperty<TLength>[],
  "border-image-outset"?: BorderImageOutsetProperty<TLength> | BorderImageOutsetProperty<TLength>[],
  "border-image-repeat"?: BorderImageRepeatProperty | BorderImageRepeatProperty[],
  "border-image-slice"?: BorderImageSliceProperty | BorderImageSliceProperty[],
  "border-image-source"?: BorderImageSourceProperty | BorderImageSourceProperty[],
  "border-image-width"?: BorderImageWidthProperty<TLength> | BorderImageWidthProperty<TLength>[],
  "border-inline-color"?: BorderInlineColorProperty | BorderInlineColorProperty[],
  "border-inline-end-color"?: BorderInlineEndColorProperty | BorderInlineEndColorProperty[],
  "border-inline-end-style"?: BorderInlineEndStyleProperty | BorderInlineEndStyleProperty[],
  "border-inline-end-width"?: BorderInlineEndWidthProperty<TLength> | BorderInlineEndWidthProperty<TLength>[],
  "border-inline-start-color"?: BorderInlineStartColorProperty | BorderInlineStartColorProperty[],
  "border-inline-start-style"?: BorderInlineStartStyleProperty | BorderInlineStartStyleProperty[],
  "border-inline-start-width"?: BorderInlineStartWidthProperty<TLength> | BorderInlineStartWidthProperty<TLength>[],
  "border-inline-style"?: BorderInlineStyleProperty | BorderInlineStyleProperty[],
  "border-inline-width"?: BorderInlineWidthProperty<TLength> | BorderInlineWidthProperty<TLength>[],
  "border-left-color"?: BorderLeftColorProperty | BorderLeftColorProperty[],
  "border-left-style"?: BorderLeftStyleProperty | BorderLeftStyleProperty[],
  "border-left-width"?: BorderLeftWidthProperty<TLength> | BorderLeftWidthProperty<TLength>[],
  "border-right-color"?: BorderRightColorProperty | BorderRightColorProperty[],
  "border-right-style"?: BorderRightStyleProperty | BorderRightStyleProperty[],
  "border-right-width"?: BorderRightWidthProperty<TLength> | BorderRightWidthProperty<TLength>[],
  "border-spacing"?: BorderSpacingProperty<TLength> | BorderSpacingProperty<TLength>[],
  "border-start-end-radius"?: BorderStartEndRadiusProperty<TLength> | BorderStartEndRadiusProperty<TLength>[],
  "border-start-start-radius"?: BorderStartStartRadiusProperty<TLength> | BorderStartStartRadiusProperty<TLength>[],
  "border-top-color"?: BorderTopColorProperty | BorderTopColorProperty[],
  "border-top-left-radius"?: BorderTopLeftRadiusProperty<TLength> | BorderTopLeftRadiusProperty<TLength>[],
  "border-top-right-radius"?: BorderTopRightRadiusProperty<TLength> | BorderTopRightRadiusProperty<TLength>[],
  "border-top-style"?: BorderTopStyleProperty | BorderTopStyleProperty[],
  "border-top-width"?: BorderTopWidthProperty<TLength> | BorderTopWidthProperty<TLength>[],
  bottom?: BottomProperty<TLength> | BottomProperty<TLength>[],
  "box-decoration-break"?: BoxDecorationBreakProperty | BoxDecorationBreakProperty[],
  "box-shadow"?: BoxShadowProperty | BoxShadowProperty[],
  "box-sizing"?: BoxSizingProperty | BoxSizingProperty[],
  "break-after"?: BreakAfterProperty | BreakAfterProperty[],
  "break-before"?: BreakBeforeProperty | BreakBeforeProperty[],
  "break-inside"?: BreakInsideProperty | BreakInsideProperty[],
  "caption-side"?: CaptionSideProperty | CaptionSideProperty[],
  "caret-color"?: CaretColorProperty | CaretColorProperty[],
  clear?: ClearProperty | ClearProperty[],
  "clip-path"?: ClipPathProperty | ClipPathProperty[],
  color?: ColorProperty | ColorProperty[],
  "color-adjust"?: ColorAdjustProperty | ColorAdjustProperty[],
  "column-count"?: ColumnCountProperty | ColumnCountProperty[],
  "column-fill"?: ColumnFillProperty | ColumnFillProperty[],
  "column-gap"?: ColumnGapProperty<TLength> | ColumnGapProperty<TLength>[],
  "column-rule-color"?: ColumnRuleColorProperty | ColumnRuleColorProperty[],
  "column-rule-style"?: ColumnRuleStyleProperty | ColumnRuleStyleProperty[],
  "column-rule-width"?: ColumnRuleWidthProperty<TLength> | ColumnRuleWidthProperty<TLength>[],
  "column-span"?: ColumnSpanProperty | ColumnSpanProperty[],
  "column-width"?: ColumnWidthProperty<TLength> | ColumnWidthProperty<TLength>[],
  contain?: ContainProperty | ContainProperty[],
  content?: ContentProperty | ContentProperty[],
  "content-visibility"?: ContentVisibilityProperty | ContentVisibilityProperty[],
  "counter-increment"?: CounterIncrementProperty | CounterIncrementProperty[],
  "counter-reset"?: CounterResetProperty | CounterResetProperty[],
  "counter-set"?: CounterSetProperty | CounterSetProperty[],
  cursor?: CursorProperty | CursorProperty[],
  direction?: DirectionProperty | DirectionProperty[],
  display?: DisplayProperty | DisplayProperty[],
  "empty-cells"?: EmptyCellsProperty | EmptyCellsProperty[],
  filter?: FilterProperty | FilterProperty[],
  "flex-basis"?: FlexBasisProperty<TLength> | FlexBasisProperty<TLength>[],
  "flex-direction"?: FlexDirectionProperty | FlexDirectionProperty[],
  "flex-grow"?: GlobalsNumber | GlobalsNumber[],
  "flex-shrink"?: GlobalsNumber | GlobalsNumber[],
  "flex-wrap"?: FlexWrapProperty | FlexWrapProperty[],
  float?: FloatProperty | FloatProperty[],
  "font-family"?: FontFamilyProperty | FontFamilyProperty[],
  "font-feature-settings"?: FontFeatureSettingsProperty | FontFeatureSettingsProperty[],
  "font-kerning"?: FontKerningProperty | FontKerningProperty[],
  "font-language-override"?: FontLanguageOverrideProperty | FontLanguageOverrideProperty[],
  "font-optical-sizing"?: FontOpticalSizingProperty | FontOpticalSizingProperty[],
  "font-size"?: FontSizeProperty<TLength> | FontSizeProperty<TLength>[],
  "font-size-adjust"?: FontSizeAdjustProperty | FontSizeAdjustProperty[],
  "font-smooth"?: FontSmoothProperty<TLength> | FontSmoothProperty<TLength>[],
  "font-stretch"?: FontStretchProperty | FontStretchProperty[],
  "font-style"?: FontStyleProperty | FontStyleProperty[],
  "font-synthesis"?: FontSynthesisProperty | FontSynthesisProperty[],
  "font-variant"?: FontVariantProperty | FontVariantProperty[],
  "font-variant-caps"?: FontVariantCapsProperty | FontVariantCapsProperty[],
  "font-variant-east-asian"?: FontVariantEastAsianProperty | FontVariantEastAsianProperty[],
  "font-variant-ligatures"?: FontVariantLigaturesProperty | FontVariantLigaturesProperty[],
  "font-variant-numeric"?: FontVariantNumericProperty | FontVariantNumericProperty[],
  "font-variant-position"?: FontVariantPositionProperty | FontVariantPositionProperty[],
  "font-variation-settings"?: FontVariationSettingsProperty | FontVariationSettingsProperty[],
  "font-weight"?: FontWeightProperty | FontWeightProperty[],
  "forced-color-adjust"?: ForcedColorAdjustProperty | ForcedColorAdjustProperty[],
  "grid-auto-columns"?: GridAutoColumnsProperty<TLength> | GridAutoColumnsProperty<TLength>[],
  "grid-auto-flow"?: GridAutoFlowProperty | GridAutoFlowProperty[],
  "grid-auto-rows"?: GridAutoRowsProperty<TLength> | GridAutoRowsProperty<TLength>[],
  "grid-column-end"?: GridColumnEndProperty | GridColumnEndProperty[],
  "grid-column-start"?: GridColumnStartProperty | GridColumnStartProperty[],
  "grid-row-end"?: GridRowEndProperty | GridRowEndProperty[],
  "grid-row-start"?: GridRowStartProperty | GridRowStartProperty[],
  "grid-template-areas"?: GridTemplateAreasProperty | GridTemplateAreasProperty[],
  "grid-template-columns"?: GridTemplateColumnsProperty<TLength> | GridTemplateColumnsProperty<TLength>[],
  "grid-template-rows"?: GridTemplateRowsProperty<TLength> | GridTemplateRowsProperty<TLength>[],
  "hanging-punctuation"?: HangingPunctuationProperty | HangingPunctuationProperty[],
  height?: HeightProperty<TLength> | HeightProperty<TLength>[],
  hyphens?: HyphensProperty | HyphensProperty[],
  "image-orientation"?: ImageOrientationProperty | ImageOrientationProperty[],
  "image-rendering"?: ImageRenderingProperty | ImageRenderingProperty[],
  "image-resolution"?: ImageResolutionProperty | ImageResolutionProperty[],
  "initial-letter"?: InitialLetterProperty | InitialLetterProperty[],
  "inline-size"?: InlineSizeProperty<TLength> | InlineSizeProperty<TLength>[],
  inset?: InsetProperty<TLength> | InsetProperty<TLength>[],
  "inset-block"?: InsetBlockProperty<TLength> | InsetBlockProperty<TLength>[],
  "inset-block-end"?: InsetBlockEndProperty<TLength> | InsetBlockEndProperty<TLength>[],
  "inset-block-start"?: InsetBlockStartProperty<TLength> | InsetBlockStartProperty<TLength>[],
  "inset-inline"?: InsetInlineProperty<TLength> | InsetInlineProperty<TLength>[],
  "inset-inline-end"?: InsetInlineEndProperty<TLength> | InsetInlineEndProperty<TLength>[],
  "inset-inline-start"?: InsetInlineStartProperty<TLength> | InsetInlineStartProperty<TLength>[],
  isolation?: IsolationProperty | IsolationProperty[],
  "justify-content"?: JustifyContentProperty | JustifyContentProperty[],
  "justify-items"?: JustifyItemsProperty | JustifyItemsProperty[],
  "justify-self"?: JustifySelfProperty | JustifySelfProperty[],
  "justify-tracks"?: JustifyTracksProperty | JustifyTracksProperty[],
  left?: LeftProperty<TLength> | LeftProperty<TLength>[],
  "letter-spacing"?: LetterSpacingProperty<TLength> | LetterSpacingProperty<TLength>[],
  "line-break"?: LineBreakProperty | LineBreakProperty[],
  "line-height"?: LineHeightProperty<TLength> | LineHeightProperty<TLength>[],
  "line-height-step"?: LineHeightStepProperty<TLength> | LineHeightStepProperty<TLength>[],
  "list-style-image"?: ListStyleImageProperty | ListStyleImageProperty[],
  "list-style-position"?: ListStylePositionProperty | ListStylePositionProperty[],
  "list-style-type"?: ListStyleTypeProperty | ListStyleTypeProperty[],
  "margin-block"?: MarginBlockProperty<TLength> | MarginBlockProperty<TLength>[],
  "margin-block-end"?: MarginBlockEndProperty<TLength> | MarginBlockEndProperty<TLength>[],
  "margin-block-start"?: MarginBlockStartProperty<TLength> | MarginBlockStartProperty<TLength>[],
  "margin-bottom"?: MarginBottomProperty<TLength> | MarginBottomProperty<TLength>[],
  "margin-inline"?: MarginInlineProperty<TLength> | MarginInlineProperty<TLength>[],
  "margin-inline-end"?: MarginInlineEndProperty<TLength> | MarginInlineEndProperty<TLength>[],
  "margin-inline-start"?: MarginInlineStartProperty<TLength> | MarginInlineStartProperty<TLength>[],
  "margin-left"?: MarginLeftProperty<TLength> | MarginLeftProperty<TLength>[],
  "margin-right"?: MarginRightProperty<TLength> | MarginRightProperty<TLength>[],
  "margin-top"?: MarginTopProperty<TLength> | MarginTopProperty<TLength>[],
  "mask-border-mode"?: MaskBorderModeProperty | MaskBorderModeProperty[],
  "mask-border-outset"?: MaskBorderOutsetProperty<TLength> | MaskBorderOutsetProperty<TLength>[],
  "mask-border-repeat"?: MaskBorderRepeatProperty | MaskBorderRepeatProperty[],
  "mask-border-slice"?: MaskBorderSliceProperty | MaskBorderSliceProperty[],
  "mask-border-source"?: MaskBorderSourceProperty | MaskBorderSourceProperty[],
  "mask-border-width"?: MaskBorderWidthProperty<TLength> | MaskBorderWidthProperty<TLength>[],
  "mask-clip"?: MaskClipProperty | MaskClipProperty[],
  "mask-composite"?: MaskCompositeProperty | MaskCompositeProperty[],
  "mask-image"?: MaskImageProperty | MaskImageProperty[],
  "mask-mode"?: MaskModeProperty | MaskModeProperty[],
  "mask-origin"?: MaskOriginProperty | MaskOriginProperty[],
  "mask-position"?: MaskPositionProperty<TLength> | MaskPositionProperty<TLength>[],
  "mask-repeat"?: MaskRepeatProperty | MaskRepeatProperty[],
  "mask-size"?: MaskSizeProperty<TLength> | MaskSizeProperty<TLength>[],
  "mask-type"?: MaskTypeProperty | MaskTypeProperty[],
  "math-style"?: MathStyleProperty | MathStyleProperty[],
  "max-block-size"?: MaxBlockSizeProperty<TLength> | MaxBlockSizeProperty<TLength>[],
  "max-height"?: MaxHeightProperty<TLength> | MaxHeightProperty<TLength>[],
  "max-inline-size"?: MaxInlineSizeProperty<TLength> | MaxInlineSizeProperty<TLength>[],
  "max-lines"?: MaxLinesProperty | MaxLinesProperty[],
  "max-width"?: MaxWidthProperty<TLength> | MaxWidthProperty<TLength>[],
  "min-block-size"?: MinBlockSizeProperty<TLength> | MinBlockSizeProperty<TLength>[],
  "min-height"?: MinHeightProperty<TLength> | MinHeightProperty<TLength>[],
  "min-inline-size"?: MinInlineSizeProperty<TLength> | MinInlineSizeProperty<TLength>[],
  "min-width"?: MinWidthProperty<TLength> | MinWidthProperty<TLength>[],
  "mix-blend-mode"?: MixBlendModeProperty | MixBlendModeProperty[],
  "motion-distance"?: OffsetDistanceProperty<TLength> | OffsetDistanceProperty<TLength>[],
  "motion-path"?: OffsetPathProperty | OffsetPathProperty[],
  "motion-rotation"?: OffsetRotateProperty | OffsetRotateProperty[],
  "object-fit"?: ObjectFitProperty | ObjectFitProperty[],
  "object-position"?: ObjectPositionProperty<TLength> | ObjectPositionProperty<TLength>[],
  "offset-anchor"?: OffsetAnchorProperty<TLength> | OffsetAnchorProperty<TLength>[],
  "offset-distance"?: OffsetDistanceProperty<TLength> | OffsetDistanceProperty<TLength>[],
  "offset-path"?: OffsetPathProperty | OffsetPathProperty[],
  "offset-rotate"?: OffsetRotateProperty | OffsetRotateProperty[],
  "offset-rotation"?: OffsetRotateProperty | OffsetRotateProperty[],
  opacity?: OpacityProperty | OpacityProperty[],
  order?: GlobalsNumber | GlobalsNumber[],
  orphans?: GlobalsNumber | GlobalsNumber[],
  "outline-color"?: OutlineColorProperty | OutlineColorProperty[],
  "outline-offset"?: OutlineOffsetProperty<TLength> | OutlineOffsetProperty<TLength>[],
  "outline-style"?: OutlineStyleProperty | OutlineStyleProperty[],
  "outline-width"?: OutlineWidthProperty<TLength> | OutlineWidthProperty<TLength>[],
  "overflow-anchor"?: OverflowAnchorProperty | OverflowAnchorProperty[],
  "overflow-block"?: OverflowBlockProperty | OverflowBlockProperty[],
  "overflow-clip-box"?: OverflowClipBoxProperty | OverflowClipBoxProperty[],
  "overflow-inline"?: OverflowInlineProperty | OverflowInlineProperty[],
  "overflow-wrap"?: OverflowWrapProperty | OverflowWrapProperty[],
  "overflow-x"?: OverflowXProperty | OverflowXProperty[],
  "overflow-y"?: OverflowYProperty | OverflowYProperty[],
  "overscroll-behavior"?: OverscrollBehaviorProperty | OverscrollBehaviorProperty[],
  "overscroll-behavior-block"?: OverscrollBehaviorBlockProperty | OverscrollBehaviorBlockProperty[],
  "overscroll-behavior-inline"?: OverscrollBehaviorInlineProperty | OverscrollBehaviorInlineProperty[],
  "overscroll-behavior-x"?: OverscrollBehaviorXProperty | OverscrollBehaviorXProperty[],
  "overscroll-behavior-y"?: OverscrollBehaviorYProperty | OverscrollBehaviorYProperty[],
  "padding-block"?: PaddingBlockProperty<TLength> | PaddingBlockProperty<TLength>[],
  "padding-block-end"?: PaddingBlockEndProperty<TLength> | PaddingBlockEndProperty<TLength>[],
  "padding-block-start"?: PaddingBlockStartProperty<TLength> | PaddingBlockStartProperty<TLength>[],
  "padding-bottom"?: PaddingBottomProperty<TLength> | PaddingBottomProperty<TLength>[],
  "padding-inline"?: PaddingInlineProperty<TLength> | PaddingInlineProperty<TLength>[],
  "padding-inline-end"?: PaddingInlineEndProperty<TLength> | PaddingInlineEndProperty<TLength>[],
  "padding-inline-start"?: PaddingInlineStartProperty<TLength> | PaddingInlineStartProperty<TLength>[],
  "padding-left"?: PaddingLeftProperty<TLength> | PaddingLeftProperty<TLength>[],
  "padding-right"?: PaddingRightProperty<TLength> | PaddingRightProperty<TLength>[],
  "padding-top"?: PaddingTopProperty<TLength> | PaddingTopProperty<TLength>[],
  "page-break-after"?: PageBreakAfterProperty | PageBreakAfterProperty[],
  "page-break-before"?: PageBreakBeforeProperty | PageBreakBeforeProperty[],
  "page-break-inside"?: PageBreakInsideProperty | PageBreakInsideProperty[],
  "paint-order"?: PaintOrderProperty | PaintOrderProperty[],
  perspective?: PerspectiveProperty<TLength> | PerspectiveProperty<TLength>[],
  "perspective-origin"?: PerspectiveOriginProperty<TLength> | PerspectiveOriginProperty<TLength>[],
  "place-content"?: PlaceContentProperty | PlaceContentProperty[],
  "pointer-events"?: PointerEventsProperty | PointerEventsProperty[],
  position?: PositionProperty | PositionProperty[],
  quotes?: QuotesProperty | QuotesProperty[],
  resize?: ResizeProperty | ResizeProperty[],
  right?: RightProperty<TLength> | RightProperty<TLength>[],
  rotate?: RotateProperty | RotateProperty[],
  "row-gap"?: RowGapProperty<TLength> | RowGapProperty<TLength>[],
  "ruby-align"?: RubyAlignProperty | RubyAlignProperty[],
  "ruby-merge"?: RubyMergeProperty | RubyMergeProperty[],
  "ruby-position"?: RubyPositionProperty | RubyPositionProperty[],
  scale?: ScaleProperty | ScaleProperty[],
  "scroll-behavior"?: ScrollBehaviorProperty | ScrollBehaviorProperty[],
  "scroll-margin"?: ScrollMarginProperty<TLength> | ScrollMarginProperty<TLength>[],
  "scroll-margin-block"?: ScrollMarginBlockProperty<TLength> | ScrollMarginBlockProperty<TLength>[],
  "scroll-margin-block-end"?: ScrollMarginBlockEndProperty<TLength> | ScrollMarginBlockEndProperty<TLength>[],
  "scroll-margin-block-start"?: ScrollMarginBlockStartProperty<TLength> | ScrollMarginBlockStartProperty<TLength>[],
  "scroll-margin-bottom"?: ScrollMarginBottomProperty<TLength> | ScrollMarginBottomProperty<TLength>[],
  "scroll-margin-inline"?: ScrollMarginInlineProperty<TLength> | ScrollMarginInlineProperty<TLength>[],
  "scroll-margin-inline-end"?: ScrollMarginInlineEndProperty<TLength> | ScrollMarginInlineEndProperty<TLength>[],
  "scroll-margin-inline-start"?: ScrollMarginInlineStartProperty<TLength> | ScrollMarginInlineStartProperty<TLength>[],
  "scroll-margin-left"?: ScrollMarginLeftProperty<TLength> | ScrollMarginLeftProperty<TLength>[],
  "scroll-margin-right"?: ScrollMarginRightProperty<TLength> | ScrollMarginRightProperty<TLength>[],
  "scroll-margin-top"?: ScrollMarginTopProperty<TLength> | ScrollMarginTopProperty<TLength>[],
  "scroll-padding"?: ScrollPaddingProperty<TLength> | ScrollPaddingProperty<TLength>[],
  "scroll-padding-block"?: ScrollPaddingBlockProperty<TLength> | ScrollPaddingBlockProperty<TLength>[],
  "scroll-padding-block-end"?: ScrollPaddingBlockEndProperty<TLength> | ScrollPaddingBlockEndProperty<TLength>[],
  "scroll-padding-block-start"?: ScrollPaddingBlockStartProperty<TLength> | ScrollPaddingBlockStartProperty<TLength>[],
  "scroll-padding-bottom"?: ScrollPaddingBottomProperty<TLength> | ScrollPaddingBottomProperty<TLength>[],
  "scroll-padding-inline"?: ScrollPaddingInlineProperty<TLength> | ScrollPaddingInlineProperty<TLength>[],
  "scroll-padding-inline-end"?: ScrollPaddingInlineEndProperty<TLength> | ScrollPaddingInlineEndProperty<TLength>[],
  "scroll-padding-inline-start"?: ScrollPaddingInlineStartProperty<TLength> | ScrollPaddingInlineStartProperty<TLength>[],
  "scroll-padding-left"?: ScrollPaddingLeftProperty<TLength> | ScrollPaddingLeftProperty<TLength>[],
  "scroll-padding-right"?: ScrollPaddingRightProperty<TLength> | ScrollPaddingRightProperty<TLength>[],
  "scroll-padding-top"?: ScrollPaddingTopProperty<TLength> | ScrollPaddingTopProperty<TLength>[],
  "scroll-snap-align"?: ScrollSnapAlignProperty | ScrollSnapAlignProperty[],
  "scroll-snap-margin"?: ScrollMarginProperty<TLength> | ScrollMarginProperty<TLength>[],
  "scroll-snap-margin-bottom"?: ScrollMarginBottomProperty<TLength> | ScrollMarginBottomProperty<TLength>[],
  "scroll-snap-margin-left"?: ScrollMarginLeftProperty<TLength> | ScrollMarginLeftProperty<TLength>[],
  "scroll-snap-margin-right"?: ScrollMarginRightProperty<TLength> | ScrollMarginRightProperty<TLength>[],
  "scroll-snap-margin-top"?: ScrollMarginTopProperty<TLength> | ScrollMarginTopProperty<TLength>[],
  "scroll-snap-stop"?: ScrollSnapStopProperty | ScrollSnapStopProperty[],
  "scroll-snap-type"?: ScrollSnapTypeProperty | ScrollSnapTypeProperty[],
  "scrollbar-color"?: ScrollbarColorProperty | ScrollbarColorProperty[],
  "scrollbar-gutter"?: ScrollbarGutterProperty | ScrollbarGutterProperty[],
  "scrollbar-width"?: ScrollbarWidthProperty | ScrollbarWidthProperty[],
  "shape-image-threshold"?: ShapeImageThresholdProperty | ShapeImageThresholdProperty[],
  "shape-margin"?: ShapeMarginProperty<TLength> | ShapeMarginProperty<TLength>[],
  "shape-outside"?: ShapeOutsideProperty | ShapeOutsideProperty[],
  "tab-size"?: TabSizeProperty<TLength> | TabSizeProperty<TLength>[],
  "table-layout"?: TableLayoutProperty | TableLayoutProperty[],
  "text-align"?: TextAlignProperty | TextAlignProperty[],
  "text-align-last"?: TextAlignLastProperty | TextAlignLastProperty[],
  "text-combine-upright"?: TextCombineUprightProperty | TextCombineUprightProperty[],
  "text-decoration-color"?: TextDecorationColorProperty | TextDecorationColorProperty[],
  "text-decoration-line"?: TextDecorationLineProperty | TextDecorationLineProperty[],
  "text-decoration-skip"?: TextDecorationSkipProperty | TextDecorationSkipProperty[],
  "text-decoration-skip-ink"?: TextDecorationSkipInkProperty | TextDecorationSkipInkProperty[],
  "text-decoration-style"?: TextDecorationStyleProperty | TextDecorationStyleProperty[],
  "text-decoration-thickness"?: TextDecorationThicknessProperty<TLength> | TextDecorationThicknessProperty<TLength>[],
  "text-decoration-width"?: TextDecorationThicknessProperty<TLength> | TextDecorationThicknessProperty<TLength>[],
  "text-emphasis-color"?: TextEmphasisColorProperty | TextEmphasisColorProperty[],
  "text-emphasis-position"?: GlobalsString | GlobalsString[],
  "text-emphasis-style"?: TextEmphasisStyleProperty | TextEmphasisStyleProperty[],
  "text-indent"?: TextIndentProperty<TLength> | TextIndentProperty<TLength>[],
  "text-justify"?: TextJustifyProperty | TextJustifyProperty[],
  "text-orientation"?: TextOrientationProperty | TextOrientationProperty[],
  "text-overflow"?: TextOverflowProperty | TextOverflowProperty[],
  "text-rendering"?: TextRenderingProperty | TextRenderingProperty[],
  "text-shadow"?: TextShadowProperty | TextShadowProperty[],
  "text-size-adjust"?: TextSizeAdjustProperty | TextSizeAdjustProperty[],
  "text-transform"?: TextTransformProperty | TextTransformProperty[],
  "text-underline-offset"?: TextUnderlineOffsetProperty<TLength> | TextUnderlineOffsetProperty<TLength>[],
  "text-underline-position"?: TextUnderlinePositionProperty | TextUnderlinePositionProperty[],
  top?: TopProperty<TLength> | TopProperty<TLength>[],
  "touch-action"?: TouchActionProperty | TouchActionProperty[],
  transform?: TransformProperty | TransformProperty[],
  "transform-box"?: TransformBoxProperty | TransformBoxProperty[],
  "transform-origin"?: TransformOriginProperty<TLength> | TransformOriginProperty<TLength>[],
  "transform-style"?: TransformStyleProperty | TransformStyleProperty[],
  "transition-delay"?: GlobalsString | GlobalsString[],
  "transition-duration"?: GlobalsString | GlobalsString[],
  "transition-property"?: TransitionPropertyProperty | TransitionPropertyProperty[],
  "transition-timing-function"?: TransitionTimingFunctionProperty | TransitionTimingFunctionProperty[],
  translate?: TranslateProperty<TLength> | TranslateProperty<TLength>[],
  "unicode-bidi"?: UnicodeBidiProperty | UnicodeBidiProperty[],
  "user-select"?: UserSelectProperty | UserSelectProperty[],
  "vertical-align"?: VerticalAlignProperty<TLength> | VerticalAlignProperty<TLength>[],
  visibility?: VisibilityProperty | VisibilityProperty[],
  "white-space"?: WhiteSpaceProperty | WhiteSpaceProperty[],
  widows?: GlobalsNumber | GlobalsNumber[],
  width?: WidthProperty<TLength> | WidthProperty<TLength>[],
  "will-change"?: WillChangeProperty | WillChangeProperty[],
  "word-break"?: WordBreakProperty | WordBreakProperty[],
  "word-spacing"?: WordSpacingProperty<TLength> | WordSpacingProperty<TLength>[],
  "word-wrap"?: WordWrapProperty | WordWrapProperty[],
  "writing-mode"?: WritingModeProperty | WritingModeProperty[],
  "z-index"?: ZIndexProperty | ZIndexProperty[],
  zoom?: ZoomProperty | ZoomProperty[],
};

export type StandardShorthandPropertiesHyphenFallback<TLength = string | 0> = {
  all?: Globals | Globals[],
  animation?: AnimationProperty | AnimationProperty[],
  background?: BackgroundProperty<TLength> | BackgroundProperty<TLength>[],
  border?: BorderProperty<TLength> | BorderProperty<TLength>[],
  "border-block"?: BorderBlockProperty<TLength> | BorderBlockProperty<TLength>[],
  "border-block-end"?: BorderBlockEndProperty<TLength> | BorderBlockEndProperty<TLength>[],
  "border-block-start"?: BorderBlockStartProperty<TLength> | BorderBlockStartProperty<TLength>[],
  "border-bottom"?: BorderBottomProperty<TLength> | BorderBottomProperty<TLength>[],
  "border-color"?: BorderColorProperty | BorderColorProperty[],
  "border-image"?: BorderImageProperty | BorderImageProperty[],
  "border-inline"?: BorderInlineProperty<TLength> | BorderInlineProperty<TLength>[],
  "border-inline-end"?: BorderInlineEndProperty<TLength> | BorderInlineEndProperty<TLength>[],
  "border-inline-start"?: BorderInlineStartProperty<TLength> | BorderInlineStartProperty<TLength>[],
  "border-left"?: BorderLeftProperty<TLength> | BorderLeftProperty<TLength>[],
  "border-radius"?: BorderRadiusProperty<TLength> | BorderRadiusProperty<TLength>[],
  "border-right"?: BorderRightProperty<TLength> | BorderRightProperty<TLength>[],
  "border-style"?: BorderStyleProperty | BorderStyleProperty[],
  "border-top"?: BorderTopProperty<TLength> | BorderTopProperty<TLength>[],
  "border-width"?: BorderWidthProperty<TLength> | BorderWidthProperty<TLength>[],
  "column-rule"?: ColumnRuleProperty<TLength> | ColumnRuleProperty<TLength>[],
  columns?: ColumnsProperty<TLength> | ColumnsProperty<TLength>[],
  flex?: FlexProperty<TLength> | FlexProperty<TLength>[],
  "flex-flow"?: FlexFlowProperty | FlexFlowProperty[],
  font?: FontProperty | FontProperty[],
  gap?: GapProperty<TLength> | GapProperty<TLength>[],
  grid?: GridProperty | GridProperty[],
  "grid-area"?: GridAreaProperty | GridAreaProperty[],
  "grid-column"?: GridColumnProperty | GridColumnProperty[],
  "grid-row"?: GridRowProperty | GridRowProperty[],
  "grid-template"?: GridTemplateProperty | GridTemplateProperty[],
  "line-clamp"?: LineClampProperty | LineClampProperty[],
  "list-style"?: ListStyleProperty | ListStyleProperty[],
  margin?: MarginProperty<TLength> | MarginProperty<TLength>[],
  mask?: MaskProperty<TLength> | MaskProperty<TLength>[],
  "mask-border"?: MaskBorderProperty | MaskBorderProperty[],
  motion?: OffsetProperty<TLength> | OffsetProperty<TLength>[],
  offset?: OffsetProperty<TLength> | OffsetProperty<TLength>[],
  outline?: OutlineProperty<TLength> | OutlineProperty<TLength>[],
  overflow?: OverflowProperty | OverflowProperty[],
  padding?: PaddingProperty<TLength> | PaddingProperty<TLength>[],
  "place-items"?: PlaceItemsProperty | PlaceItemsProperty[],
  "place-self"?: PlaceSelfProperty | PlaceSelfProperty[],
  "text-decoration"?: TextDecorationProperty<TLength> | TextDecorationProperty<TLength>[],
  "text-emphasis"?: TextEmphasisProperty | TextEmphasisProperty[],
  transition?: TransitionProperty | TransitionProperty[],
};

export type StandardPropertiesHyphenFallback<TLength = string | 0> = StandardLonghandPropertiesHyphenFallback<TLength> & StandardShorthandPropertiesHyphenFallback<TLength>;

export type VendorLonghandPropertiesHyphenFallback<TLength = string | 0> = {
  "-moz-animation-delay"?: GlobalsString | GlobalsString[],
  "-moz-animation-direction"?: AnimationDirectionProperty | AnimationDirectionProperty[],
  "-moz-animation-duration"?: GlobalsString | GlobalsString[],
  "-moz-animation-fill-mode"?: AnimationFillModeProperty | AnimationFillModeProperty[],
  "-moz-animation-iteration-count"?: AnimationIterationCountProperty | AnimationIterationCountProperty[],
  "-moz-animation-name"?: AnimationNameProperty | AnimationNameProperty[],
  "-moz-animation-play-state"?: AnimationPlayStateProperty | AnimationPlayStateProperty[],
  "-moz-animation-timing-function"?: AnimationTimingFunctionProperty | AnimationTimingFunctionProperty[],
  "-moz-appearance"?: MozAppearanceProperty | MozAppearanceProperty[],
  "-moz-backface-visibility"?: BackfaceVisibilityProperty | BackfaceVisibilityProperty[],
  "-moz-border-bottom-colors"?: MozBorderBottomColorsProperty | MozBorderBottomColorsProperty[],
  "-moz-border-end-color"?: BorderInlineEndColorProperty | BorderInlineEndColorProperty[],
  "-moz-border-end-style"?: BorderInlineEndStyleProperty | BorderInlineEndStyleProperty[],
  "-moz-border-end-width"?: BorderInlineEndWidthProperty<TLength> | BorderInlineEndWidthProperty<TLength>[],
  "-moz-border-left-colors"?: MozBorderLeftColorsProperty | MozBorderLeftColorsProperty[],
  "-moz-border-right-colors"?: MozBorderRightColorsProperty | MozBorderRightColorsProperty[],
  "-moz-border-start-color"?: BorderInlineStartColorProperty | BorderInlineStartColorProperty[],
  "-moz-border-start-style"?: BorderInlineStartStyleProperty | BorderInlineStartStyleProperty[],
  "-moz-border-top-colors"?: MozBorderTopColorsProperty | MozBorderTopColorsProperty[],
  "-moz-box-sizing"?: BoxSizingProperty | BoxSizingProperty[],
  "-moz-column-count"?: ColumnCountProperty | ColumnCountProperty[],
  "-moz-column-fill"?: ColumnFillProperty | ColumnFillProperty[],
  "-moz-column-gap"?: ColumnGapProperty<TLength> | ColumnGapProperty<TLength>[],
  "-moz-column-rule-color"?: ColumnRuleColorProperty | ColumnRuleColorProperty[],
  "-moz-column-rule-style"?: ColumnRuleStyleProperty | ColumnRuleStyleProperty[],
  "-moz-column-rule-width"?: ColumnRuleWidthProperty<TLength> | ColumnRuleWidthProperty<TLength>[],
  "-moz-column-width"?: ColumnWidthProperty<TLength> | ColumnWidthProperty<TLength>[],
  "-moz-context-properties"?: MozContextPropertiesProperty | MozContextPropertiesProperty[],
  "-moz-font-feature-settings"?: FontFeatureSettingsProperty | FontFeatureSettingsProperty[],
  "-moz-font-language-override"?: FontLanguageOverrideProperty | FontLanguageOverrideProperty[],
  "-moz-hyphens"?: HyphensProperty | HyphensProperty[],
  "-moz-image-region"?: MozImageRegionProperty | MozImageRegionProperty[],
  "-moz-margin-end"?: MarginInlineEndProperty<TLength> | MarginInlineEndProperty<TLength>[],
  "-moz-margin-start"?: MarginInlineStartProperty<TLength> | MarginInlineStartProperty<TLength>[],
  "-moz-orient"?: MozOrientProperty | MozOrientProperty[],
  "-moz-osx-font-smoothing"?: FontSmoothProperty<TLength> | FontSmoothProperty<TLength>[],
  "-moz-padding-end"?: PaddingInlineEndProperty<TLength> | PaddingInlineEndProperty<TLength>[],
  "-moz-padding-start"?: PaddingInlineStartProperty<TLength> | PaddingInlineStartProperty<TLength>[],
  "-moz-perspective"?: PerspectiveProperty<TLength> | PerspectiveProperty<TLength>[],
  "-moz-perspective-origin"?: PerspectiveOriginProperty<TLength> | PerspectiveOriginProperty<TLength>[],
  "-moz-stack-sizing"?: MozStackSizingProperty | MozStackSizingProperty[],
  "-moz-tab-size"?: TabSizeProperty<TLength> | TabSizeProperty<TLength>[],
  "-moz-text-blink"?: MozTextBlinkProperty | MozTextBlinkProperty[],
  "-moz-text-size-adjust"?: TextSizeAdjustProperty | TextSizeAdjustProperty[],
  "-moz-transform-origin"?: TransformOriginProperty<TLength> | TransformOriginProperty<TLength>[],
  "-moz-transform-style"?: TransformStyleProperty | TransformStyleProperty[],
  "-moz-transition-delay"?: GlobalsString | GlobalsString[],
  "-moz-transition-duration"?: GlobalsString | GlobalsString[],
  "-moz-transition-property"?: TransitionPropertyProperty | TransitionPropertyProperty[],
  "-moz-transition-timing-function"?: TransitionTimingFunctionProperty | TransitionTimingFunctionProperty[],
  "-moz-user-focus"?: MozUserFocusProperty | MozUserFocusProperty[],
  "-moz-user-modify"?: MozUserModifyProperty | MozUserModifyProperty[],
  "-moz-user-select"?: UserSelectProperty | UserSelectProperty[],
  "-moz-window-dragging"?: MozWindowDraggingProperty | MozWindowDraggingProperty[],
  "-moz-window-shadow"?: MozWindowShadowProperty | MozWindowShadowProperty[],
  "-ms-accelerator"?: MsAcceleratorProperty | MsAcceleratorProperty[],
  "-ms-align-self"?: AlignSelfProperty | AlignSelfProperty[],
  "-ms-block-progression"?: MsBlockProgressionProperty | MsBlockProgressionProperty[],
  "-ms-content-zoom-chaining"?: MsContentZoomChainingProperty | MsContentZoomChainingProperty[],
  "-ms-content-zoom-limit-max"?: GlobalsString | GlobalsString[],
  "-ms-content-zoom-limit-min"?: GlobalsString | GlobalsString[],
  "-ms-content-zoom-snap-points"?: GlobalsString | GlobalsString[],
  "-ms-content-zoom-snap-type"?: MsContentZoomSnapTypeProperty | MsContentZoomSnapTypeProperty[],
  "-ms-content-zooming"?: MsContentZoomingProperty | MsContentZoomingProperty[],
  "-ms-filter"?: GlobalsString | GlobalsString[],
  "-ms-flex-direction"?: FlexDirectionProperty | FlexDirectionProperty[],
  "-ms-flex-positive"?: GlobalsNumber | GlobalsNumber[],
  "-ms-flow-from"?: MsFlowFromProperty | MsFlowFromProperty[],
  "-ms-flow-into"?: MsFlowIntoProperty | MsFlowIntoProperty[],
  "-ms-grid-columns"?: MsGridColumnsProperty<TLength> | MsGridColumnsProperty<TLength>[],
  "-ms-grid-rows"?: MsGridRowsProperty<TLength> | MsGridRowsProperty<TLength>[],
  "-ms-high-contrast-adjust"?: MsHighContrastAdjustProperty | MsHighContrastAdjustProperty[],
  "-ms-hyphenate-limit-chars"?: MsHyphenateLimitCharsProperty | MsHyphenateLimitCharsProperty[],
  "-ms-hyphenate-limit-lines"?: MsHyphenateLimitLinesProperty | MsHyphenateLimitLinesProperty[],
  "-ms-hyphenate-limit-zone"?: MsHyphenateLimitZoneProperty<TLength> | MsHyphenateLimitZoneProperty<TLength>[],
  "-ms-hyphens"?: HyphensProperty | HyphensProperty[],
  "-ms-ime-align"?: MsImeAlignProperty | MsImeAlignProperty[],
  "-ms-justify-self"?: JustifySelfProperty | JustifySelfProperty[],
  "-ms-line-break"?: LineBreakProperty | LineBreakProperty[],
  "-ms-order"?: GlobalsNumber | GlobalsNumber[],
  "-ms-overflow-style"?: MsOverflowStyleProperty | MsOverflowStyleProperty[],
  "-ms-overflow-x"?: OverflowXProperty | OverflowXProperty[],
  "-ms-overflow-y"?: OverflowYProperty | OverflowYProperty[],
  "-ms-scroll-chaining"?: MsScrollChainingProperty | MsScrollChainingProperty[],
  "-ms-scroll-limit-x-max"?: MsScrollLimitXMaxProperty<TLength> | MsScrollLimitXMaxProperty<TLength>[],
  "-ms-scroll-limit-x-min"?: MsScrollLimitXMinProperty<TLength> | MsScrollLimitXMinProperty<TLength>[],
  "-ms-scroll-limit-y-max"?: MsScrollLimitYMaxProperty<TLength> | MsScrollLimitYMaxProperty<TLength>[],
  "-ms-scroll-limit-y-min"?: MsScrollLimitYMinProperty<TLength> | MsScrollLimitYMinProperty<TLength>[],
  "-ms-scroll-rails"?: MsScrollRailsProperty | MsScrollRailsProperty[],
  "-ms-scroll-snap-points-x"?: GlobalsString | GlobalsString[],
  "-ms-scroll-snap-points-y"?: GlobalsString | GlobalsString[],
  "-ms-scroll-snap-type"?: MsScrollSnapTypeProperty | MsScrollSnapTypeProperty[],
  "-ms-scroll-translation"?: MsScrollTranslationProperty | MsScrollTranslationProperty[],
  "-ms-scrollbar-3dlight-color"?: MsScrollbar3dlightColorProperty | MsScrollbar3dlightColorProperty[],
  "-ms-scrollbar-arrow-color"?: MsScrollbarArrowColorProperty | MsScrollbarArrowColorProperty[],
  "-ms-scrollbar-base-color"?: MsScrollbarBaseColorProperty | MsScrollbarBaseColorProperty[],
  "-ms-scrollbar-darkshadow-color"?: MsScrollbarDarkshadowColorProperty | MsScrollbarDarkshadowColorProperty[],
  "-ms-scrollbar-face-color"?: MsScrollbarFaceColorProperty | MsScrollbarFaceColorProperty[],
  "-ms-scrollbar-highlight-color"?: MsScrollbarHighlightColorProperty | MsScrollbarHighlightColorProperty[],
  "-ms-scrollbar-shadow-color"?: MsScrollbarShadowColorProperty | MsScrollbarShadowColorProperty[],
  "-ms-text-autospace"?: MsTextAutospaceProperty | MsTextAutospaceProperty[],
  "-ms-text-combine-horizontal"?: TextCombineUprightProperty | TextCombineUprightProperty[],
  "-ms-text-overflow"?: TextOverflowProperty | TextOverflowProperty[],
  "-ms-touch-action"?: TouchActionProperty | TouchActionProperty[],
  "-ms-touch-select"?: MsTouchSelectProperty | MsTouchSelectProperty[],
  "-ms-transform"?: TransformProperty | TransformProperty[],
  "-ms-transform-origin"?: TransformOriginProperty<TLength> | TransformOriginProperty<TLength>[],
  "-ms-transition-delay"?: GlobalsString | GlobalsString[],
  "-ms-transition-duration"?: GlobalsString | GlobalsString[],
  "-ms-transition-property"?: TransitionPropertyProperty | TransitionPropertyProperty[],
  "-ms-transition-timing-function"?: TransitionTimingFunctionProperty | TransitionTimingFunctionProperty[],
  "-ms-user-select"?: MsUserSelectProperty | MsUserSelectProperty[],
  "-ms-word-break"?: WordBreakProperty | WordBreakProperty[],
  "-ms-wrap-flow"?: MsWrapFlowProperty | MsWrapFlowProperty[],
  "-ms-wrap-margin"?: MsWrapMarginProperty<TLength> | MsWrapMarginProperty<TLength>[],
  "-ms-wrap-through"?: MsWrapThroughProperty | MsWrapThroughProperty[],
  "-ms-writing-mode"?: WritingModeProperty | WritingModeProperty[],
  "-webkit-align-content"?: AlignContentProperty | AlignContentProperty[],
  "-webkit-align-items"?: AlignItemsProperty | AlignItemsProperty[],
  "-webkit-align-self"?: AlignSelfProperty | AlignSelfProperty[],
  "-webkit-animation-delay"?: GlobalsString | GlobalsString[],
  "-webkit-animation-direction"?: AnimationDirectionProperty | AnimationDirectionProperty[],
  "-webkit-animation-duration"?: GlobalsString | GlobalsString[],
  "-webkit-animation-fill-mode"?: AnimationFillModeProperty | AnimationFillModeProperty[],
  "-webkit-animation-iteration-count"?: AnimationIterationCountProperty | AnimationIterationCountProperty[],
  "-webkit-animation-name"?: AnimationNameProperty | AnimationNameProperty[],
  "-webkit-animation-play-state"?: AnimationPlayStateProperty | AnimationPlayStateProperty[],
  "-webkit-animation-timing-function"?: AnimationTimingFunctionProperty | AnimationTimingFunctionProperty[],
  "-webkit-appearance"?: WebkitAppearanceProperty | WebkitAppearanceProperty[],
  "-webkit-backdrop-filter"?: BackdropFilterProperty | BackdropFilterProperty[],
  "-webkit-backface-visibility"?: BackfaceVisibilityProperty | BackfaceVisibilityProperty[],
  "-webkit-background-clip"?: BackgroundClipProperty | BackgroundClipProperty[],
  "-webkit-background-origin"?: BackgroundOriginProperty | BackgroundOriginProperty[],
  "-webkit-background-size"?: BackgroundSizeProperty<TLength> | BackgroundSizeProperty<TLength>[],
  "-webkit-border-before-color"?: WebkitBorderBeforeColorProperty | WebkitBorderBeforeColorProperty[],
  "-webkit-border-before-style"?: WebkitBorderBeforeStyleProperty | WebkitBorderBeforeStyleProperty[],
  "-webkit-border-before-width"?: WebkitBorderBeforeWidthProperty<TLength> | WebkitBorderBeforeWidthProperty<TLength>[],
  "-webkit-border-bottom-left-radius"?: BorderBottomLeftRadiusProperty<TLength> | BorderBottomLeftRadiusProperty<TLength>[],
  "-webkit-border-bottom-right-radius"?: BorderBottomRightRadiusProperty<TLength> | BorderBottomRightRadiusProperty<TLength>[],
  "-webkit-border-image-slice"?: BorderImageSliceProperty | BorderImageSliceProperty[],
  "-webkit-border-top-left-radius"?: BorderTopLeftRadiusProperty<TLength> | BorderTopLeftRadiusProperty<TLength>[],
  "-webkit-border-top-right-radius"?: BorderTopRightRadiusProperty<TLength> | BorderTopRightRadiusProperty<TLength>[],
  "-webkit-box-decoration-break"?: BoxDecorationBreakProperty | BoxDecorationBreakProperty[],
  "-webkit-box-reflect"?: WebkitBoxReflectProperty<TLength> | WebkitBoxReflectProperty<TLength>[],
  "-webkit-box-shadow"?: BoxShadowProperty | BoxShadowProperty[],
  "-webkit-box-sizing"?: BoxSizingProperty | BoxSizingProperty[],
  "-webkit-clip-path"?: ClipPathProperty | ClipPathProperty[],
  "-webkit-column-count"?: ColumnCountProperty | ColumnCountProperty[],
  "-webkit-column-fill"?: ColumnFillProperty | ColumnFillProperty[],
  "-webkit-column-gap"?: ColumnGapProperty<TLength> | ColumnGapProperty<TLength>[],
  "-webkit-column-rule-color"?: ColumnRuleColorProperty | ColumnRuleColorProperty[],
  "-webkit-column-rule-style"?: ColumnRuleStyleProperty | ColumnRuleStyleProperty[],
  "-webkit-column-rule-width"?: ColumnRuleWidthProperty<TLength> | ColumnRuleWidthProperty<TLength>[],
  "-webkit-column-span"?: ColumnSpanProperty | ColumnSpanProperty[],
  "-webkit-column-width"?: ColumnWidthProperty<TLength> | ColumnWidthProperty<TLength>[],
  "-webkit-filter"?: FilterProperty | FilterProperty[],
  "-webkit-flex-basis"?: FlexBasisProperty<TLength> | FlexBasisProperty<TLength>[],
  "-webkit-flex-direction"?: FlexDirectionProperty | FlexDirectionProperty[],
  "-webkit-flex-grow"?: GlobalsNumber | GlobalsNumber[],
  "-webkit-flex-shrink"?: GlobalsNumber | GlobalsNumber[],
  "-webkit-flex-wrap"?: FlexWrapProperty | FlexWrapProperty[],
  "-webkit-font-feature-settings"?: FontFeatureSettingsProperty | FontFeatureSettingsProperty[],
  "-webkit-font-kerning"?: FontKerningProperty | FontKerningProperty[],
  "-webkit-font-smoothing"?: FontSmoothProperty<TLength> | FontSmoothProperty<TLength>[],
  "-webkit-font-variant-ligatures"?: FontVariantLigaturesProperty | FontVariantLigaturesProperty[],
  "-webkit-hyphens"?: HyphensProperty | HyphensProperty[],
  "-webkit-justify-content"?: JustifyContentProperty | JustifyContentProperty[],
  "-webkit-line-break"?: LineBreakProperty | LineBreakProperty[],
  "-webkit-line-clamp"?: WebkitLineClampProperty | WebkitLineClampProperty[],
  "-webkit-margin-end"?: MarginInlineEndProperty<TLength> | MarginInlineEndProperty<TLength>[],
  "-webkit-margin-start"?: MarginInlineStartProperty<TLength> | MarginInlineStartProperty<TLength>[],
  "-webkit-mask-attachment"?: WebkitMaskAttachmentProperty | WebkitMaskAttachmentProperty[],
  "-webkit-mask-box-image-outset"?: MaskBorderOutsetProperty<TLength> | MaskBorderOutsetProperty<TLength>[],
  "-webkit-mask-box-image-repeat"?: MaskBorderRepeatProperty | MaskBorderRepeatProperty[],
  "-webkit-mask-box-image-slice"?: MaskBorderSliceProperty | MaskBorderSliceProperty[],
  "-webkit-mask-box-image-source"?: MaskBorderSourceProperty | MaskBorderSourceProperty[],
  "-webkit-mask-box-image-width"?: MaskBorderWidthProperty<TLength> | MaskBorderWidthProperty<TLength>[],
  "-webkit-mask-clip"?: WebkitMaskClipProperty | WebkitMaskClipProperty[],
  "-webkit-mask-composite"?: WebkitMaskCompositeProperty | WebkitMaskCompositeProperty[],
  "-webkit-mask-image"?: WebkitMaskImageProperty | WebkitMaskImageProperty[],
  "-webkit-mask-origin"?: WebkitMaskOriginProperty | WebkitMaskOriginProperty[],
  "-webkit-mask-position"?: WebkitMaskPositionProperty<TLength> | WebkitMaskPositionProperty<TLength>[],
  "-webkit-mask-position-x"?: WebkitMaskPositionXProperty<TLength> | WebkitMaskPositionXProperty<TLength>[],
  "-webkit-mask-position-y"?: WebkitMaskPositionYProperty<TLength> | WebkitMaskPositionYProperty<TLength>[],
  "-webkit-mask-repeat"?: WebkitMaskRepeatProperty | WebkitMaskRepeatProperty[],
  "-webkit-mask-repeat-x"?: WebkitMaskRepeatXProperty | WebkitMaskRepeatXProperty[],
  "-webkit-mask-repeat-y"?: WebkitMaskRepeatYProperty | WebkitMaskRepeatYProperty[],
  "-webkit-mask-size"?: WebkitMaskSizeProperty<TLength> | WebkitMaskSizeProperty<TLength>[],
  "-webkit-max-inline-size"?: MaxInlineSizeProperty<TLength> | MaxInlineSizeProperty<TLength>[],
  "-webkit-order"?: GlobalsNumber | GlobalsNumber[],
  "-webkit-overflow-scrolling"?: WebkitOverflowScrollingProperty | WebkitOverflowScrollingProperty[],
  "-webkit-padding-end"?: PaddingInlineEndProperty<TLength> | PaddingInlineEndProperty<TLength>[],
  "-webkit-padding-start"?: PaddingInlineStartProperty<TLength> | PaddingInlineStartProperty<TLength>[],
  "-webkit-perspective"?: PerspectiveProperty<TLength> | PerspectiveProperty<TLength>[],
  "-webkit-perspective-origin"?: PerspectiveOriginProperty<TLength> | PerspectiveOriginProperty<TLength>[],
  "-webkit-print-color-adjust"?: ColorAdjustProperty | ColorAdjustProperty[],
  "-webkit-ruby-position"?: RubyPositionProperty | RubyPositionProperty[],
  "-webkit-scroll-snap-type"?: ScrollSnapTypeProperty | ScrollSnapTypeProperty[],
  "-webkit-shape-margin"?: ShapeMarginProperty<TLength> | ShapeMarginProperty<TLength>[],
  "-webkit-tap-highlight-color"?: WebkitTapHighlightColorProperty | WebkitTapHighlightColorProperty[],
  "-webkit-text-combine"?: TextCombineUprightProperty | TextCombineUprightProperty[],
  "-webkit-text-decoration-color"?: TextDecorationColorProperty | TextDecorationColorProperty[],
  "-webkit-text-decoration-line"?: TextDecorationLineProperty | TextDecorationLineProperty[],
  "-webkit-text-decoration-skip"?: TextDecorationSkipProperty | TextDecorationSkipProperty[],
  "-webkit-text-decoration-style"?: TextDecorationStyleProperty | TextDecorationStyleProperty[],
  "-webkit-text-emphasis-color"?: TextEmphasisColorProperty | TextEmphasisColorProperty[],
  "-webkit-text-emphasis-position"?: GlobalsString | GlobalsString[],
  "-webkit-text-emphasis-style"?: TextEmphasisStyleProperty | TextEmphasisStyleProperty[],
  "-webkit-text-fill-color"?: WebkitTextFillColorProperty | WebkitTextFillColorProperty[],
  "-webkit-text-orientation"?: TextOrientationProperty | TextOrientationProperty[],
  "-webkit-text-size-adjust"?: TextSizeAdjustProperty | TextSizeAdjustProperty[],
  "-webkit-text-stroke-color"?: WebkitTextStrokeColorProperty | WebkitTextStrokeColorProperty[],
  "-webkit-text-stroke-width"?: WebkitTextStrokeWidthProperty<TLength> | WebkitTextStrokeWidthProperty<TLength>[],
  "-webkit-text-underline-position"?: TextUnderlinePositionProperty | TextUnderlinePositionProperty[],
  "-webkit-touch-callout"?: WebkitTouchCalloutProperty | WebkitTouchCalloutProperty[],
  "-webkit-transform"?: TransformProperty | TransformProperty[],
  "-webkit-transform-origin"?: TransformOriginProperty<TLength> | TransformOriginProperty<TLength>[],
  "-webkit-transform-style"?: TransformStyleProperty | TransformStyleProperty[],
  "-webkit-transition-delay"?: GlobalsString | GlobalsString[],
  "-webkit-transition-duration"?: GlobalsString | GlobalsString[],
  "-webkit-transition-property"?: TransitionPropertyProperty | TransitionPropertyProperty[],
  "-webkit-transition-timing-function"?: TransitionTimingFunctionProperty | TransitionTimingFunctionProperty[],
  "-webkit-user-modify"?: WebkitUserModifyProperty | WebkitUserModifyProperty[],
  "-webkit-user-select"?: UserSelectProperty | UserSelectProperty[],
  "-webkit-writing-mode"?: WritingModeProperty | WritingModeProperty[],
};

export type VendorShorthandPropertiesHyphenFallback<TLength = string | 0> = {
  "-moz-animation"?: AnimationProperty | AnimationProperty[],
  "-moz-border-image"?: BorderImageProperty | BorderImageProperty[],
  "-moz-column-rule"?: ColumnRuleProperty<TLength> | ColumnRuleProperty<TLength>[],
  "-moz-columns"?: ColumnsProperty<TLength> | ColumnsProperty<TLength>[],
  "-moz-transition"?: TransitionProperty | TransitionProperty[],
  "-ms-content-zoom-limit"?: GlobalsString | GlobalsString[],
  "-ms-content-zoom-snap"?: MsContentZoomSnapProperty | MsContentZoomSnapProperty[],
  "-ms-flex"?: FlexProperty<TLength> | FlexProperty<TLength>[],
  "-ms-scroll-limit"?: GlobalsString | GlobalsString[],
  "-ms-scroll-snap-x"?: GlobalsString | GlobalsString[],
  "-ms-scroll-snap-y"?: GlobalsString | GlobalsString[],
  "-ms-transition"?: TransitionProperty | TransitionProperty[],
  "-webkit-animation"?: AnimationProperty | AnimationProperty[],
  "-webkit-border-before"?: WebkitBorderBeforeProperty<TLength> | WebkitBorderBeforeProperty<TLength>[],
  "-webkit-border-image"?: BorderImageProperty | BorderImageProperty[],
  "-webkit-border-radius"?: BorderRadiusProperty<TLength> | BorderRadiusProperty<TLength>[],
  "-webkit-column-rule"?: ColumnRuleProperty<TLength> | ColumnRuleProperty<TLength>[],
  "-webkit-columns"?: ColumnsProperty<TLength> | ColumnsProperty<TLength>[],
  "-webkit-flex"?: FlexProperty<TLength> | FlexProperty<TLength>[],
  "-webkit-flex-flow"?: FlexFlowProperty | FlexFlowProperty[],
  "-webkit-mask"?: WebkitMaskProperty<TLength> | WebkitMaskProperty<TLength>[],
  "-webkit-mask-box-image"?: MaskBorderProperty | MaskBorderProperty[],
  "-webkit-text-emphasis"?: TextEmphasisProperty | TextEmphasisProperty[],
  "-webkit-text-stroke"?: WebkitTextStrokeProperty<TLength> | WebkitTextStrokeProperty<TLength>[],
  "-webkit-transition"?: TransitionProperty | TransitionProperty[],
};

export type VendorPropertiesHyphenFallback<TLength = string | 0> = VendorLonghandPropertiesHyphenFallback<TLength> & VendorShorthandPropertiesHyphenFallback<TLength>;

export type ObsoletePropertiesHyphenFallback<TLength = string | 0> = {
  azimuth?: AzimuthProperty | AzimuthProperty[],
  "box-align"?: BoxAlignProperty | BoxAlignProperty[],
  "box-direction"?: BoxDirectionProperty | BoxDirectionProperty[],
  "box-flex"?: GlobalsNumber | GlobalsNumber[],
  "box-flex-group"?: GlobalsNumber | GlobalsNumber[],
  "box-lines"?: BoxLinesProperty | BoxLinesProperty[],
  "box-ordinal-group"?: GlobalsNumber | GlobalsNumber[],
  "box-orient"?: BoxOrientProperty | BoxOrientProperty[],
  "box-pack"?: BoxPackProperty | BoxPackProperty[],
  clip?: ClipProperty | ClipProperty[],
  "font-variant-alternates"?: FontVariantAlternatesProperty | FontVariantAlternatesProperty[],
  "grid-column-gap"?: GridColumnGapProperty<TLength> | GridColumnGapProperty<TLength>[],
  "grid-gap"?: GridGapProperty<TLength> | GridGapProperty<TLength>[],
  "grid-row-gap"?: GridRowGapProperty<TLength> | GridRowGapProperty<TLength>[],
  "ime-mode"?: ImeModeProperty | ImeModeProperty[],
  "offset-block"?: InsetBlockProperty<TLength> | InsetBlockProperty<TLength>[],
  "offset-block-end"?: InsetBlockEndProperty<TLength> | InsetBlockEndProperty<TLength>[],
  "offset-block-start"?: InsetBlockStartProperty<TLength> | InsetBlockStartProperty<TLength>[],
  "offset-inline"?: InsetInlineProperty<TLength> | InsetInlineProperty<TLength>[],
  "offset-inline-end"?: InsetInlineEndProperty<TLength> | InsetInlineEndProperty<TLength>[],
  "offset-inline-start"?: InsetInlineStartProperty<TLength> | InsetInlineStartProperty<TLength>[],
  "scroll-snap-coordinate"?: ScrollSnapCoordinateProperty<TLength> | ScrollSnapCoordinateProperty<TLength>[],
  "scroll-snap-destination"?: ScrollSnapDestinationProperty<TLength> | ScrollSnapDestinationProperty<TLength>[],
  "scroll-snap-points-x"?: ScrollSnapPointsXProperty | ScrollSnapPointsXProperty[],
  "scroll-snap-points-y"?: ScrollSnapPointsYProperty | ScrollSnapPointsYProperty[],
  "scroll-snap-type-x"?: ScrollSnapTypeXProperty | ScrollSnapTypeXProperty[],
  "scroll-snap-type-y"?: ScrollSnapTypeYProperty | ScrollSnapTypeYProperty[],
  "scrollbar-track-color"?: MsScrollbarTrackColorProperty | MsScrollbarTrackColorProperty[],
  "text-combine-horizontal"?: TextCombineUprightProperty | TextCombineUprightProperty[],
  "-khtml-box-align"?: BoxAlignProperty | BoxAlignProperty[],
  "-khtml-box-direction"?: BoxDirectionProperty | BoxDirectionProperty[],
  "-khtml-box-flex"?: GlobalsNumber | GlobalsNumber[],
  "-khtml-box-flex-group"?: GlobalsNumber | GlobalsNumber[],
  "-khtml-box-lines"?: BoxLinesProperty | BoxLinesProperty[],
  "-khtml-box-ordinal-group"?: GlobalsNumber | GlobalsNumber[],
  "-khtml-box-orient"?: BoxOrientProperty | BoxOrientProperty[],
  "-khtml-box-pack"?: BoxPackProperty | BoxPackProperty[],
  "-khtml-line-break"?: LineBreakProperty | LineBreakProperty[],
  "-khtml-opacity"?: OpacityProperty | OpacityProperty[],
  "-khtml-user-select"?: UserSelectProperty | UserSelectProperty[],
  "-moz-background-clip"?: BackgroundClipProperty | BackgroundClipProperty[],
  "-moz-background-inline-policy"?: BoxDecorationBreakProperty | BoxDecorationBreakProperty[],
  "-moz-background-origin"?: BackgroundOriginProperty | BackgroundOriginProperty[],
  "-moz-background-size"?: BackgroundSizeProperty<TLength> | BackgroundSizeProperty<TLength>[],
  "-moz-binding"?: MozBindingProperty | MozBindingProperty[],
  "-moz-border-radius"?: BorderRadiusProperty<TLength> | BorderRadiusProperty<TLength>[],
  "-moz-border-radius-bottomleft"?: BorderBottomLeftRadiusProperty<TLength> | BorderBottomLeftRadiusProperty<TLength>[],
  "-moz-border-radius-bottomright"?: BorderBottomRightRadiusProperty<TLength> | BorderBottomRightRadiusProperty<TLength>[],
  "-moz-border-radius-topleft"?: BorderTopLeftRadiusProperty<TLength> | BorderTopLeftRadiusProperty<TLength>[],
  "-moz-border-radius-topright"?: BorderTopRightRadiusProperty<TLength> | BorderTopRightRadiusProperty<TLength>[],
  "-moz-box-align"?: BoxAlignProperty | BoxAlignProperty[],
  "-moz-box-direction"?: BoxDirectionProperty | BoxDirectionProperty[],
  "-moz-box-flex"?: GlobalsNumber | GlobalsNumber[],
  "-moz-box-ordinal-group"?: GlobalsNumber | GlobalsNumber[],
  "-moz-box-orient"?: BoxOrientProperty | BoxOrientProperty[],
  "-moz-box-pack"?: BoxPackProperty | BoxPackProperty[],
  "-moz-box-shadow"?: BoxShadowProperty | BoxShadowProperty[],
  "-moz-float-edge"?: MozFloatEdgeProperty | MozFloatEdgeProperty[],
  "-moz-force-broken-image-icon"?: GlobalsNumber | GlobalsNumber[],
  "-moz-opacity"?: OpacityProperty | OpacityProperty[],
  "-moz-outline"?: OutlineProperty<TLength> | OutlineProperty<TLength>[],
  "-moz-outline-color"?: OutlineColorProperty | OutlineColorProperty[],
  "-moz-outline-radius"?: MozOutlineRadiusProperty<TLength> | MozOutlineRadiusProperty<TLength>[],
  "-moz-outline-radius-bottomleft"?: MozOutlineRadiusBottomleftProperty<TLength> | MozOutlineRadiusBottomleftProperty<TLength>[],
  "-moz-outline-radius-bottomright"?: MozOutlineRadiusBottomrightProperty<TLength> | MozOutlineRadiusBottomrightProperty<TLength>[],
  "-moz-outline-radius-topleft"?: MozOutlineRadiusTopleftProperty<TLength> | MozOutlineRadiusTopleftProperty<TLength>[],
  "-moz-outline-radius-topright"?: MozOutlineRadiusToprightProperty<TLength> | MozOutlineRadiusToprightProperty<TLength>[],
  "-moz-outline-style"?: OutlineStyleProperty | OutlineStyleProperty[],
  "-moz-outline-width"?: OutlineWidthProperty<TLength> | OutlineWidthProperty<TLength>[],
  "-moz-text-align-last"?: TextAlignLastProperty | TextAlignLastProperty[],
  "-moz-text-decoration-color"?: TextDecorationColorProperty | TextDecorationColorProperty[],
  "-moz-text-decoration-line"?: TextDecorationLineProperty | TextDecorationLineProperty[],
  "-moz-text-decoration-style"?: TextDecorationStyleProperty | TextDecorationStyleProperty[],
  "-moz-user-input"?: MozUserInputProperty | MozUserInputProperty[],
  "-ms-ime-mode"?: ImeModeProperty | ImeModeProperty[],
  "-ms-scrollbar-track-color"?: MsScrollbarTrackColorProperty | MsScrollbarTrackColorProperty[],
  "-o-animation"?: AnimationProperty | AnimationProperty[],
  "-o-animation-delay"?: GlobalsString | GlobalsString[],
  "-o-animation-direction"?: AnimationDirectionProperty | AnimationDirectionProperty[],
  "-o-animation-duration"?: GlobalsString | GlobalsString[],
  "-o-animation-fill-mode"?: AnimationFillModeProperty | AnimationFillModeProperty[],
  "-o-animation-iteration-count"?: AnimationIterationCountProperty | AnimationIterationCountProperty[],
  "-o-animation-name"?: AnimationNameProperty | AnimationNameProperty[],
  "-o-animation-play-state"?: AnimationPlayStateProperty | AnimationPlayStateProperty[],
  "-o-animation-timing-function"?: AnimationTimingFunctionProperty | AnimationTimingFunctionProperty[],
  "-o-background-size"?: BackgroundSizeProperty<TLength> | BackgroundSizeProperty<TLength>[],
  "-o-border-image"?: BorderImageProperty | BorderImageProperty[],
  "-o-object-fit"?: ObjectFitProperty | ObjectFitProperty[],
  "-o-object-position"?: ObjectPositionProperty<TLength> | ObjectPositionProperty<TLength>[],
  "-o-tab-size"?: TabSizeProperty<TLength> | TabSizeProperty<TLength>[],
  "-o-text-overflow"?: TextOverflowProperty | TextOverflowProperty[],
  "-o-transform"?: TransformProperty | TransformProperty[],
  "-o-transform-origin"?: TransformOriginProperty<TLength> | TransformOriginProperty<TLength>[],
  "-o-transition"?: TransitionProperty | TransitionProperty[],
  "-o-transition-delay"?: GlobalsString | GlobalsString[],
  "-o-transition-duration"?: GlobalsString | GlobalsString[],
  "-o-transition-property"?: TransitionPropertyProperty | TransitionPropertyProperty[],
  "-o-transition-timing-function"?: TransitionTimingFunctionProperty | TransitionTimingFunctionProperty[],
  "-webkit-box-align"?: BoxAlignProperty | BoxAlignProperty[],
  "-webkit-box-direction"?: BoxDirectionProperty | BoxDirectionProperty[],
  "-webkit-box-flex"?: GlobalsNumber | GlobalsNumber[],
  "-webkit-box-flex-group"?: GlobalsNumber | GlobalsNumber[],
  "-webkit-box-lines"?: BoxLinesProperty | BoxLinesProperty[],
  "-webkit-box-ordinal-group"?: GlobalsNumber | GlobalsNumber[],
  "-webkit-box-orient"?: BoxOrientProperty | BoxOrientProperty[],
  "-webkit-box-pack"?: BoxPackProperty | BoxPackProperty[],
  "-webkit-scroll-snap-points-x"?: ScrollSnapPointsXProperty | ScrollSnapPointsXProperty[],
  "-webkit-scroll-snap-points-y"?: ScrollSnapPointsYProperty | ScrollSnapPointsYProperty[],
};

export type SvgPropertiesHyphenFallback<TLength = string | 0> = {
  "alignment-baseline"?: AlignmentBaselineProperty | AlignmentBaselineProperty[],
  "baseline-shift"?: BaselineShiftProperty<TLength> | BaselineShiftProperty<TLength>[],
  clip?: ClipProperty | ClipProperty[],
  "clip-path"?: ClipPathProperty | ClipPathProperty[],
  "clip-rule"?: ClipRuleProperty | ClipRuleProperty[],
  color?: ColorProperty | ColorProperty[],
  "color-interpolation"?: ColorInterpolationProperty | ColorInterpolationProperty[],
  "color-rendering"?: ColorRenderingProperty | ColorRenderingProperty[],
  cursor?: CursorProperty | CursorProperty[],
  direction?: DirectionProperty | DirectionProperty[],
  display?: DisplayProperty | DisplayProperty[],
  "dominant-baseline"?: DominantBaselineProperty | DominantBaselineProperty[],
  fill?: FillProperty | FillProperty[],
  "fill-opacity"?: GlobalsNumber | GlobalsNumber[],
  "fill-rule"?: FillRuleProperty | FillRuleProperty[],
  filter?: FilterProperty | FilterProperty[],
  "flood-color"?: FloodColorProperty | FloodColorProperty[],
  "flood-opacity"?: GlobalsNumber | GlobalsNumber[],
  font?: FontProperty | FontProperty[],
  "font-family"?: FontFamilyProperty | FontFamilyProperty[],
  "font-size"?: FontSizeProperty<TLength> | FontSizeProperty<TLength>[],
  "font-size-adjust"?: FontSizeAdjustProperty | FontSizeAdjustProperty[],
  "font-stretch"?: FontStretchProperty | FontStretchProperty[],
  "font-style"?: FontStyleProperty | FontStyleProperty[],
  "font-variant"?: FontVariantProperty | FontVariantProperty[],
  "font-weight"?: FontWeightProperty | FontWeightProperty[],
  "glyph-orientation-vertical"?: GlyphOrientationVerticalProperty | GlyphOrientationVerticalProperty[],
  "image-rendering"?: ImageRenderingProperty | ImageRenderingProperty[],
  "letter-spacing"?: LetterSpacingProperty<TLength> | LetterSpacingProperty<TLength>[],
  "lighting-color"?: LightingColorProperty | LightingColorProperty[],
  "line-height"?: LineHeightProperty<TLength> | LineHeightProperty<TLength>[],
  marker?: MarkerProperty | MarkerProperty[],
  "marker-end"?: MarkerEndProperty | MarkerEndProperty[],
  "marker-mid"?: MarkerMidProperty | MarkerMidProperty[],
  "marker-start"?: MarkerStartProperty | MarkerStartProperty[],
  mask?: MaskProperty<TLength> | MaskProperty<TLength>[],
  opacity?: OpacityProperty | OpacityProperty[],
  overflow?: OverflowProperty | OverflowProperty[],
  "paint-order"?: PaintOrderProperty | PaintOrderProperty[],
  "pointer-events"?: PointerEventsProperty | PointerEventsProperty[],
  "shape-rendering"?: ShapeRenderingProperty | ShapeRenderingProperty[],
  "stop-color"?: StopColorProperty | StopColorProperty[],
  "stop-opacity"?: GlobalsNumber | GlobalsNumber[],
  stroke?: StrokeProperty | StrokeProperty[],
  "stroke-dasharray"?: StrokeDasharrayProperty<TLength> | StrokeDasharrayProperty<TLength>[],
  "stroke-dashoffset"?: StrokeDashoffsetProperty<TLength> | StrokeDashoffsetProperty<TLength>[],
  "stroke-linecap"?: StrokeLinecapProperty | StrokeLinecapProperty[],
  "stroke-linejoin"?: StrokeLinejoinProperty | StrokeLinejoinProperty[],
  "stroke-miterlimit"?: GlobalsNumber | GlobalsNumber[],
  "stroke-opacity"?: GlobalsNumber | GlobalsNumber[],
  "stroke-width"?: StrokeWidthProperty<TLength> | StrokeWidthProperty<TLength>[],
  "text-anchor"?: TextAnchorProperty | TextAnchorProperty[],
  "text-decoration"?: TextDecorationProperty<TLength> | TextDecorationProperty<TLength>[],
  "text-rendering"?: TextRenderingProperty | TextRenderingProperty[],
  "unicode-bidi"?: UnicodeBidiProperty | UnicodeBidiProperty[],
  "vector-effect"?: VectorEffectProperty | VectorEffectProperty[],
  visibility?: VisibilityProperty | VisibilityProperty[],
  "white-space"?: WhiteSpaceProperty | WhiteSpaceProperty[],
  "word-spacing"?: WordSpacingProperty<TLength> | WordSpacingProperty<TLength>[],
  "writing-mode"?: WritingModeProperty | WritingModeProperty[],
};

export type PropertiesHyphenFallback<TLength = string | 0> = StandardPropertiesHyphenFallback<TLength> &
  VendorPropertiesHyphenFallback<TLength> &
  ObsoletePropertiesHyphenFallback<TLength> &
  SvgPropertiesHyphenFallback<TLength>;

export type CounterStyle = {
  additiveSymbols?: string,
  fallback?: string,
  negative?: string,
  pad?: string,
  prefix?: string,
  range?: CounterStyleRangeProperty,
  speakAs?: CounterStyleSpeakAsProperty,
  suffix?: string,
  symbols?: string,
  system?: CounterStyleSystemProperty,
};

export type CounterStyleHyphen = {
  "additive-symbols"?: string,
  fallback?: string,
  negative?: string,
  pad?: string,
  prefix?: string,
  range?: CounterStyleRangeProperty,
  "speak-as"?: CounterStyleSpeakAsProperty,
  suffix?: string,
  symbols?: string,
  system?: CounterStyleSystemProperty,
};

export type CounterStyleFallback = {
  additiveSymbols?: string | string[],
  fallback?: string | string[],
  negative?: string | string[],
  pad?: string | string[],
  prefix?: string | string[],
  range?: CounterStyleRangeProperty | CounterStyleRangeProperty[],
  speakAs?: CounterStyleSpeakAsProperty | CounterStyleSpeakAsProperty[],
  suffix?: string | string[],
  symbols?: string | string[],
  system?: CounterStyleSystemProperty | CounterStyleSystemProperty[],
};

export type CounterStyleHyphenFallback = {
  "additive-symbols"?: string | string[],
  fallback?: string | string[],
  negative?: string | string[],
  pad?: string | string[],
  prefix?: string | string[],
  range?: CounterStyleRangeProperty | CounterStyleRangeProperty[],
  "speak-as"?: CounterStyleSpeakAsProperty | CounterStyleSpeakAsProperty[],
  suffix?: string | string[],
  symbols?: string | string[],
  system?: CounterStyleSystemProperty | CounterStyleSystemProperty[],
};

export type FontFace = {
  MozFontFeatureSettings?: FontFaceFontFeatureSettingsProperty,
  fontDisplay?: FontFaceFontDisplayProperty,
  fontFamily?: string,
  fontFeatureSettings?: FontFaceFontFeatureSettingsProperty,
  fontStretch?: FontFaceFontStretchProperty,
  fontStyle?: FontFaceFontStyleProperty,
  fontVariant?: FontFaceFontVariantProperty,
  fontVariationSettings?: FontFaceFontVariationSettingsProperty,
  fontWeight?: FontFaceFontWeightProperty,
  src?: string,
  unicodeRange?: string,
};

export type FontFaceHyphen = {
  "-moz-font-feature-settings"?: FontFaceFontFeatureSettingsProperty,
  "font-display"?: FontFaceFontDisplayProperty,
  "font-family"?: string,
  "font-feature-settings"?: FontFaceFontFeatureSettingsProperty,
  "font-stretch"?: FontFaceFontStretchProperty,
  "font-style"?: FontFaceFontStyleProperty,
  "font-variant"?: FontFaceFontVariantProperty,
  "font-variation-settings"?: FontFaceFontVariationSettingsProperty,
  "font-weight"?: FontFaceFontWeightProperty,
  src?: string,
  "unicode-range"?: string,
};

export type FontFaceFallback = {
  MozFontFeatureSettings?: FontFaceFontFeatureSettingsProperty | FontFaceFontFeatureSettingsProperty[],
  fontDisplay?: FontFaceFontDisplayProperty | FontFaceFontDisplayProperty[],
  fontFamily?: string | string[],
  fontFeatureSettings?: FontFaceFontFeatureSettingsProperty | FontFaceFontFeatureSettingsProperty[],
  fontStretch?: FontFaceFontStretchProperty | FontFaceFontStretchProperty[],
  fontStyle?: FontFaceFontStyleProperty | FontFaceFontStyleProperty[],
  fontVariant?: FontFaceFontVariantProperty | FontFaceFontVariantProperty[],
  fontVariationSettings?: FontFaceFontVariationSettingsProperty | FontFaceFontVariationSettingsProperty[],
  fontWeight?: FontFaceFontWeightProperty | FontFaceFontWeightProperty[],
  src?: string | string[],
  unicodeRange?: string | string[],
};

export type FontFaceHyphenFallback = {
  "-moz-font-feature-settings"?: FontFaceFontFeatureSettingsProperty | FontFaceFontFeatureSettingsProperty[],
  "font-display"?: FontFaceFontDisplayProperty | FontFaceFontDisplayProperty[],
  "font-family"?: string | string[],
  "font-feature-settings"?: FontFaceFontFeatureSettingsProperty | FontFaceFontFeatureSettingsProperty[],
  "font-stretch"?: FontFaceFontStretchProperty | FontFaceFontStretchProperty[],
  "font-style"?: FontFaceFontStyleProperty | FontFaceFontStyleProperty[],
  "font-variant"?: FontFaceFontVariantProperty | FontFaceFontVariantProperty[],
  "font-variation-settings"?: FontFaceFontVariationSettingsProperty | FontFaceFontVariationSettingsProperty[],
  "font-weight"?: FontFaceFontWeightProperty | FontFaceFontWeightProperty[],
  src?: string | string[],
  "unicode-range"?: string | string[],
};

export type Page<TLength = string | 0> = {
  size?: PageSizeProperty<TLength>,
};

export type PageHyphen<TLength = string | 0> = {
  size?: PageSizeProperty<TLength>,
};

export type PageFallback<TLength = string | 0> = {
  size?: PageSizeProperty<TLength> | PageSizeProperty<TLength>[],
};

export type PageHyphenFallback<TLength = string | 0> = {
  size?: PageSizeProperty<TLength> | PageSizeProperty<TLength>[],
};

export type Property = {
  inherits?: PropertyInheritsProperty,
  initialValue?: string,
  syntax?: string,
};

export type PropertyHyphen = {
  inherits?: PropertyInheritsProperty,
  "initial-value"?: string,
  syntax?: string,
};

export type PropertyFallback = {
  inherits?: PropertyInheritsProperty | PropertyInheritsProperty[],
  initialValue?: string | string[],
  syntax?: string | string[],
};

export type PropertyHyphenFallback = {
  inherits?: PropertyInheritsProperty | PropertyInheritsProperty[],
  "initial-value"?: string | string[],
  syntax?: string | string[],
};

export type Viewport<TLength = string | 0> = {
  height?: ViewportHeightProperty<TLength>,
  maxHeight?: ViewportMaxHeightProperty<TLength>,
  maxWidth?: ViewportMaxWidthProperty<TLength>,
  maxZoom?: ViewportMaxZoomProperty,
  minHeight?: ViewportMinHeightProperty<TLength>,
  minWidth?: ViewportMinWidthProperty<TLength>,
  minZoom?: ViewportMinZoomProperty,
  orientation?: ViewportOrientationProperty,
  userZoom?: ViewportUserZoomProperty,
  viewportFit?: ViewportViewportFitProperty,
  width?: ViewportWidthProperty<TLength>,
  zoom?: ViewportZoomProperty,
};

export type ViewportHyphen<TLength = string | 0> = {
  height?: ViewportHeightProperty<TLength>,
  "max-height"?: ViewportMaxHeightProperty<TLength>,
  "max-width"?: ViewportMaxWidthProperty<TLength>,
  "max-zoom"?: ViewportMaxZoomProperty,
  "min-height"?: ViewportMinHeightProperty<TLength>,
  "min-width"?: ViewportMinWidthProperty<TLength>,
  "min-zoom"?: ViewportMinZoomProperty,
  orientation?: ViewportOrientationProperty,
  "user-zoom"?: ViewportUserZoomProperty,
  "viewport-fit"?: ViewportViewportFitProperty,
  width?: ViewportWidthProperty<TLength>,
  zoom?: ViewportZoomProperty,
};

export type ViewportFallback<TLength = string | 0> = {
  height?: ViewportHeightProperty<TLength> | ViewportHeightProperty<TLength>[],
  maxHeight?: ViewportMaxHeightProperty<TLength> | ViewportMaxHeightProperty<TLength>[],
  maxWidth?: ViewportMaxWidthProperty<TLength> | ViewportMaxWidthProperty<TLength>[],
  maxZoom?: ViewportMaxZoomProperty | ViewportMaxZoomProperty[],
  minHeight?: ViewportMinHeightProperty<TLength> | ViewportMinHeightProperty<TLength>[],
  minWidth?: ViewportMinWidthProperty<TLength> | ViewportMinWidthProperty<TLength>[],
  minZoom?: ViewportMinZoomProperty | ViewportMinZoomProperty[],
  orientation?: ViewportOrientationProperty | ViewportOrientationProperty[],
  userZoom?: ViewportUserZoomProperty | ViewportUserZoomProperty[],
  viewportFit?: ViewportViewportFitProperty | ViewportViewportFitProperty[],
  width?: ViewportWidthProperty<TLength> | ViewportWidthProperty<TLength>[],
  zoom?: ViewportZoomProperty | ViewportZoomProperty[],
};

export type ViewportHyphenFallback<TLength = string | 0> = {
  height?: ViewportHeightProperty<TLength> | ViewportHeightProperty<TLength>[],
  "max-height"?: ViewportMaxHeightProperty<TLength> | ViewportMaxHeightProperty<TLength>[],
  "max-width"?: ViewportMaxWidthProperty<TLength> | ViewportMaxWidthProperty<TLength>[],
  "max-zoom"?: ViewportMaxZoomProperty | ViewportMaxZoomProperty[],
  "min-height"?: ViewportMinHeightProperty<TLength> | ViewportMinHeightProperty<TLength>[],
  "min-width"?: ViewportMinWidthProperty<TLength> | ViewportMinWidthProperty<TLength>[],
  "min-zoom"?: ViewportMinZoomProperty | ViewportMinZoomProperty[],
  orientation?: ViewportOrientationProperty | ViewportOrientationProperty[],
  "user-zoom"?: ViewportUserZoomProperty | ViewportUserZoomProperty[],
  "viewport-fit"?: ViewportViewportFitProperty | ViewportViewportFitProperty[],
  width?: ViewportWidthProperty<TLength> | ViewportWidthProperty<TLength>[],
  zoom?: ViewportZoomProperty | ViewportZoomProperty[],
};
=======
// @flow strict

export type StandardLonghandProperties<TLength = string | 0, TTime = string> = {|
  alignContent?: Property$AlignContent,
  alignItems?: Property$AlignItems,
  alignSelf?: Property$AlignSelf,
  alignTracks?: Property$AlignTracks,
  animationDelay?: Property$AnimationDelay<TTime>,
  animationDirection?: Property$AnimationDirection,
  animationDuration?: Property$AnimationDuration<TTime>,
  animationFillMode?: Property$AnimationFillMode,
  animationIterationCount?: Property$AnimationIterationCount,
  animationName?: Property$AnimationName,
  animationPlayState?: Property$AnimationPlayState,
  animationTimingFunction?: Property$AnimationTimingFunction,
  appearance?: Property$Appearance,
  aspectRatio?: Property$AspectRatio,
  backdropFilter?: Property$BackdropFilter,
  backfaceVisibility?: Property$BackfaceVisibility,
  backgroundAttachment?: Property$BackgroundAttachment,
  backgroundBlendMode?: Property$BackgroundBlendMode,
  backgroundClip?: Property$BackgroundClip,
  backgroundColor?: Property$BackgroundColor,
  backgroundImage?: Property$BackgroundImage,
  backgroundOrigin?: Property$BackgroundOrigin,
  backgroundPosition?: Property$BackgroundPosition<TLength>,
  backgroundPositionX?: Property$BackgroundPositionX<TLength>,
  backgroundPositionY?: Property$BackgroundPositionY<TLength>,
  backgroundRepeat?: Property$BackgroundRepeat,
  backgroundSize?: Property$BackgroundSize<TLength>,
  blockOverflow?: Property$BlockOverflow,
  blockSize?: Property$BlockSize<TLength>,
  borderBlockColor?: Property$BorderBlockColor,
  borderBlockEndColor?: Property$BorderBlockEndColor,
  borderBlockEndStyle?: Property$BorderBlockEndStyle,
  borderBlockEndWidth?: Property$BorderBlockEndWidth<TLength>,
  borderBlockStartColor?: Property$BorderBlockStartColor,
  borderBlockStartStyle?: Property$BorderBlockStartStyle,
  borderBlockStartWidth?: Property$BorderBlockStartWidth<TLength>,
  borderBlockStyle?: Property$BorderBlockStyle,
  borderBlockWidth?: Property$BorderBlockWidth<TLength>,
  borderBottomColor?: Property$BorderBottomColor,
  borderBottomLeftRadius?: Property$BorderBottomLeftRadius<TLength>,
  borderBottomRightRadius?: Property$BorderBottomRightRadius<TLength>,
  borderBottomStyle?: Property$BorderBottomStyle,
  borderBottomWidth?: Property$BorderBottomWidth<TLength>,
  borderCollapse?: Property$BorderCollapse,
  borderEndEndRadius?: Property$BorderEndEndRadius<TLength>,
  borderEndStartRadius?: Property$BorderEndStartRadius<TLength>,
  borderImageOutset?: Property$BorderImageOutset<TLength>,
  borderImageRepeat?: Property$BorderImageRepeat,
  borderImageSlice?: Property$BorderImageSlice,
  borderImageSource?: Property$BorderImageSource,
  borderImageWidth?: Property$BorderImageWidth<TLength>,
  borderInlineColor?: Property$BorderInlineColor,
  borderInlineEndColor?: Property$BorderInlineEndColor,
  borderInlineEndStyle?: Property$BorderInlineEndStyle,
  borderInlineEndWidth?: Property$BorderInlineEndWidth<TLength>,
  borderInlineStartColor?: Property$BorderInlineStartColor,
  borderInlineStartStyle?: Property$BorderInlineStartStyle,
  borderInlineStartWidth?: Property$BorderInlineStartWidth<TLength>,
  borderInlineStyle?: Property$BorderInlineStyle,
  borderInlineWidth?: Property$BorderInlineWidth<TLength>,
  borderLeftColor?: Property$BorderLeftColor,
  borderLeftStyle?: Property$BorderLeftStyle,
  borderLeftWidth?: Property$BorderLeftWidth<TLength>,
  borderRightColor?: Property$BorderRightColor,
  borderRightStyle?: Property$BorderRightStyle,
  borderRightWidth?: Property$BorderRightWidth<TLength>,
  borderSpacing?: Property$BorderSpacing<TLength>,
  borderStartEndRadius?: Property$BorderStartEndRadius<TLength>,
  borderStartStartRadius?: Property$BorderStartStartRadius<TLength>,
  borderTopColor?: Property$BorderTopColor,
  borderTopLeftRadius?: Property$BorderTopLeftRadius<TLength>,
  borderTopRightRadius?: Property$BorderTopRightRadius<TLength>,
  borderTopStyle?: Property$BorderTopStyle,
  borderTopWidth?: Property$BorderTopWidth<TLength>,
  bottom?: Property$Bottom<TLength>,
  boxDecorationBreak?: Property$BoxDecorationBreak,
  boxShadow?: Property$BoxShadow,
  boxSizing?: Property$BoxSizing,
  breakAfter?: Property$BreakAfter,
  breakBefore?: Property$BreakBefore,
  breakInside?: Property$BreakInside,
  captionSide?: Property$CaptionSide,
  caretColor?: Property$CaretColor,
  clear?: Property$Clear,
  clipPath?: Property$ClipPath,
  color?: Property$Color,
  colorAdjust?: Property$ColorAdjust,
  columnCount?: Property$ColumnCount,
  columnFill?: Property$ColumnFill,
  columnGap?: Property$ColumnGap<TLength>,
  columnRuleColor?: Property$ColumnRuleColor,
  columnRuleStyle?: Property$ColumnRuleStyle,
  columnRuleWidth?: Property$ColumnRuleWidth<TLength>,
  columnSpan?: Property$ColumnSpan,
  columnWidth?: Property$ColumnWidth<TLength>,
  contain?: Property$Contain,
  content?: Property$Content,
  contentVisibility?: Property$ContentVisibility,
  counterIncrement?: Property$CounterIncrement,
  counterReset?: Property$CounterReset,
  counterSet?: Property$CounterSet,
  cursor?: Property$Cursor,
  direction?: Property$Direction,
  display?: Property$Display,
  emptyCells?: Property$EmptyCells,
  filter?: Property$Filter,
  flexBasis?: Property$FlexBasis<TLength>,
  flexDirection?: Property$FlexDirection,
  flexGrow?: Property$FlexGrow,
  flexShrink?: Property$FlexShrink,
  flexWrap?: Property$FlexWrap,
  float?: Property$Float,
  fontFamily?: Property$FontFamily,
  fontFeatureSettings?: Property$FontFeatureSettings,
  fontKerning?: Property$FontKerning,
  fontLanguageOverride?: Property$FontLanguageOverride,
  fontOpticalSizing?: Property$FontOpticalSizing,
  fontSize?: Property$FontSize<TLength>,
  fontSizeAdjust?: Property$FontSizeAdjust,
  fontSmooth?: Property$FontSmooth<TLength>,
  fontStretch?: Property$FontStretch,
  fontStyle?: Property$FontStyle,
  fontSynthesis?: Property$FontSynthesis,
  fontVariant?: Property$FontVariant,
  fontVariantCaps?: Property$FontVariantCaps,
  fontVariantEastAsian?: Property$FontVariantEastAsian,
  fontVariantLigatures?: Property$FontVariantLigatures,
  fontVariantNumeric?: Property$FontVariantNumeric,
  fontVariantPosition?: Property$FontVariantPosition,
  fontVariationSettings?: Property$FontVariationSettings,
  fontWeight?: Property$FontWeight,
  forcedColorAdjust?: Property$ForcedColorAdjust,
  gridAutoColumns?: Property$GridAutoColumns<TLength>,
  gridAutoFlow?: Property$GridAutoFlow,
  gridAutoRows?: Property$GridAutoRows<TLength>,
  gridColumnEnd?: Property$GridColumnEnd,
  gridColumnStart?: Property$GridColumnStart,
  gridRowEnd?: Property$GridRowEnd,
  gridRowStart?: Property$GridRowStart,
  gridTemplateAreas?: Property$GridTemplateAreas,
  gridTemplateColumns?: Property$GridTemplateColumns<TLength>,
  gridTemplateRows?: Property$GridTemplateRows<TLength>,
  hangingPunctuation?: Property$HangingPunctuation,
  height?: Property$Height<TLength>,
  hyphens?: Property$Hyphens,
  imageOrientation?: Property$ImageOrientation,
  imageRendering?: Property$ImageRendering,
  imageResolution?: Property$ImageResolution,
  initialLetter?: Property$InitialLetter,
  inlineSize?: Property$InlineSize<TLength>,
  inset?: Property$Inset<TLength>,
  insetBlock?: Property$InsetBlock<TLength>,
  insetBlockEnd?: Property$InsetBlockEnd<TLength>,
  insetBlockStart?: Property$InsetBlockStart<TLength>,
  insetInline?: Property$InsetInline<TLength>,
  insetInlineEnd?: Property$InsetInlineEnd<TLength>,
  insetInlineStart?: Property$InsetInlineStart<TLength>,
  isolation?: Property$Isolation,
  justifyContent?: Property$JustifyContent,
  justifyItems?: Property$JustifyItems,
  justifySelf?: Property$JustifySelf,
  justifyTracks?: Property$JustifyTracks,
  left?: Property$Left<TLength>,
  letterSpacing?: Property$LetterSpacing<TLength>,
  lineBreak?: Property$LineBreak,
  lineHeight?: Property$LineHeight<TLength>,
  lineHeightStep?: Property$LineHeightStep<TLength>,
  listStyleImage?: Property$ListStyleImage,
  listStylePosition?: Property$ListStylePosition,
  listStyleType?: Property$ListStyleType,
  marginBlock?: Property$MarginBlock<TLength>,
  marginBlockEnd?: Property$MarginBlockEnd<TLength>,
  marginBlockStart?: Property$MarginBlockStart<TLength>,
  marginBottom?: Property$MarginBottom<TLength>,
  marginInline?: Property$MarginInline<TLength>,
  marginInlineEnd?: Property$MarginInlineEnd<TLength>,
  marginInlineStart?: Property$MarginInlineStart<TLength>,
  marginLeft?: Property$MarginLeft<TLength>,
  marginRight?: Property$MarginRight<TLength>,
  marginTop?: Property$MarginTop<TLength>,
  maskBorderMode?: Property$MaskBorderMode,
  maskBorderOutset?: Property$MaskBorderOutset<TLength>,
  maskBorderRepeat?: Property$MaskBorderRepeat,
  maskBorderSlice?: Property$MaskBorderSlice,
  maskBorderSource?: Property$MaskBorderSource,
  maskBorderWidth?: Property$MaskBorderWidth<TLength>,
  maskClip?: Property$MaskClip,
  maskComposite?: Property$MaskComposite,
  maskImage?: Property$MaskImage,
  maskMode?: Property$MaskMode,
  maskOrigin?: Property$MaskOrigin,
  maskPosition?: Property$MaskPosition<TLength>,
  maskRepeat?: Property$MaskRepeat,
  maskSize?: Property$MaskSize<TLength>,
  maskType?: Property$MaskType,
  mathStyle?: Property$MathStyle,
  maxBlockSize?: Property$MaxBlockSize<TLength>,
  maxHeight?: Property$MaxHeight<TLength>,
  maxInlineSize?: Property$MaxInlineSize<TLength>,
  maxLines?: Property$MaxLines,
  maxWidth?: Property$MaxWidth<TLength>,
  minBlockSize?: Property$MinBlockSize<TLength>,
  minHeight?: Property$MinHeight<TLength>,
  minInlineSize?: Property$MinInlineSize<TLength>,
  minWidth?: Property$MinWidth<TLength>,
  mixBlendMode?: Property$MixBlendMode,
  motionDistance?: Property$OffsetDistance<TLength>,
  motionPath?: Property$OffsetPath,
  motionRotation?: Property$OffsetRotate,
  objectFit?: Property$ObjectFit,
  objectPosition?: Property$ObjectPosition<TLength>,
  offsetAnchor?: Property$OffsetAnchor<TLength>,
  offsetDistance?: Property$OffsetDistance<TLength>,
  offsetPath?: Property$OffsetPath,
  offsetRotate?: Property$OffsetRotate,
  offsetRotation?: Property$OffsetRotate,
  opacity?: Property$Opacity,
  order?: Property$Order,
  orphans?: Property$Orphans,
  outlineColor?: Property$OutlineColor,
  outlineOffset?: Property$OutlineOffset<TLength>,
  outlineStyle?: Property$OutlineStyle,
  outlineWidth?: Property$OutlineWidth<TLength>,
  overflowAnchor?: Property$OverflowAnchor,
  overflowBlock?: Property$OverflowBlock,
  overflowClipBox?: Property$OverflowClipBox,
  overflowInline?: Property$OverflowInline,
  overflowWrap?: Property$OverflowWrap,
  overflowX?: Property$OverflowX,
  overflowY?: Property$OverflowY,
  overscrollBehavior?: Property$OverscrollBehavior,
  overscrollBehaviorBlock?: Property$OverscrollBehaviorBlock,
  overscrollBehaviorInline?: Property$OverscrollBehaviorInline,
  overscrollBehaviorX?: Property$OverscrollBehaviorX,
  overscrollBehaviorY?: Property$OverscrollBehaviorY,
  paddingBlock?: Property$PaddingBlock<TLength>,
  paddingBlockEnd?: Property$PaddingBlockEnd<TLength>,
  paddingBlockStart?: Property$PaddingBlockStart<TLength>,
  paddingBottom?: Property$PaddingBottom<TLength>,
  paddingInline?: Property$PaddingInline<TLength>,
  paddingInlineEnd?: Property$PaddingInlineEnd<TLength>,
  paddingInlineStart?: Property$PaddingInlineStart<TLength>,
  paddingLeft?: Property$PaddingLeft<TLength>,
  paddingRight?: Property$PaddingRight<TLength>,
  paddingTop?: Property$PaddingTop<TLength>,
  pageBreakAfter?: Property$PageBreakAfter,
  pageBreakBefore?: Property$PageBreakBefore,
  pageBreakInside?: Property$PageBreakInside,
  paintOrder?: Property$PaintOrder,
  perspective?: Property$Perspective<TLength>,
  perspectiveOrigin?: Property$PerspectiveOrigin<TLength>,
  placeContent?: Property$PlaceContent,
  pointerEvents?: Property$PointerEvents,
  position?: Property$Position,
  quotes?: Property$Quotes,
  resize?: Property$Resize,
  right?: Property$Right<TLength>,
  rotate?: Property$Rotate,
  rowGap?: Property$RowGap<TLength>,
  rubyAlign?: Property$RubyAlign,
  rubyMerge?: Property$RubyMerge,
  rubyPosition?: Property$RubyPosition,
  scale?: Property$Scale,
  scrollBehavior?: Property$ScrollBehavior,
  scrollMargin?: Property$ScrollMargin<TLength>,
  scrollMarginBlock?: Property$ScrollMarginBlock<TLength>,
  scrollMarginBlockEnd?: Property$ScrollMarginBlockEnd<TLength>,
  scrollMarginBlockStart?: Property$ScrollMarginBlockStart<TLength>,
  scrollMarginBottom?: Property$ScrollMarginBottom<TLength>,
  scrollMarginInline?: Property$ScrollMarginInline<TLength>,
  scrollMarginInlineEnd?: Property$ScrollMarginInlineEnd<TLength>,
  scrollMarginInlineStart?: Property$ScrollMarginInlineStart<TLength>,
  scrollMarginLeft?: Property$ScrollMarginLeft<TLength>,
  scrollMarginRight?: Property$ScrollMarginRight<TLength>,
  scrollMarginTop?: Property$ScrollMarginTop<TLength>,
  scrollPadding?: Property$ScrollPadding<TLength>,
  scrollPaddingBlock?: Property$ScrollPaddingBlock<TLength>,
  scrollPaddingBlockEnd?: Property$ScrollPaddingBlockEnd<TLength>,
  scrollPaddingBlockStart?: Property$ScrollPaddingBlockStart<TLength>,
  scrollPaddingBottom?: Property$ScrollPaddingBottom<TLength>,
  scrollPaddingInline?: Property$ScrollPaddingInline<TLength>,
  scrollPaddingInlineEnd?: Property$ScrollPaddingInlineEnd<TLength>,
  scrollPaddingInlineStart?: Property$ScrollPaddingInlineStart<TLength>,
  scrollPaddingLeft?: Property$ScrollPaddingLeft<TLength>,
  scrollPaddingRight?: Property$ScrollPaddingRight<TLength>,
  scrollPaddingTop?: Property$ScrollPaddingTop<TLength>,
  scrollSnapAlign?: Property$ScrollSnapAlign,
  scrollSnapMargin?: Property$ScrollMargin<TLength>,
  scrollSnapMarginBottom?: Property$ScrollMarginBottom<TLength>,
  scrollSnapMarginLeft?: Property$ScrollMarginLeft<TLength>,
  scrollSnapMarginRight?: Property$ScrollMarginRight<TLength>,
  scrollSnapMarginTop?: Property$ScrollMarginTop<TLength>,
  scrollSnapStop?: Property$ScrollSnapStop,
  scrollSnapType?: Property$ScrollSnapType,
  scrollbarColor?: Property$ScrollbarColor,
  scrollbarGutter?: Property$ScrollbarGutter,
  scrollbarWidth?: Property$ScrollbarWidth,
  shapeImageThreshold?: Property$ShapeImageThreshold,
  shapeMargin?: Property$ShapeMargin<TLength>,
  shapeOutside?: Property$ShapeOutside,
  tabSize?: Property$TabSize<TLength>,
  tableLayout?: Property$TableLayout,
  textAlign?: Property$TextAlign,
  textAlignLast?: Property$TextAlignLast,
  textCombineUpright?: Property$TextCombineUpright,
  textDecorationColor?: Property$TextDecorationColor,
  textDecorationLine?: Property$TextDecorationLine,
  textDecorationSkip?: Property$TextDecorationSkip,
  textDecorationSkipInk?: Property$TextDecorationSkipInk,
  textDecorationStyle?: Property$TextDecorationStyle,
  textDecorationThickness?: Property$TextDecorationThickness<TLength>,
  textDecorationWidth?: Property$TextDecorationThickness<TLength>,
  textEmphasisColor?: Property$TextEmphasisColor,
  textEmphasisPosition?: Property$TextEmphasisPosition,
  textEmphasisStyle?: Property$TextEmphasisStyle,
  textIndent?: Property$TextIndent<TLength>,
  textJustify?: Property$TextJustify,
  textOrientation?: Property$TextOrientation,
  textOverflow?: Property$TextOverflow,
  textRendering?: Property$TextRendering,
  textShadow?: Property$TextShadow,
  textSizeAdjust?: Property$TextSizeAdjust,
  textTransform?: Property$TextTransform,
  textUnderlineOffset?: Property$TextUnderlineOffset<TLength>,
  textUnderlinePosition?: Property$TextUnderlinePosition,
  top?: Property$Top<TLength>,
  touchAction?: Property$TouchAction,
  transform?: Property$Transform,
  transformBox?: Property$TransformBox,
  transformOrigin?: Property$TransformOrigin<TLength>,
  transformStyle?: Property$TransformStyle,
  transitionDelay?: Property$TransitionDelay<TTime>,
  transitionDuration?: Property$TransitionDuration<TTime>,
  transitionProperty?: Property$TransitionProperty,
  transitionTimingFunction?: Property$TransitionTimingFunction,
  translate?: Property$Translate<TLength>,
  unicodeBidi?: Property$UnicodeBidi,
  userSelect?: Property$UserSelect,
  verticalAlign?: Property$VerticalAlign<TLength>,
  visibility?: Property$Visibility,
  whiteSpace?: Property$WhiteSpace,
  widows?: Property$Widows,
  width?: Property$Width<TLength>,
  willChange?: Property$WillChange,
  wordBreak?: Property$WordBreak,
  wordSpacing?: Property$WordSpacing<TLength>,
  wordWrap?: Property$WordWrap,
  writingMode?: Property$WritingMode,
  zIndex?: Property$ZIndex,
  zoom?: Property$Zoom,
|};

export type StandardShorthandProperties<TLength = string | 0, TTime = string> = {|
  all?: Property$All,
  animation?: Property$Animation<TTime>,
  background?: Property$Background<TLength>,
  border?: Property$Border<TLength>,
  borderBlock?: Property$BorderBlock<TLength>,
  borderBlockEnd?: Property$BorderBlockEnd<TLength>,
  borderBlockStart?: Property$BorderBlockStart<TLength>,
  borderBottom?: Property$BorderBottom<TLength>,
  borderColor?: Property$BorderColor,
  borderImage?: Property$BorderImage,
  borderInline?: Property$BorderInline<TLength>,
  borderInlineEnd?: Property$BorderInlineEnd<TLength>,
  borderInlineStart?: Property$BorderInlineStart<TLength>,
  borderLeft?: Property$BorderLeft<TLength>,
  borderRadius?: Property$BorderRadius<TLength>,
  borderRight?: Property$BorderRight<TLength>,
  borderStyle?: Property$BorderStyle,
  borderTop?: Property$BorderTop<TLength>,
  borderWidth?: Property$BorderWidth<TLength>,
  columnRule?: Property$ColumnRule<TLength>,
  columns?: Property$Columns<TLength>,
  flex?: Property$Flex<TLength>,
  flexFlow?: Property$FlexFlow,
  font?: Property$Font,
  gap?: Property$Gap<TLength>,
  grid?: Property$Grid,
  gridArea?: Property$GridArea,
  gridColumn?: Property$GridColumn,
  gridRow?: Property$GridRow,
  gridTemplate?: Property$GridTemplate,
  lineClamp?: Property$LineClamp,
  listStyle?: Property$ListStyle,
  margin?: Property$Margin<TLength>,
  mask?: Property$Mask<TLength>,
  maskBorder?: Property$MaskBorder,
  motion?: Property$Offset<TLength>,
  offset?: Property$Offset<TLength>,
  outline?: Property$Outline<TLength>,
  overflow?: Property$Overflow,
  padding?: Property$Padding<TLength>,
  placeItems?: Property$PlaceItems,
  placeSelf?: Property$PlaceSelf,
  textDecoration?: Property$TextDecoration<TLength>,
  textEmphasis?: Property$TextEmphasis,
  transition?: Property$Transition<TTime>,
|};

export type StandardProperties<TLength = string | 0, TTime = string> = {| ...StandardLonghandProperties<TLength, TTime>, ...StandardShorthandProperties<TLength, TTime> |};

export type VendorLonghandProperties<TLength = string | 0, TTime = string> = {|
  MozAnimationDelay?: Property$AnimationDelay<TTime>,
  MozAnimationDirection?: Property$AnimationDirection,
  MozAnimationDuration?: Property$AnimationDuration<TTime>,
  MozAnimationFillMode?: Property$AnimationFillMode,
  MozAnimationIterationCount?: Property$AnimationIterationCount,
  MozAnimationName?: Property$AnimationName,
  MozAnimationPlayState?: Property$AnimationPlayState,
  MozAnimationTimingFunction?: Property$AnimationTimingFunction,
  MozAppearance?: Property$MozAppearance,
  MozBackfaceVisibility?: Property$BackfaceVisibility,
  MozBorderBottomColors?: Property$MozBorderBottomColors,
  MozBorderEndColor?: Property$BorderInlineEndColor,
  MozBorderEndStyle?: Property$BorderInlineEndStyle,
  MozBorderEndWidth?: Property$BorderInlineEndWidth<TLength>,
  MozBorderLeftColors?: Property$MozBorderLeftColors,
  MozBorderRightColors?: Property$MozBorderRightColors,
  MozBorderStartColor?: Property$BorderInlineStartColor,
  MozBorderStartStyle?: Property$BorderInlineStartStyle,
  MozBorderTopColors?: Property$MozBorderTopColors,
  MozBoxSizing?: Property$BoxSizing,
  MozColumnCount?: Property$ColumnCount,
  MozColumnFill?: Property$ColumnFill,
  MozColumnGap?: Property$ColumnGap<TLength>,
  MozColumnRuleColor?: Property$ColumnRuleColor,
  MozColumnRuleStyle?: Property$ColumnRuleStyle,
  MozColumnRuleWidth?: Property$ColumnRuleWidth<TLength>,
  MozColumnWidth?: Property$ColumnWidth<TLength>,
  MozContextProperties?: Property$MozContextProperties,
  MozFontFeatureSettings?: Property$FontFeatureSettings,
  MozFontLanguageOverride?: Property$FontLanguageOverride,
  MozHyphens?: Property$Hyphens,
  MozImageRegion?: Property$MozImageRegion,
  MozMarginEnd?: Property$MarginInlineEnd<TLength>,
  MozMarginStart?: Property$MarginInlineStart<TLength>,
  MozOrient?: Property$MozOrient,
  MozOsxFontSmoothing?: Property$FontSmooth<TLength>,
  MozPaddingEnd?: Property$PaddingInlineEnd<TLength>,
  MozPaddingStart?: Property$PaddingInlineStart<TLength>,
  MozPerspective?: Property$Perspective<TLength>,
  MozPerspectiveOrigin?: Property$PerspectiveOrigin<TLength>,
  MozStackSizing?: Property$MozStackSizing,
  MozTabSize?: Property$TabSize<TLength>,
  MozTextBlink?: Property$MozTextBlink,
  MozTextSizeAdjust?: Property$TextSizeAdjust,
  MozTransformOrigin?: Property$TransformOrigin<TLength>,
  MozTransformStyle?: Property$TransformStyle,
  MozTransitionDelay?: Property$TransitionDelay<TTime>,
  MozTransitionDuration?: Property$TransitionDuration<TTime>,
  MozTransitionProperty?: Property$TransitionProperty,
  MozTransitionTimingFunction?: Property$TransitionTimingFunction,
  MozUserFocus?: Property$MozUserFocus,
  MozUserModify?: Property$MozUserModify,
  MozUserSelect?: Property$UserSelect,
  MozWindowDragging?: Property$MozWindowDragging,
  MozWindowShadow?: Property$MozWindowShadow,
  msAccelerator?: Property$MsAccelerator,
  msAlignSelf?: Property$AlignSelf,
  msBlockProgression?: Property$MsBlockProgression,
  msContentZoomChaining?: Property$MsContentZoomChaining,
  msContentZoomLimitMax?: Property$MsContentZoomLimitMax,
  msContentZoomLimitMin?: Property$MsContentZoomLimitMin,
  msContentZoomSnapPoints?: Property$MsContentZoomSnapPoints,
  msContentZoomSnapType?: Property$MsContentZoomSnapType,
  msContentZooming?: Property$MsContentZooming,
  msFilter?: Property$MsFilter,
  msFlexDirection?: Property$FlexDirection,
  msFlexPositive?: Property$FlexGrow,
  msFlowFrom?: Property$MsFlowFrom,
  msFlowInto?: Property$MsFlowInto,
  msGridColumns?: Property$MsGridColumns<TLength>,
  msGridRows?: Property$MsGridRows<TLength>,
  msHighContrastAdjust?: Property$MsHighContrastAdjust,
  msHyphenateLimitChars?: Property$MsHyphenateLimitChars,
  msHyphenateLimitLines?: Property$MsHyphenateLimitLines,
  msHyphenateLimitZone?: Property$MsHyphenateLimitZone<TLength>,
  msHyphens?: Property$Hyphens,
  msImeAlign?: Property$MsImeAlign,
  msJustifySelf?: Property$JustifySelf,
  msLineBreak?: Property$LineBreak,
  msOrder?: Property$Order,
  msOverflowStyle?: Property$MsOverflowStyle,
  msOverflowX?: Property$OverflowX,
  msOverflowY?: Property$OverflowY,
  msScrollChaining?: Property$MsScrollChaining,
  msScrollLimitXMax?: Property$MsScrollLimitXMax<TLength>,
  msScrollLimitXMin?: Property$MsScrollLimitXMin<TLength>,
  msScrollLimitYMax?: Property$MsScrollLimitYMax<TLength>,
  msScrollLimitYMin?: Property$MsScrollLimitYMin<TLength>,
  msScrollRails?: Property$MsScrollRails,
  msScrollSnapPointsX?: Property$MsScrollSnapPointsX,
  msScrollSnapPointsY?: Property$MsScrollSnapPointsY,
  msScrollSnapType?: Property$MsScrollSnapType,
  msScrollTranslation?: Property$MsScrollTranslation,
  msScrollbar3dlightColor?: Property$MsScrollbar3dlightColor,
  msScrollbarArrowColor?: Property$MsScrollbarArrowColor,
  msScrollbarBaseColor?: Property$MsScrollbarBaseColor,
  msScrollbarDarkshadowColor?: Property$MsScrollbarDarkshadowColor,
  msScrollbarFaceColor?: Property$MsScrollbarFaceColor,
  msScrollbarHighlightColor?: Property$MsScrollbarHighlightColor,
  msScrollbarShadowColor?: Property$MsScrollbarShadowColor,
  msTextAutospace?: Property$MsTextAutospace,
  msTextCombineHorizontal?: Property$TextCombineUpright,
  msTextOverflow?: Property$TextOverflow,
  msTouchAction?: Property$TouchAction,
  msTouchSelect?: Property$MsTouchSelect,
  msTransform?: Property$Transform,
  msTransformOrigin?: Property$TransformOrigin<TLength>,
  msTransitionDelay?: Property$TransitionDelay<TTime>,
  msTransitionDuration?: Property$TransitionDuration<TTime>,
  msTransitionProperty?: Property$TransitionProperty,
  msTransitionTimingFunction?: Property$TransitionTimingFunction,
  msUserSelect?: Property$MsUserSelect,
  msWordBreak?: Property$WordBreak,
  msWrapFlow?: Property$MsWrapFlow,
  msWrapMargin?: Property$MsWrapMargin<TLength>,
  msWrapThrough?: Property$MsWrapThrough,
  msWritingMode?: Property$WritingMode,
  OObjectFit?: Property$ObjectFit,
  OObjectPosition?: Property$ObjectPosition<TLength>,
  OTabSize?: Property$TabSize<TLength>,
  OTextOverflow?: Property$TextOverflow,
  OTransformOrigin?: Property$TransformOrigin<TLength>,
  WebkitAlignContent?: Property$AlignContent,
  WebkitAlignItems?: Property$AlignItems,
  WebkitAlignSelf?: Property$AlignSelf,
  WebkitAnimationDelay?: Property$AnimationDelay<TTime>,
  WebkitAnimationDirection?: Property$AnimationDirection,
  WebkitAnimationDuration?: Property$AnimationDuration<TTime>,
  WebkitAnimationFillMode?: Property$AnimationFillMode,
  WebkitAnimationIterationCount?: Property$AnimationIterationCount,
  WebkitAnimationName?: Property$AnimationName,
  WebkitAnimationPlayState?: Property$AnimationPlayState,
  WebkitAnimationTimingFunction?: Property$AnimationTimingFunction,
  WebkitAppearance?: Property$WebkitAppearance,
  WebkitBackdropFilter?: Property$BackdropFilter,
  WebkitBackfaceVisibility?: Property$BackfaceVisibility,
  WebkitBackgroundClip?: Property$BackgroundClip,
  WebkitBackgroundOrigin?: Property$BackgroundOrigin,
  WebkitBackgroundSize?: Property$BackgroundSize<TLength>,
  WebkitBorderBeforeColor?: Property$WebkitBorderBeforeColor,
  WebkitBorderBeforeStyle?: Property$WebkitBorderBeforeStyle,
  WebkitBorderBeforeWidth?: Property$WebkitBorderBeforeWidth<TLength>,
  WebkitBorderBottomLeftRadius?: Property$BorderBottomLeftRadius<TLength>,
  WebkitBorderBottomRightRadius?: Property$BorderBottomRightRadius<TLength>,
  WebkitBorderImageSlice?: Property$BorderImageSlice,
  WebkitBorderTopLeftRadius?: Property$BorderTopLeftRadius<TLength>,
  WebkitBorderTopRightRadius?: Property$BorderTopRightRadius<TLength>,
  WebkitBoxDecorationBreak?: Property$BoxDecorationBreak,
  WebkitBoxReflect?: Property$WebkitBoxReflect<TLength>,
  WebkitBoxShadow?: Property$BoxShadow,
  WebkitBoxSizing?: Property$BoxSizing,
  WebkitClipPath?: Property$ClipPath,
  WebkitColumnCount?: Property$ColumnCount,
  WebkitColumnFill?: Property$ColumnFill,
  WebkitColumnGap?: Property$ColumnGap<TLength>,
  WebkitColumnRuleColor?: Property$ColumnRuleColor,
  WebkitColumnRuleStyle?: Property$ColumnRuleStyle,
  WebkitColumnRuleWidth?: Property$ColumnRuleWidth<TLength>,
  WebkitColumnSpan?: Property$ColumnSpan,
  WebkitColumnWidth?: Property$ColumnWidth<TLength>,
  WebkitFilter?: Property$Filter,
  WebkitFlexBasis?: Property$FlexBasis<TLength>,
  WebkitFlexDirection?: Property$FlexDirection,
  WebkitFlexGrow?: Property$FlexGrow,
  WebkitFlexShrink?: Property$FlexShrink,
  WebkitFlexWrap?: Property$FlexWrap,
  WebkitFontFeatureSettings?: Property$FontFeatureSettings,
  WebkitFontKerning?: Property$FontKerning,
  WebkitFontSmoothing?: Property$FontSmooth<TLength>,
  WebkitFontVariantLigatures?: Property$FontVariantLigatures,
  WebkitHyphens?: Property$Hyphens,
  WebkitJustifyContent?: Property$JustifyContent,
  WebkitLineBreak?: Property$LineBreak,
  WebkitLineClamp?: Property$WebkitLineClamp,
  WebkitMarginEnd?: Property$MarginInlineEnd<TLength>,
  WebkitMarginStart?: Property$MarginInlineStart<TLength>,
  WebkitMaskAttachment?: Property$WebkitMaskAttachment,
  WebkitMaskClip?: Property$WebkitMaskClip,
  WebkitMaskComposite?: Property$WebkitMaskComposite,
  WebkitMaskImage?: Property$WebkitMaskImage,
  WebkitMaskOrigin?: Property$WebkitMaskOrigin,
  WebkitMaskPosition?: Property$WebkitMaskPosition<TLength>,
  WebkitMaskPositionX?: Property$WebkitMaskPositionX<TLength>,
  WebkitMaskPositionY?: Property$WebkitMaskPositionY<TLength>,
  WebkitMaskRepeat?: Property$WebkitMaskRepeat,
  WebkitMaskRepeatX?: Property$WebkitMaskRepeatX,
  WebkitMaskRepeatY?: Property$WebkitMaskRepeatY,
  WebkitMaskSize?: Property$WebkitMaskSize<TLength>,
  WebkitMaxInlineSize?: Property$MaxInlineSize<TLength>,
  WebkitOrder?: Property$Order,
  WebkitOverflowScrolling?: Property$WebkitOverflowScrolling,
  WebkitPaddingEnd?: Property$PaddingInlineEnd<TLength>,
  WebkitPaddingStart?: Property$PaddingInlineStart<TLength>,
  WebkitPerspective?: Property$Perspective<TLength>,
  WebkitPerspectiveOrigin?: Property$PerspectiveOrigin<TLength>,
  WebkitPrintColorAdjust?: Property$ColorAdjust,
  WebkitRubyPosition?: Property$RubyPosition,
  WebkitScrollSnapType?: Property$ScrollSnapType,
  WebkitShapeMargin?: Property$ShapeMargin<TLength>,
  WebkitTapHighlightColor?: Property$WebkitTapHighlightColor,
  WebkitTextCombine?: Property$TextCombineUpright,
  WebkitTextDecorationColor?: Property$TextDecorationColor,
  WebkitTextDecorationLine?: Property$TextDecorationLine,
  WebkitTextDecorationSkip?: Property$TextDecorationSkip,
  WebkitTextDecorationStyle?: Property$TextDecorationStyle,
  WebkitTextEmphasisColor?: Property$TextEmphasisColor,
  WebkitTextEmphasisPosition?: Property$TextEmphasisPosition,
  WebkitTextEmphasisStyle?: Property$TextEmphasisStyle,
  WebkitTextFillColor?: Property$WebkitTextFillColor,
  WebkitTextOrientation?: Property$TextOrientation,
  WebkitTextSizeAdjust?: Property$TextSizeAdjust,
  WebkitTextStrokeColor?: Property$WebkitTextStrokeColor,
  WebkitTextStrokeWidth?: Property$WebkitTextStrokeWidth<TLength>,
  WebkitTextUnderlinePosition?: Property$TextUnderlinePosition,
  WebkitTouchCallout?: Property$WebkitTouchCallout,
  WebkitTransform?: Property$Transform,
  WebkitTransformOrigin?: Property$TransformOrigin<TLength>,
  WebkitTransformStyle?: Property$TransformStyle,
  WebkitTransitionDelay?: Property$TransitionDelay<TTime>,
  WebkitTransitionDuration?: Property$TransitionDuration<TTime>,
  WebkitTransitionProperty?: Property$TransitionProperty,
  WebkitTransitionTimingFunction?: Property$TransitionTimingFunction,
  WebkitUserModify?: Property$WebkitUserModify,
  WebkitUserSelect?: Property$UserSelect,
  WebkitWritingMode?: Property$WritingMode,
|};

export type VendorShorthandProperties<TLength = string | 0, TTime = string> = {|
  MozAnimation?: Property$Animation<TTime>,
  MozBorderImage?: Property$BorderImage,
  MozColumnRule?: Property$ColumnRule<TLength>,
  MozColumns?: Property$Columns<TLength>,
  MozTransition?: Property$Transition<TTime>,
  msContentZoomLimit?: Property$MsContentZoomLimit,
  msContentZoomSnap?: Property$MsContentZoomSnap,
  msFlex?: Property$Flex<TLength>,
  msScrollLimit?: Property$MsScrollLimit,
  msScrollSnapX?: Property$MsScrollSnapX,
  msScrollSnapY?: Property$MsScrollSnapY,
  msTransition?: Property$Transition<TTime>,
  WebkitAnimation?: Property$Animation<TTime>,
  WebkitBorderBefore?: Property$WebkitBorderBefore<TLength>,
  WebkitBorderImage?: Property$BorderImage,
  WebkitBorderRadius?: Property$BorderRadius<TLength>,
  WebkitColumnRule?: Property$ColumnRule<TLength>,
  WebkitColumns?: Property$Columns<TLength>,
  WebkitFlex?: Property$Flex<TLength>,
  WebkitFlexFlow?: Property$FlexFlow,
  WebkitMask?: Property$WebkitMask<TLength>,
  WebkitTextEmphasis?: Property$TextEmphasis,
  WebkitTextStroke?: Property$WebkitTextStroke<TLength>,
  WebkitTransition?: Property$Transition<TTime>,
|};

export type VendorProperties<TLength = string | 0, TTime = string> = {| ...VendorLonghandProperties<TLength, TTime>, ...VendorShorthandProperties<TLength, TTime> |};

export type ObsoleteProperties<TLength = string | 0, TTime = string> = {|
  azimuth?: Property$Azimuth,
  boxAlign?: Property$BoxAlign,
  boxDirection?: Property$BoxDirection,
  boxFlex?: Property$BoxFlex,
  boxFlexGroup?: Property$BoxFlexGroup,
  boxLines?: Property$BoxLines,
  boxOrdinalGroup?: Property$BoxOrdinalGroup,
  boxOrient?: Property$BoxOrient,
  boxPack?: Property$BoxPack,
  clip?: Property$Clip,
  fontVariantAlternates?: Property$FontVariantAlternates,
  gridColumnGap?: Property$GridColumnGap<TLength>,
  gridGap?: Property$GridGap<TLength>,
  gridRowGap?: Property$GridRowGap<TLength>,
  imeMode?: Property$ImeMode,
  offsetBlock?: Property$InsetBlock<TLength>,
  offsetBlockEnd?: Property$InsetBlockEnd<TLength>,
  offsetBlockStart?: Property$InsetBlockStart<TLength>,
  offsetInline?: Property$InsetInline<TLength>,
  offsetInlineEnd?: Property$InsetInlineEnd<TLength>,
  offsetInlineStart?: Property$InsetInlineStart<TLength>,
  scrollSnapCoordinate?: Property$ScrollSnapCoordinate<TLength>,
  scrollSnapDestination?: Property$ScrollSnapDestination<TLength>,
  scrollSnapPointsX?: Property$ScrollSnapPointsX,
  scrollSnapPointsY?: Property$ScrollSnapPointsY,
  scrollSnapTypeX?: Property$ScrollSnapTypeX,
  scrollSnapTypeY?: Property$ScrollSnapTypeY,
  scrollbarTrackColor?: Property$MsScrollbarTrackColor,
  textCombineHorizontal?: Property$TextCombineUpright,
  KhtmlBoxAlign?: Property$BoxAlign,
  KhtmlBoxDirection?: Property$BoxDirection,
  KhtmlBoxFlex?: Property$BoxFlex,
  KhtmlBoxFlexGroup?: Property$BoxFlexGroup,
  KhtmlBoxLines?: Property$BoxLines,
  KhtmlBoxOrdinalGroup?: Property$BoxOrdinalGroup,
  KhtmlBoxOrient?: Property$BoxOrient,
  KhtmlBoxPack?: Property$BoxPack,
  KhtmlLineBreak?: Property$LineBreak,
  KhtmlOpacity?: Property$Opacity,
  KhtmlUserSelect?: Property$UserSelect,
  MozBackgroundClip?: Property$BackgroundClip,
  MozBackgroundInlinePolicy?: Property$BoxDecorationBreak,
  MozBackgroundOrigin?: Property$BackgroundOrigin,
  MozBackgroundSize?: Property$BackgroundSize<TLength>,
  MozBinding?: Property$MozBinding,
  MozBorderRadius?: Property$BorderRadius<TLength>,
  MozBorderRadiusBottomleft?: Property$BorderBottomLeftRadius<TLength>,
  MozBorderRadiusBottomright?: Property$BorderBottomRightRadius<TLength>,
  MozBorderRadiusTopleft?: Property$BorderTopLeftRadius<TLength>,
  MozBorderRadiusTopright?: Property$BorderTopRightRadius<TLength>,
  MozBoxAlign?: Property$BoxAlign,
  MozBoxDirection?: Property$BoxDirection,
  MozBoxFlex?: Property$BoxFlex,
  MozBoxOrdinalGroup?: Property$BoxOrdinalGroup,
  MozBoxOrient?: Property$BoxOrient,
  MozBoxPack?: Property$BoxPack,
  MozBoxShadow?: Property$BoxShadow,
  MozFloatEdge?: Property$MozFloatEdge,
  MozForceBrokenImageIcon?: Property$MozForceBrokenImageIcon,
  MozOpacity?: Property$Opacity,
  MozOutline?: Property$Outline<TLength>,
  MozOutlineColor?: Property$OutlineColor,
  MozOutlineRadius?: Property$MozOutlineRadius<TLength>,
  MozOutlineRadiusBottomleft?: Property$MozOutlineRadiusBottomleft<TLength>,
  MozOutlineRadiusBottomright?: Property$MozOutlineRadiusBottomright<TLength>,
  MozOutlineRadiusTopleft?: Property$MozOutlineRadiusTopleft<TLength>,
  MozOutlineRadiusTopright?: Property$MozOutlineRadiusTopright<TLength>,
  MozOutlineStyle?: Property$OutlineStyle,
  MozOutlineWidth?: Property$OutlineWidth<TLength>,
  MozTextAlignLast?: Property$TextAlignLast,
  MozTextDecorationColor?: Property$TextDecorationColor,
  MozTextDecorationLine?: Property$TextDecorationLine,
  MozTextDecorationStyle?: Property$TextDecorationStyle,
  MozUserInput?: Property$MozUserInput,
  msImeMode?: Property$ImeMode,
  msScrollbarTrackColor?: Property$MsScrollbarTrackColor,
  OAnimation?: Property$Animation<TTime>,
  OAnimationDelay?: Property$AnimationDelay<TTime>,
  OAnimationDirection?: Property$AnimationDirection,
  OAnimationDuration?: Property$AnimationDuration<TTime>,
  OAnimationFillMode?: Property$AnimationFillMode,
  OAnimationIterationCount?: Property$AnimationIterationCount,
  OAnimationName?: Property$AnimationName,
  OAnimationPlayState?: Property$AnimationPlayState,
  OAnimationTimingFunction?: Property$AnimationTimingFunction,
  OBackgroundSize?: Property$BackgroundSize<TLength>,
  OBorderImage?: Property$BorderImage,
  OTransform?: Property$Transform,
  OTransition?: Property$Transition<TTime>,
  OTransitionDelay?: Property$TransitionDelay<TTime>,
  OTransitionDuration?: Property$TransitionDuration<TTime>,
  OTransitionProperty?: Property$TransitionProperty,
  OTransitionTimingFunction?: Property$TransitionTimingFunction,
  WebkitBoxAlign?: Property$BoxAlign,
  WebkitBoxDirection?: Property$BoxDirection,
  WebkitBoxFlex?: Property$BoxFlex,
  WebkitBoxFlexGroup?: Property$BoxFlexGroup,
  WebkitBoxLines?: Property$BoxLines,
  WebkitBoxOrdinalGroup?: Property$BoxOrdinalGroup,
  WebkitBoxOrient?: Property$BoxOrient,
  WebkitBoxPack?: Property$BoxPack,
  WebkitScrollSnapPointsX?: Property$ScrollSnapPointsX,
  WebkitScrollSnapPointsY?: Property$ScrollSnapPointsY,
|};

export type SvgProperties<TLength = string | 0, TTime = string> = {|
  alignmentBaseline?: Property$AlignmentBaseline,
  baselineShift?: Property$BaselineShift<TLength>,
  clip?: Property$Clip,
  clipPath?: Property$ClipPath,
  clipRule?: Property$ClipRule,
  color?: Property$Color,
  colorInterpolation?: Property$ColorInterpolation,
  colorRendering?: Property$ColorRendering,
  cursor?: Property$Cursor,
  direction?: Property$Direction,
  display?: Property$Display,
  dominantBaseline?: Property$DominantBaseline,
  fill?: Property$Fill,
  fillOpacity?: Property$FillOpacity,
  fillRule?: Property$FillRule,
  filter?: Property$Filter,
  floodColor?: Property$FloodColor,
  floodOpacity?: Property$FloodOpacity,
  font?: Property$Font,
  fontFamily?: Property$FontFamily,
  fontSize?: Property$FontSize<TLength>,
  fontSizeAdjust?: Property$FontSizeAdjust,
  fontStretch?: Property$FontStretch,
  fontStyle?: Property$FontStyle,
  fontVariant?: Property$FontVariant,
  fontWeight?: Property$FontWeight,
  glyphOrientationVertical?: Property$GlyphOrientationVertical,
  imageRendering?: Property$ImageRendering,
  letterSpacing?: Property$LetterSpacing<TLength>,
  lightingColor?: Property$LightingColor,
  lineHeight?: Property$LineHeight<TLength>,
  marker?: Property$Marker,
  markerEnd?: Property$MarkerEnd,
  markerMid?: Property$MarkerMid,
  markerStart?: Property$MarkerStart,
  mask?: Property$Mask<TLength>,
  opacity?: Property$Opacity,
  overflow?: Property$Overflow,
  paintOrder?: Property$PaintOrder,
  pointerEvents?: Property$PointerEvents,
  shapeRendering?: Property$ShapeRendering,
  stopColor?: Property$StopColor,
  stopOpacity?: Property$StopOpacity,
  stroke?: Property$Stroke,
  strokeDasharray?: Property$StrokeDasharray<TLength>,
  strokeDashoffset?: Property$StrokeDashoffset<TLength>,
  strokeLinecap?: Property$StrokeLinecap,
  strokeLinejoin?: Property$StrokeLinejoin,
  strokeMiterlimit?: Property$StrokeMiterlimit,
  strokeOpacity?: Property$StrokeOpacity,
  strokeWidth?: Property$StrokeWidth<TLength>,
  textAnchor?: Property$TextAnchor,
  textDecoration?: Property$TextDecoration<TLength>,
  textRendering?: Property$TextRendering,
  unicodeBidi?: Property$UnicodeBidi,
  vectorEffect?: Property$VectorEffect,
  visibility?: Property$Visibility,
  whiteSpace?: Property$WhiteSpace,
  wordSpacing?: Property$WordSpacing<TLength>,
  writingMode?: Property$WritingMode,
|};

export type Properties<TLength = string | 0, TTime = string> = {|
  ...StandardProperties<TLength, TTime>,
  ...VendorProperties<TLength, TTime>,
  ...ObsoleteProperties<TLength, TTime>,
  ...SvgProperties<TLength, TTime>,
|};

export type StandardLonghandPropertiesHyphen<TLength = string | 0, TTime = string> = {|
  "align-content"?: Property$AlignContent,
  "align-items"?: Property$AlignItems,
  "align-self"?: Property$AlignSelf,
  "align-tracks"?: Property$AlignTracks,
  "animation-delay"?: Property$AnimationDelay<TTime>,
  "animation-direction"?: Property$AnimationDirection,
  "animation-duration"?: Property$AnimationDuration<TTime>,
  "animation-fill-mode"?: Property$AnimationFillMode,
  "animation-iteration-count"?: Property$AnimationIterationCount,
  "animation-name"?: Property$AnimationName,
  "animation-play-state"?: Property$AnimationPlayState,
  "animation-timing-function"?: Property$AnimationTimingFunction,
  appearance?: Property$Appearance,
  "aspect-ratio"?: Property$AspectRatio,
  "backdrop-filter"?: Property$BackdropFilter,
  "backface-visibility"?: Property$BackfaceVisibility,
  "background-attachment"?: Property$BackgroundAttachment,
  "background-blend-mode"?: Property$BackgroundBlendMode,
  "background-clip"?: Property$BackgroundClip,
  "background-color"?: Property$BackgroundColor,
  "background-image"?: Property$BackgroundImage,
  "background-origin"?: Property$BackgroundOrigin,
  "background-position"?: Property$BackgroundPosition<TLength>,
  "background-position-x"?: Property$BackgroundPositionX<TLength>,
  "background-position-y"?: Property$BackgroundPositionY<TLength>,
  "background-repeat"?: Property$BackgroundRepeat,
  "background-size"?: Property$BackgroundSize<TLength>,
  "block-overflow"?: Property$BlockOverflow,
  "block-size"?: Property$BlockSize<TLength>,
  "border-block-color"?: Property$BorderBlockColor,
  "border-block-end-color"?: Property$BorderBlockEndColor,
  "border-block-end-style"?: Property$BorderBlockEndStyle,
  "border-block-end-width"?: Property$BorderBlockEndWidth<TLength>,
  "border-block-start-color"?: Property$BorderBlockStartColor,
  "border-block-start-style"?: Property$BorderBlockStartStyle,
  "border-block-start-width"?: Property$BorderBlockStartWidth<TLength>,
  "border-block-style"?: Property$BorderBlockStyle,
  "border-block-width"?: Property$BorderBlockWidth<TLength>,
  "border-bottom-color"?: Property$BorderBottomColor,
  "border-bottom-left-radius"?: Property$BorderBottomLeftRadius<TLength>,
  "border-bottom-right-radius"?: Property$BorderBottomRightRadius<TLength>,
  "border-bottom-style"?: Property$BorderBottomStyle,
  "border-bottom-width"?: Property$BorderBottomWidth<TLength>,
  "border-collapse"?: Property$BorderCollapse,
  "border-end-end-radius"?: Property$BorderEndEndRadius<TLength>,
  "border-end-start-radius"?: Property$BorderEndStartRadius<TLength>,
  "border-image-outset"?: Property$BorderImageOutset<TLength>,
  "border-image-repeat"?: Property$BorderImageRepeat,
  "border-image-slice"?: Property$BorderImageSlice,
  "border-image-source"?: Property$BorderImageSource,
  "border-image-width"?: Property$BorderImageWidth<TLength>,
  "border-inline-color"?: Property$BorderInlineColor,
  "border-inline-end-color"?: Property$BorderInlineEndColor,
  "border-inline-end-style"?: Property$BorderInlineEndStyle,
  "border-inline-end-width"?: Property$BorderInlineEndWidth<TLength>,
  "border-inline-start-color"?: Property$BorderInlineStartColor,
  "border-inline-start-style"?: Property$BorderInlineStartStyle,
  "border-inline-start-width"?: Property$BorderInlineStartWidth<TLength>,
  "border-inline-style"?: Property$BorderInlineStyle,
  "border-inline-width"?: Property$BorderInlineWidth<TLength>,
  "border-left-color"?: Property$BorderLeftColor,
  "border-left-style"?: Property$BorderLeftStyle,
  "border-left-width"?: Property$BorderLeftWidth<TLength>,
  "border-right-color"?: Property$BorderRightColor,
  "border-right-style"?: Property$BorderRightStyle,
  "border-right-width"?: Property$BorderRightWidth<TLength>,
  "border-spacing"?: Property$BorderSpacing<TLength>,
  "border-start-end-radius"?: Property$BorderStartEndRadius<TLength>,
  "border-start-start-radius"?: Property$BorderStartStartRadius<TLength>,
  "border-top-color"?: Property$BorderTopColor,
  "border-top-left-radius"?: Property$BorderTopLeftRadius<TLength>,
  "border-top-right-radius"?: Property$BorderTopRightRadius<TLength>,
  "border-top-style"?: Property$BorderTopStyle,
  "border-top-width"?: Property$BorderTopWidth<TLength>,
  bottom?: Property$Bottom<TLength>,
  "box-decoration-break"?: Property$BoxDecorationBreak,
  "box-shadow"?: Property$BoxShadow,
  "box-sizing"?: Property$BoxSizing,
  "break-after"?: Property$BreakAfter,
  "break-before"?: Property$BreakBefore,
  "break-inside"?: Property$BreakInside,
  "caption-side"?: Property$CaptionSide,
  "caret-color"?: Property$CaretColor,
  clear?: Property$Clear,
  "clip-path"?: Property$ClipPath,
  color?: Property$Color,
  "color-adjust"?: Property$ColorAdjust,
  "column-count"?: Property$ColumnCount,
  "column-fill"?: Property$ColumnFill,
  "column-gap"?: Property$ColumnGap<TLength>,
  "column-rule-color"?: Property$ColumnRuleColor,
  "column-rule-style"?: Property$ColumnRuleStyle,
  "column-rule-width"?: Property$ColumnRuleWidth<TLength>,
  "column-span"?: Property$ColumnSpan,
  "column-width"?: Property$ColumnWidth<TLength>,
  contain?: Property$Contain,
  content?: Property$Content,
  "content-visibility"?: Property$ContentVisibility,
  "counter-increment"?: Property$CounterIncrement,
  "counter-reset"?: Property$CounterReset,
  "counter-set"?: Property$CounterSet,
  cursor?: Property$Cursor,
  direction?: Property$Direction,
  display?: Property$Display,
  "empty-cells"?: Property$EmptyCells,
  filter?: Property$Filter,
  "flex-basis"?: Property$FlexBasis<TLength>,
  "flex-direction"?: Property$FlexDirection,
  "flex-grow"?: Property$FlexGrow,
  "flex-shrink"?: Property$FlexShrink,
  "flex-wrap"?: Property$FlexWrap,
  float?: Property$Float,
  "font-family"?: Property$FontFamily,
  "font-feature-settings"?: Property$FontFeatureSettings,
  "font-kerning"?: Property$FontKerning,
  "font-language-override"?: Property$FontLanguageOverride,
  "font-optical-sizing"?: Property$FontOpticalSizing,
  "font-size"?: Property$FontSize<TLength>,
  "font-size-adjust"?: Property$FontSizeAdjust,
  "font-smooth"?: Property$FontSmooth<TLength>,
  "font-stretch"?: Property$FontStretch,
  "font-style"?: Property$FontStyle,
  "font-synthesis"?: Property$FontSynthesis,
  "font-variant"?: Property$FontVariant,
  "font-variant-caps"?: Property$FontVariantCaps,
  "font-variant-east-asian"?: Property$FontVariantEastAsian,
  "font-variant-ligatures"?: Property$FontVariantLigatures,
  "font-variant-numeric"?: Property$FontVariantNumeric,
  "font-variant-position"?: Property$FontVariantPosition,
  "font-variation-settings"?: Property$FontVariationSettings,
  "font-weight"?: Property$FontWeight,
  "forced-color-adjust"?: Property$ForcedColorAdjust,
  "grid-auto-columns"?: Property$GridAutoColumns<TLength>,
  "grid-auto-flow"?: Property$GridAutoFlow,
  "grid-auto-rows"?: Property$GridAutoRows<TLength>,
  "grid-column-end"?: Property$GridColumnEnd,
  "grid-column-start"?: Property$GridColumnStart,
  "grid-row-end"?: Property$GridRowEnd,
  "grid-row-start"?: Property$GridRowStart,
  "grid-template-areas"?: Property$GridTemplateAreas,
  "grid-template-columns"?: Property$GridTemplateColumns<TLength>,
  "grid-template-rows"?: Property$GridTemplateRows<TLength>,
  "hanging-punctuation"?: Property$HangingPunctuation,
  height?: Property$Height<TLength>,
  hyphens?: Property$Hyphens,
  "image-orientation"?: Property$ImageOrientation,
  "image-rendering"?: Property$ImageRendering,
  "image-resolution"?: Property$ImageResolution,
  "initial-letter"?: Property$InitialLetter,
  "inline-size"?: Property$InlineSize<TLength>,
  inset?: Property$Inset<TLength>,
  "inset-block"?: Property$InsetBlock<TLength>,
  "inset-block-end"?: Property$InsetBlockEnd<TLength>,
  "inset-block-start"?: Property$InsetBlockStart<TLength>,
  "inset-inline"?: Property$InsetInline<TLength>,
  "inset-inline-end"?: Property$InsetInlineEnd<TLength>,
  "inset-inline-start"?: Property$InsetInlineStart<TLength>,
  isolation?: Property$Isolation,
  "justify-content"?: Property$JustifyContent,
  "justify-items"?: Property$JustifyItems,
  "justify-self"?: Property$JustifySelf,
  "justify-tracks"?: Property$JustifyTracks,
  left?: Property$Left<TLength>,
  "letter-spacing"?: Property$LetterSpacing<TLength>,
  "line-break"?: Property$LineBreak,
  "line-height"?: Property$LineHeight<TLength>,
  "line-height-step"?: Property$LineHeightStep<TLength>,
  "list-style-image"?: Property$ListStyleImage,
  "list-style-position"?: Property$ListStylePosition,
  "list-style-type"?: Property$ListStyleType,
  "margin-block"?: Property$MarginBlock<TLength>,
  "margin-block-end"?: Property$MarginBlockEnd<TLength>,
  "margin-block-start"?: Property$MarginBlockStart<TLength>,
  "margin-bottom"?: Property$MarginBottom<TLength>,
  "margin-inline"?: Property$MarginInline<TLength>,
  "margin-inline-end"?: Property$MarginInlineEnd<TLength>,
  "margin-inline-start"?: Property$MarginInlineStart<TLength>,
  "margin-left"?: Property$MarginLeft<TLength>,
  "margin-right"?: Property$MarginRight<TLength>,
  "margin-top"?: Property$MarginTop<TLength>,
  "mask-border-mode"?: Property$MaskBorderMode,
  "mask-border-outset"?: Property$MaskBorderOutset<TLength>,
  "mask-border-repeat"?: Property$MaskBorderRepeat,
  "mask-border-slice"?: Property$MaskBorderSlice,
  "mask-border-source"?: Property$MaskBorderSource,
  "mask-border-width"?: Property$MaskBorderWidth<TLength>,
  "mask-clip"?: Property$MaskClip,
  "mask-composite"?: Property$MaskComposite,
  "mask-image"?: Property$MaskImage,
  "mask-mode"?: Property$MaskMode,
  "mask-origin"?: Property$MaskOrigin,
  "mask-position"?: Property$MaskPosition<TLength>,
  "mask-repeat"?: Property$MaskRepeat,
  "mask-size"?: Property$MaskSize<TLength>,
  "mask-type"?: Property$MaskType,
  "math-style"?: Property$MathStyle,
  "max-block-size"?: Property$MaxBlockSize<TLength>,
  "max-height"?: Property$MaxHeight<TLength>,
  "max-inline-size"?: Property$MaxInlineSize<TLength>,
  "max-lines"?: Property$MaxLines,
  "max-width"?: Property$MaxWidth<TLength>,
  "min-block-size"?: Property$MinBlockSize<TLength>,
  "min-height"?: Property$MinHeight<TLength>,
  "min-inline-size"?: Property$MinInlineSize<TLength>,
  "min-width"?: Property$MinWidth<TLength>,
  "mix-blend-mode"?: Property$MixBlendMode,
  "motion-distance"?: Property$OffsetDistance<TLength>,
  "motion-path"?: Property$OffsetPath,
  "motion-rotation"?: Property$OffsetRotate,
  "object-fit"?: Property$ObjectFit,
  "object-position"?: Property$ObjectPosition<TLength>,
  "offset-anchor"?: Property$OffsetAnchor<TLength>,
  "offset-distance"?: Property$OffsetDistance<TLength>,
  "offset-path"?: Property$OffsetPath,
  "offset-rotate"?: Property$OffsetRotate,
  "offset-rotation"?: Property$OffsetRotate,
  opacity?: Property$Opacity,
  order?: Property$Order,
  orphans?: Property$Orphans,
  "outline-color"?: Property$OutlineColor,
  "outline-offset"?: Property$OutlineOffset<TLength>,
  "outline-style"?: Property$OutlineStyle,
  "outline-width"?: Property$OutlineWidth<TLength>,
  "overflow-anchor"?: Property$OverflowAnchor,
  "overflow-block"?: Property$OverflowBlock,
  "overflow-clip-box"?: Property$OverflowClipBox,
  "overflow-inline"?: Property$OverflowInline,
  "overflow-wrap"?: Property$OverflowWrap,
  "overflow-x"?: Property$OverflowX,
  "overflow-y"?: Property$OverflowY,
  "overscroll-behavior"?: Property$OverscrollBehavior,
  "overscroll-behavior-block"?: Property$OverscrollBehaviorBlock,
  "overscroll-behavior-inline"?: Property$OverscrollBehaviorInline,
  "overscroll-behavior-x"?: Property$OverscrollBehaviorX,
  "overscroll-behavior-y"?: Property$OverscrollBehaviorY,
  "padding-block"?: Property$PaddingBlock<TLength>,
  "padding-block-end"?: Property$PaddingBlockEnd<TLength>,
  "padding-block-start"?: Property$PaddingBlockStart<TLength>,
  "padding-bottom"?: Property$PaddingBottom<TLength>,
  "padding-inline"?: Property$PaddingInline<TLength>,
  "padding-inline-end"?: Property$PaddingInlineEnd<TLength>,
  "padding-inline-start"?: Property$PaddingInlineStart<TLength>,
  "padding-left"?: Property$PaddingLeft<TLength>,
  "padding-right"?: Property$PaddingRight<TLength>,
  "padding-top"?: Property$PaddingTop<TLength>,
  "page-break-after"?: Property$PageBreakAfter,
  "page-break-before"?: Property$PageBreakBefore,
  "page-break-inside"?: Property$PageBreakInside,
  "paint-order"?: Property$PaintOrder,
  perspective?: Property$Perspective<TLength>,
  "perspective-origin"?: Property$PerspectiveOrigin<TLength>,
  "place-content"?: Property$PlaceContent,
  "pointer-events"?: Property$PointerEvents,
  position?: Property$Position,
  quotes?: Property$Quotes,
  resize?: Property$Resize,
  right?: Property$Right<TLength>,
  rotate?: Property$Rotate,
  "row-gap"?: Property$RowGap<TLength>,
  "ruby-align"?: Property$RubyAlign,
  "ruby-merge"?: Property$RubyMerge,
  "ruby-position"?: Property$RubyPosition,
  scale?: Property$Scale,
  "scroll-behavior"?: Property$ScrollBehavior,
  "scroll-margin"?: Property$ScrollMargin<TLength>,
  "scroll-margin-block"?: Property$ScrollMarginBlock<TLength>,
  "scroll-margin-block-end"?: Property$ScrollMarginBlockEnd<TLength>,
  "scroll-margin-block-start"?: Property$ScrollMarginBlockStart<TLength>,
  "scroll-margin-bottom"?: Property$ScrollMarginBottom<TLength>,
  "scroll-margin-inline"?: Property$ScrollMarginInline<TLength>,
  "scroll-margin-inline-end"?: Property$ScrollMarginInlineEnd<TLength>,
  "scroll-margin-inline-start"?: Property$ScrollMarginInlineStart<TLength>,
  "scroll-margin-left"?: Property$ScrollMarginLeft<TLength>,
  "scroll-margin-right"?: Property$ScrollMarginRight<TLength>,
  "scroll-margin-top"?: Property$ScrollMarginTop<TLength>,
  "scroll-padding"?: Property$ScrollPadding<TLength>,
  "scroll-padding-block"?: Property$ScrollPaddingBlock<TLength>,
  "scroll-padding-block-end"?: Property$ScrollPaddingBlockEnd<TLength>,
  "scroll-padding-block-start"?: Property$ScrollPaddingBlockStart<TLength>,
  "scroll-padding-bottom"?: Property$ScrollPaddingBottom<TLength>,
  "scroll-padding-inline"?: Property$ScrollPaddingInline<TLength>,
  "scroll-padding-inline-end"?: Property$ScrollPaddingInlineEnd<TLength>,
  "scroll-padding-inline-start"?: Property$ScrollPaddingInlineStart<TLength>,
  "scroll-padding-left"?: Property$ScrollPaddingLeft<TLength>,
  "scroll-padding-right"?: Property$ScrollPaddingRight<TLength>,
  "scroll-padding-top"?: Property$ScrollPaddingTop<TLength>,
  "scroll-snap-align"?: Property$ScrollSnapAlign,
  "scroll-snap-margin"?: Property$ScrollMargin<TLength>,
  "scroll-snap-margin-bottom"?: Property$ScrollMarginBottom<TLength>,
  "scroll-snap-margin-left"?: Property$ScrollMarginLeft<TLength>,
  "scroll-snap-margin-right"?: Property$ScrollMarginRight<TLength>,
  "scroll-snap-margin-top"?: Property$ScrollMarginTop<TLength>,
  "scroll-snap-stop"?: Property$ScrollSnapStop,
  "scroll-snap-type"?: Property$ScrollSnapType,
  "scrollbar-color"?: Property$ScrollbarColor,
  "scrollbar-gutter"?: Property$ScrollbarGutter,
  "scrollbar-width"?: Property$ScrollbarWidth,
  "shape-image-threshold"?: Property$ShapeImageThreshold,
  "shape-margin"?: Property$ShapeMargin<TLength>,
  "shape-outside"?: Property$ShapeOutside,
  "tab-size"?: Property$TabSize<TLength>,
  "table-layout"?: Property$TableLayout,
  "text-align"?: Property$TextAlign,
  "text-align-last"?: Property$TextAlignLast,
  "text-combine-upright"?: Property$TextCombineUpright,
  "text-decoration-color"?: Property$TextDecorationColor,
  "text-decoration-line"?: Property$TextDecorationLine,
  "text-decoration-skip"?: Property$TextDecorationSkip,
  "text-decoration-skip-ink"?: Property$TextDecorationSkipInk,
  "text-decoration-style"?: Property$TextDecorationStyle,
  "text-decoration-thickness"?: Property$TextDecorationThickness<TLength>,
  "text-decoration-width"?: Property$TextDecorationThickness<TLength>,
  "text-emphasis-color"?: Property$TextEmphasisColor,
  "text-emphasis-position"?: Property$TextEmphasisPosition,
  "text-emphasis-style"?: Property$TextEmphasisStyle,
  "text-indent"?: Property$TextIndent<TLength>,
  "text-justify"?: Property$TextJustify,
  "text-orientation"?: Property$TextOrientation,
  "text-overflow"?: Property$TextOverflow,
  "text-rendering"?: Property$TextRendering,
  "text-shadow"?: Property$TextShadow,
  "text-size-adjust"?: Property$TextSizeAdjust,
  "text-transform"?: Property$TextTransform,
  "text-underline-offset"?: Property$TextUnderlineOffset<TLength>,
  "text-underline-position"?: Property$TextUnderlinePosition,
  top?: Property$Top<TLength>,
  "touch-action"?: Property$TouchAction,
  transform?: Property$Transform,
  "transform-box"?: Property$TransformBox,
  "transform-origin"?: Property$TransformOrigin<TLength>,
  "transform-style"?: Property$TransformStyle,
  "transition-delay"?: Property$TransitionDelay<TTime>,
  "transition-duration"?: Property$TransitionDuration<TTime>,
  "transition-property"?: Property$TransitionProperty,
  "transition-timing-function"?: Property$TransitionTimingFunction,
  translate?: Property$Translate<TLength>,
  "unicode-bidi"?: Property$UnicodeBidi,
  "user-select"?: Property$UserSelect,
  "vertical-align"?: Property$VerticalAlign<TLength>,
  visibility?: Property$Visibility,
  "white-space"?: Property$WhiteSpace,
  widows?: Property$Widows,
  width?: Property$Width<TLength>,
  "will-change"?: Property$WillChange,
  "word-break"?: Property$WordBreak,
  "word-spacing"?: Property$WordSpacing<TLength>,
  "word-wrap"?: Property$WordWrap,
  "writing-mode"?: Property$WritingMode,
  "z-index"?: Property$ZIndex,
  zoom?: Property$Zoom,
|};

export type StandardShorthandPropertiesHyphen<TLength = string | 0, TTime = string> = {|
  all?: Property$All,
  animation?: Property$Animation<TTime>,
  background?: Property$Background<TLength>,
  border?: Property$Border<TLength>,
  "border-block"?: Property$BorderBlock<TLength>,
  "border-block-end"?: Property$BorderBlockEnd<TLength>,
  "border-block-start"?: Property$BorderBlockStart<TLength>,
  "border-bottom"?: Property$BorderBottom<TLength>,
  "border-color"?: Property$BorderColor,
  "border-image"?: Property$BorderImage,
  "border-inline"?: Property$BorderInline<TLength>,
  "border-inline-end"?: Property$BorderInlineEnd<TLength>,
  "border-inline-start"?: Property$BorderInlineStart<TLength>,
  "border-left"?: Property$BorderLeft<TLength>,
  "border-radius"?: Property$BorderRadius<TLength>,
  "border-right"?: Property$BorderRight<TLength>,
  "border-style"?: Property$BorderStyle,
  "border-top"?: Property$BorderTop<TLength>,
  "border-width"?: Property$BorderWidth<TLength>,
  "column-rule"?: Property$ColumnRule<TLength>,
  columns?: Property$Columns<TLength>,
  flex?: Property$Flex<TLength>,
  "flex-flow"?: Property$FlexFlow,
  font?: Property$Font,
  gap?: Property$Gap<TLength>,
  grid?: Property$Grid,
  "grid-area"?: Property$GridArea,
  "grid-column"?: Property$GridColumn,
  "grid-row"?: Property$GridRow,
  "grid-template"?: Property$GridTemplate,
  "line-clamp"?: Property$LineClamp,
  "list-style"?: Property$ListStyle,
  margin?: Property$Margin<TLength>,
  mask?: Property$Mask<TLength>,
  "mask-border"?: Property$MaskBorder,
  motion?: Property$Offset<TLength>,
  offset?: Property$Offset<TLength>,
  outline?: Property$Outline<TLength>,
  overflow?: Property$Overflow,
  padding?: Property$Padding<TLength>,
  "place-items"?: Property$PlaceItems,
  "place-self"?: Property$PlaceSelf,
  "text-decoration"?: Property$TextDecoration<TLength>,
  "text-emphasis"?: Property$TextEmphasis,
  transition?: Property$Transition<TTime>,
|};

export type StandardPropertiesHyphen<TLength = string | 0, TTime = string> = {|
  ...StandardLonghandPropertiesHyphen<TLength, TTime>,
  ...StandardShorthandPropertiesHyphen<TLength, TTime>,
|};

export type VendorLonghandPropertiesHyphen<TLength = string | 0, TTime = string> = {|
  "-moz-animation-delay"?: Property$AnimationDelay<TTime>,
  "-moz-animation-direction"?: Property$AnimationDirection,
  "-moz-animation-duration"?: Property$AnimationDuration<TTime>,
  "-moz-animation-fill-mode"?: Property$AnimationFillMode,
  "-moz-animation-iteration-count"?: Property$AnimationIterationCount,
  "-moz-animation-name"?: Property$AnimationName,
  "-moz-animation-play-state"?: Property$AnimationPlayState,
  "-moz-animation-timing-function"?: Property$AnimationTimingFunction,
  "-moz-appearance"?: Property$MozAppearance,
  "-moz-backface-visibility"?: Property$BackfaceVisibility,
  "-moz-border-bottom-colors"?: Property$MozBorderBottomColors,
  "-moz-border-end-color"?: Property$BorderInlineEndColor,
  "-moz-border-end-style"?: Property$BorderInlineEndStyle,
  "-moz-border-end-width"?: Property$BorderInlineEndWidth<TLength>,
  "-moz-border-left-colors"?: Property$MozBorderLeftColors,
  "-moz-border-right-colors"?: Property$MozBorderRightColors,
  "-moz-border-start-color"?: Property$BorderInlineStartColor,
  "-moz-border-start-style"?: Property$BorderInlineStartStyle,
  "-moz-border-top-colors"?: Property$MozBorderTopColors,
  "-moz-box-sizing"?: Property$BoxSizing,
  "-moz-column-count"?: Property$ColumnCount,
  "-moz-column-fill"?: Property$ColumnFill,
  "-moz-column-gap"?: Property$ColumnGap<TLength>,
  "-moz-column-rule-color"?: Property$ColumnRuleColor,
  "-moz-column-rule-style"?: Property$ColumnRuleStyle,
  "-moz-column-rule-width"?: Property$ColumnRuleWidth<TLength>,
  "-moz-column-width"?: Property$ColumnWidth<TLength>,
  "-moz-context-properties"?: Property$MozContextProperties,
  "-moz-font-feature-settings"?: Property$FontFeatureSettings,
  "-moz-font-language-override"?: Property$FontLanguageOverride,
  "-moz-hyphens"?: Property$Hyphens,
  "-moz-image-region"?: Property$MozImageRegion,
  "-moz-margin-end"?: Property$MarginInlineEnd<TLength>,
  "-moz-margin-start"?: Property$MarginInlineStart<TLength>,
  "-moz-orient"?: Property$MozOrient,
  "-moz-osx-font-smoothing"?: Property$FontSmooth<TLength>,
  "-moz-padding-end"?: Property$PaddingInlineEnd<TLength>,
  "-moz-padding-start"?: Property$PaddingInlineStart<TLength>,
  "-moz-perspective"?: Property$Perspective<TLength>,
  "-moz-perspective-origin"?: Property$PerspectiveOrigin<TLength>,
  "-moz-stack-sizing"?: Property$MozStackSizing,
  "-moz-tab-size"?: Property$TabSize<TLength>,
  "-moz-text-blink"?: Property$MozTextBlink,
  "-moz-text-size-adjust"?: Property$TextSizeAdjust,
  "-moz-transform-origin"?: Property$TransformOrigin<TLength>,
  "-moz-transform-style"?: Property$TransformStyle,
  "-moz-transition-delay"?: Property$TransitionDelay<TTime>,
  "-moz-transition-duration"?: Property$TransitionDuration<TTime>,
  "-moz-transition-property"?: Property$TransitionProperty,
  "-moz-transition-timing-function"?: Property$TransitionTimingFunction,
  "-moz-user-focus"?: Property$MozUserFocus,
  "-moz-user-modify"?: Property$MozUserModify,
  "-moz-user-select"?: Property$UserSelect,
  "-moz-window-dragging"?: Property$MozWindowDragging,
  "-moz-window-shadow"?: Property$MozWindowShadow,
  "-ms-accelerator"?: Property$MsAccelerator,
  "-ms-align-self"?: Property$AlignSelf,
  "-ms-block-progression"?: Property$MsBlockProgression,
  "-ms-content-zoom-chaining"?: Property$MsContentZoomChaining,
  "-ms-content-zoom-limit-max"?: Property$MsContentZoomLimitMax,
  "-ms-content-zoom-limit-min"?: Property$MsContentZoomLimitMin,
  "-ms-content-zoom-snap-points"?: Property$MsContentZoomSnapPoints,
  "-ms-content-zoom-snap-type"?: Property$MsContentZoomSnapType,
  "-ms-content-zooming"?: Property$MsContentZooming,
  "-ms-filter"?: Property$MsFilter,
  "-ms-flex-direction"?: Property$FlexDirection,
  "-ms-flex-positive"?: Property$FlexGrow,
  "-ms-flow-from"?: Property$MsFlowFrom,
  "-ms-flow-into"?: Property$MsFlowInto,
  "-ms-grid-columns"?: Property$MsGridColumns<TLength>,
  "-ms-grid-rows"?: Property$MsGridRows<TLength>,
  "-ms-high-contrast-adjust"?: Property$MsHighContrastAdjust,
  "-ms-hyphenate-limit-chars"?: Property$MsHyphenateLimitChars,
  "-ms-hyphenate-limit-lines"?: Property$MsHyphenateLimitLines,
  "-ms-hyphenate-limit-zone"?: Property$MsHyphenateLimitZone<TLength>,
  "-ms-hyphens"?: Property$Hyphens,
  "-ms-ime-align"?: Property$MsImeAlign,
  "-ms-justify-self"?: Property$JustifySelf,
  "-ms-line-break"?: Property$LineBreak,
  "-ms-order"?: Property$Order,
  "-ms-overflow-style"?: Property$MsOverflowStyle,
  "-ms-overflow-x"?: Property$OverflowX,
  "-ms-overflow-y"?: Property$OverflowY,
  "-ms-scroll-chaining"?: Property$MsScrollChaining,
  "-ms-scroll-limit-x-max"?: Property$MsScrollLimitXMax<TLength>,
  "-ms-scroll-limit-x-min"?: Property$MsScrollLimitXMin<TLength>,
  "-ms-scroll-limit-y-max"?: Property$MsScrollLimitYMax<TLength>,
  "-ms-scroll-limit-y-min"?: Property$MsScrollLimitYMin<TLength>,
  "-ms-scroll-rails"?: Property$MsScrollRails,
  "-ms-scroll-snap-points-x"?: Property$MsScrollSnapPointsX,
  "-ms-scroll-snap-points-y"?: Property$MsScrollSnapPointsY,
  "-ms-scroll-snap-type"?: Property$MsScrollSnapType,
  "-ms-scroll-translation"?: Property$MsScrollTranslation,
  "-ms-scrollbar-3dlight-color"?: Property$MsScrollbar3dlightColor,
  "-ms-scrollbar-arrow-color"?: Property$MsScrollbarArrowColor,
  "-ms-scrollbar-base-color"?: Property$MsScrollbarBaseColor,
  "-ms-scrollbar-darkshadow-color"?: Property$MsScrollbarDarkshadowColor,
  "-ms-scrollbar-face-color"?: Property$MsScrollbarFaceColor,
  "-ms-scrollbar-highlight-color"?: Property$MsScrollbarHighlightColor,
  "-ms-scrollbar-shadow-color"?: Property$MsScrollbarShadowColor,
  "-ms-text-autospace"?: Property$MsTextAutospace,
  "-ms-text-combine-horizontal"?: Property$TextCombineUpright,
  "-ms-text-overflow"?: Property$TextOverflow,
  "-ms-touch-action"?: Property$TouchAction,
  "-ms-touch-select"?: Property$MsTouchSelect,
  "-ms-transform"?: Property$Transform,
  "-ms-transform-origin"?: Property$TransformOrigin<TLength>,
  "-ms-transition-delay"?: Property$TransitionDelay<TTime>,
  "-ms-transition-duration"?: Property$TransitionDuration<TTime>,
  "-ms-transition-property"?: Property$TransitionProperty,
  "-ms-transition-timing-function"?: Property$TransitionTimingFunction,
  "-ms-user-select"?: Property$MsUserSelect,
  "-ms-word-break"?: Property$WordBreak,
  "-ms-wrap-flow"?: Property$MsWrapFlow,
  "-ms-wrap-margin"?: Property$MsWrapMargin<TLength>,
  "-ms-wrap-through"?: Property$MsWrapThrough,
  "-ms-writing-mode"?: Property$WritingMode,
  "-o-object-fit"?: Property$ObjectFit,
  "-o-object-position"?: Property$ObjectPosition<TLength>,
  "-o-tab-size"?: Property$TabSize<TLength>,
  "-o-text-overflow"?: Property$TextOverflow,
  "-o-transform-origin"?: Property$TransformOrigin<TLength>,
  "-webkit-align-content"?: Property$AlignContent,
  "-webkit-align-items"?: Property$AlignItems,
  "-webkit-align-self"?: Property$AlignSelf,
  "-webkit-animation-delay"?: Property$AnimationDelay<TTime>,
  "-webkit-animation-direction"?: Property$AnimationDirection,
  "-webkit-animation-duration"?: Property$AnimationDuration<TTime>,
  "-webkit-animation-fill-mode"?: Property$AnimationFillMode,
  "-webkit-animation-iteration-count"?: Property$AnimationIterationCount,
  "-webkit-animation-name"?: Property$AnimationName,
  "-webkit-animation-play-state"?: Property$AnimationPlayState,
  "-webkit-animation-timing-function"?: Property$AnimationTimingFunction,
  "-webkit-appearance"?: Property$WebkitAppearance,
  "-webkit-backdrop-filter"?: Property$BackdropFilter,
  "-webkit-backface-visibility"?: Property$BackfaceVisibility,
  "-webkit-background-clip"?: Property$BackgroundClip,
  "-webkit-background-origin"?: Property$BackgroundOrigin,
  "-webkit-background-size"?: Property$BackgroundSize<TLength>,
  "-webkit-border-before-color"?: Property$WebkitBorderBeforeColor,
  "-webkit-border-before-style"?: Property$WebkitBorderBeforeStyle,
  "-webkit-border-before-width"?: Property$WebkitBorderBeforeWidth<TLength>,
  "-webkit-border-bottom-left-radius"?: Property$BorderBottomLeftRadius<TLength>,
  "-webkit-border-bottom-right-radius"?: Property$BorderBottomRightRadius<TLength>,
  "-webkit-border-image-slice"?: Property$BorderImageSlice,
  "-webkit-border-top-left-radius"?: Property$BorderTopLeftRadius<TLength>,
  "-webkit-border-top-right-radius"?: Property$BorderTopRightRadius<TLength>,
  "-webkit-box-decoration-break"?: Property$BoxDecorationBreak,
  "-webkit-box-reflect"?: Property$WebkitBoxReflect<TLength>,
  "-webkit-box-shadow"?: Property$BoxShadow,
  "-webkit-box-sizing"?: Property$BoxSizing,
  "-webkit-clip-path"?: Property$ClipPath,
  "-webkit-column-count"?: Property$ColumnCount,
  "-webkit-column-fill"?: Property$ColumnFill,
  "-webkit-column-gap"?: Property$ColumnGap<TLength>,
  "-webkit-column-rule-color"?: Property$ColumnRuleColor,
  "-webkit-column-rule-style"?: Property$ColumnRuleStyle,
  "-webkit-column-rule-width"?: Property$ColumnRuleWidth<TLength>,
  "-webkit-column-span"?: Property$ColumnSpan,
  "-webkit-column-width"?: Property$ColumnWidth<TLength>,
  "-webkit-filter"?: Property$Filter,
  "-webkit-flex-basis"?: Property$FlexBasis<TLength>,
  "-webkit-flex-direction"?: Property$FlexDirection,
  "-webkit-flex-grow"?: Property$FlexGrow,
  "-webkit-flex-shrink"?: Property$FlexShrink,
  "-webkit-flex-wrap"?: Property$FlexWrap,
  "-webkit-font-feature-settings"?: Property$FontFeatureSettings,
  "-webkit-font-kerning"?: Property$FontKerning,
  "-webkit-font-smoothing"?: Property$FontSmooth<TLength>,
  "-webkit-font-variant-ligatures"?: Property$FontVariantLigatures,
  "-webkit-hyphens"?: Property$Hyphens,
  "-webkit-justify-content"?: Property$JustifyContent,
  "-webkit-line-break"?: Property$LineBreak,
  "-webkit-line-clamp"?: Property$WebkitLineClamp,
  "-webkit-margin-end"?: Property$MarginInlineEnd<TLength>,
  "-webkit-margin-start"?: Property$MarginInlineStart<TLength>,
  "-webkit-mask-attachment"?: Property$WebkitMaskAttachment,
  "-webkit-mask-clip"?: Property$WebkitMaskClip,
  "-webkit-mask-composite"?: Property$WebkitMaskComposite,
  "-webkit-mask-image"?: Property$WebkitMaskImage,
  "-webkit-mask-origin"?: Property$WebkitMaskOrigin,
  "-webkit-mask-position"?: Property$WebkitMaskPosition<TLength>,
  "-webkit-mask-position-x"?: Property$WebkitMaskPositionX<TLength>,
  "-webkit-mask-position-y"?: Property$WebkitMaskPositionY<TLength>,
  "-webkit-mask-repeat"?: Property$WebkitMaskRepeat,
  "-webkit-mask-repeat-x"?: Property$WebkitMaskRepeatX,
  "-webkit-mask-repeat-y"?: Property$WebkitMaskRepeatY,
  "-webkit-mask-size"?: Property$WebkitMaskSize<TLength>,
  "-webkit-max-inline-size"?: Property$MaxInlineSize<TLength>,
  "-webkit-order"?: Property$Order,
  "-webkit-overflow-scrolling"?: Property$WebkitOverflowScrolling,
  "-webkit-padding-end"?: Property$PaddingInlineEnd<TLength>,
  "-webkit-padding-start"?: Property$PaddingInlineStart<TLength>,
  "-webkit-perspective"?: Property$Perspective<TLength>,
  "-webkit-perspective-origin"?: Property$PerspectiveOrigin<TLength>,
  "-webkit-print-color-adjust"?: Property$ColorAdjust,
  "-webkit-ruby-position"?: Property$RubyPosition,
  "-webkit-scroll-snap-type"?: Property$ScrollSnapType,
  "-webkit-shape-margin"?: Property$ShapeMargin<TLength>,
  "-webkit-tap-highlight-color"?: Property$WebkitTapHighlightColor,
  "-webkit-text-combine"?: Property$TextCombineUpright,
  "-webkit-text-decoration-color"?: Property$TextDecorationColor,
  "-webkit-text-decoration-line"?: Property$TextDecorationLine,
  "-webkit-text-decoration-skip"?: Property$TextDecorationSkip,
  "-webkit-text-decoration-style"?: Property$TextDecorationStyle,
  "-webkit-text-emphasis-color"?: Property$TextEmphasisColor,
  "-webkit-text-emphasis-position"?: Property$TextEmphasisPosition,
  "-webkit-text-emphasis-style"?: Property$TextEmphasisStyle,
  "-webkit-text-fill-color"?: Property$WebkitTextFillColor,
  "-webkit-text-orientation"?: Property$TextOrientation,
  "-webkit-text-size-adjust"?: Property$TextSizeAdjust,
  "-webkit-text-stroke-color"?: Property$WebkitTextStrokeColor,
  "-webkit-text-stroke-width"?: Property$WebkitTextStrokeWidth<TLength>,
  "-webkit-text-underline-position"?: Property$TextUnderlinePosition,
  "-webkit-touch-callout"?: Property$WebkitTouchCallout,
  "-webkit-transform"?: Property$Transform,
  "-webkit-transform-origin"?: Property$TransformOrigin<TLength>,
  "-webkit-transform-style"?: Property$TransformStyle,
  "-webkit-transition-delay"?: Property$TransitionDelay<TTime>,
  "-webkit-transition-duration"?: Property$TransitionDuration<TTime>,
  "-webkit-transition-property"?: Property$TransitionProperty,
  "-webkit-transition-timing-function"?: Property$TransitionTimingFunction,
  "-webkit-user-modify"?: Property$WebkitUserModify,
  "-webkit-user-select"?: Property$UserSelect,
  "-webkit-writing-mode"?: Property$WritingMode,
|};

export type VendorShorthandPropertiesHyphen<TLength = string | 0, TTime = string> = {|
  "-moz-animation"?: Property$Animation<TTime>,
  "-moz-border-image"?: Property$BorderImage,
  "-moz-column-rule"?: Property$ColumnRule<TLength>,
  "-moz-columns"?: Property$Columns<TLength>,
  "-moz-transition"?: Property$Transition<TTime>,
  "-ms-content-zoom-limit"?: Property$MsContentZoomLimit,
  "-ms-content-zoom-snap"?: Property$MsContentZoomSnap,
  "-ms-flex"?: Property$Flex<TLength>,
  "-ms-scroll-limit"?: Property$MsScrollLimit,
  "-ms-scroll-snap-x"?: Property$MsScrollSnapX,
  "-ms-scroll-snap-y"?: Property$MsScrollSnapY,
  "-ms-transition"?: Property$Transition<TTime>,
  "-webkit-animation"?: Property$Animation<TTime>,
  "-webkit-border-before"?: Property$WebkitBorderBefore<TLength>,
  "-webkit-border-image"?: Property$BorderImage,
  "-webkit-border-radius"?: Property$BorderRadius<TLength>,
  "-webkit-column-rule"?: Property$ColumnRule<TLength>,
  "-webkit-columns"?: Property$Columns<TLength>,
  "-webkit-flex"?: Property$Flex<TLength>,
  "-webkit-flex-flow"?: Property$FlexFlow,
  "-webkit-mask"?: Property$WebkitMask<TLength>,
  "-webkit-text-emphasis"?: Property$TextEmphasis,
  "-webkit-text-stroke"?: Property$WebkitTextStroke<TLength>,
  "-webkit-transition"?: Property$Transition<TTime>,
|};

export type VendorPropertiesHyphen<TLength = string | 0, TTime = string> = {|
  ...VendorLonghandPropertiesHyphen<TLength, TTime>,
  ...VendorShorthandPropertiesHyphen<TLength, TTime>,
|};

export type ObsoletePropertiesHyphen<TLength = string | 0, TTime = string> = {|
  azimuth?: Property$Azimuth,
  "box-align"?: Property$BoxAlign,
  "box-direction"?: Property$BoxDirection,
  "box-flex"?: Property$BoxFlex,
  "box-flex-group"?: Property$BoxFlexGroup,
  "box-lines"?: Property$BoxLines,
  "box-ordinal-group"?: Property$BoxOrdinalGroup,
  "box-orient"?: Property$BoxOrient,
  "box-pack"?: Property$BoxPack,
  clip?: Property$Clip,
  "font-variant-alternates"?: Property$FontVariantAlternates,
  "grid-column-gap"?: Property$GridColumnGap<TLength>,
  "grid-gap"?: Property$GridGap<TLength>,
  "grid-row-gap"?: Property$GridRowGap<TLength>,
  "ime-mode"?: Property$ImeMode,
  "offset-block"?: Property$InsetBlock<TLength>,
  "offset-block-end"?: Property$InsetBlockEnd<TLength>,
  "offset-block-start"?: Property$InsetBlockStart<TLength>,
  "offset-inline"?: Property$InsetInline<TLength>,
  "offset-inline-end"?: Property$InsetInlineEnd<TLength>,
  "offset-inline-start"?: Property$InsetInlineStart<TLength>,
  "scroll-snap-coordinate"?: Property$ScrollSnapCoordinate<TLength>,
  "scroll-snap-destination"?: Property$ScrollSnapDestination<TLength>,
  "scroll-snap-points-x"?: Property$ScrollSnapPointsX,
  "scroll-snap-points-y"?: Property$ScrollSnapPointsY,
  "scroll-snap-type-x"?: Property$ScrollSnapTypeX,
  "scroll-snap-type-y"?: Property$ScrollSnapTypeY,
  "scrollbar-track-color"?: Property$MsScrollbarTrackColor,
  "text-combine-horizontal"?: Property$TextCombineUpright,
  "-khtml-box-align"?: Property$BoxAlign,
  "-khtml-box-direction"?: Property$BoxDirection,
  "-khtml-box-flex"?: Property$BoxFlex,
  "-khtml-box-flex-group"?: Property$BoxFlexGroup,
  "-khtml-box-lines"?: Property$BoxLines,
  "-khtml-box-ordinal-group"?: Property$BoxOrdinalGroup,
  "-khtml-box-orient"?: Property$BoxOrient,
  "-khtml-box-pack"?: Property$BoxPack,
  "-khtml-line-break"?: Property$LineBreak,
  "-khtml-opacity"?: Property$Opacity,
  "-khtml-user-select"?: Property$UserSelect,
  "-moz-background-clip"?: Property$BackgroundClip,
  "-moz-background-inline-policy"?: Property$BoxDecorationBreak,
  "-moz-background-origin"?: Property$BackgroundOrigin,
  "-moz-background-size"?: Property$BackgroundSize<TLength>,
  "-moz-binding"?: Property$MozBinding,
  "-moz-border-radius"?: Property$BorderRadius<TLength>,
  "-moz-border-radius-bottomleft"?: Property$BorderBottomLeftRadius<TLength>,
  "-moz-border-radius-bottomright"?: Property$BorderBottomRightRadius<TLength>,
  "-moz-border-radius-topleft"?: Property$BorderTopLeftRadius<TLength>,
  "-moz-border-radius-topright"?: Property$BorderTopRightRadius<TLength>,
  "-moz-box-align"?: Property$BoxAlign,
  "-moz-box-direction"?: Property$BoxDirection,
  "-moz-box-flex"?: Property$BoxFlex,
  "-moz-box-ordinal-group"?: Property$BoxOrdinalGroup,
  "-moz-box-orient"?: Property$BoxOrient,
  "-moz-box-pack"?: Property$BoxPack,
  "-moz-box-shadow"?: Property$BoxShadow,
  "-moz-float-edge"?: Property$MozFloatEdge,
  "-moz-force-broken-image-icon"?: Property$MozForceBrokenImageIcon,
  "-moz-opacity"?: Property$Opacity,
  "-moz-outline"?: Property$Outline<TLength>,
  "-moz-outline-color"?: Property$OutlineColor,
  "-moz-outline-radius"?: Property$MozOutlineRadius<TLength>,
  "-moz-outline-radius-bottomleft"?: Property$MozOutlineRadiusBottomleft<TLength>,
  "-moz-outline-radius-bottomright"?: Property$MozOutlineRadiusBottomright<TLength>,
  "-moz-outline-radius-topleft"?: Property$MozOutlineRadiusTopleft<TLength>,
  "-moz-outline-radius-topright"?: Property$MozOutlineRadiusTopright<TLength>,
  "-moz-outline-style"?: Property$OutlineStyle,
  "-moz-outline-width"?: Property$OutlineWidth<TLength>,
  "-moz-text-align-last"?: Property$TextAlignLast,
  "-moz-text-decoration-color"?: Property$TextDecorationColor,
  "-moz-text-decoration-line"?: Property$TextDecorationLine,
  "-moz-text-decoration-style"?: Property$TextDecorationStyle,
  "-moz-user-input"?: Property$MozUserInput,
  "-ms-ime-mode"?: Property$ImeMode,
  "-ms-scrollbar-track-color"?: Property$MsScrollbarTrackColor,
  "-o-animation"?: Property$Animation<TTime>,
  "-o-animation-delay"?: Property$AnimationDelay<TTime>,
  "-o-animation-direction"?: Property$AnimationDirection,
  "-o-animation-duration"?: Property$AnimationDuration<TTime>,
  "-o-animation-fill-mode"?: Property$AnimationFillMode,
  "-o-animation-iteration-count"?: Property$AnimationIterationCount,
  "-o-animation-name"?: Property$AnimationName,
  "-o-animation-play-state"?: Property$AnimationPlayState,
  "-o-animation-timing-function"?: Property$AnimationTimingFunction,
  "-o-background-size"?: Property$BackgroundSize<TLength>,
  "-o-border-image"?: Property$BorderImage,
  "-o-transform"?: Property$Transform,
  "-o-transition"?: Property$Transition<TTime>,
  "-o-transition-delay"?: Property$TransitionDelay<TTime>,
  "-o-transition-duration"?: Property$TransitionDuration<TTime>,
  "-o-transition-property"?: Property$TransitionProperty,
  "-o-transition-timing-function"?: Property$TransitionTimingFunction,
  "-webkit-box-align"?: Property$BoxAlign,
  "-webkit-box-direction"?: Property$BoxDirection,
  "-webkit-box-flex"?: Property$BoxFlex,
  "-webkit-box-flex-group"?: Property$BoxFlexGroup,
  "-webkit-box-lines"?: Property$BoxLines,
  "-webkit-box-ordinal-group"?: Property$BoxOrdinalGroup,
  "-webkit-box-orient"?: Property$BoxOrient,
  "-webkit-box-pack"?: Property$BoxPack,
  "-webkit-scroll-snap-points-x"?: Property$ScrollSnapPointsX,
  "-webkit-scroll-snap-points-y"?: Property$ScrollSnapPointsY,
|};

export type SvgPropertiesHyphen<TLength = string | 0, TTime = string> = {|
  "alignment-baseline"?: Property$AlignmentBaseline,
  "baseline-shift"?: Property$BaselineShift<TLength>,
  clip?: Property$Clip,
  "clip-path"?: Property$ClipPath,
  "clip-rule"?: Property$ClipRule,
  color?: Property$Color,
  "color-interpolation"?: Property$ColorInterpolation,
  "color-rendering"?: Property$ColorRendering,
  cursor?: Property$Cursor,
  direction?: Property$Direction,
  display?: Property$Display,
  "dominant-baseline"?: Property$DominantBaseline,
  fill?: Property$Fill,
  "fill-opacity"?: Property$FillOpacity,
  "fill-rule"?: Property$FillRule,
  filter?: Property$Filter,
  "flood-color"?: Property$FloodColor,
  "flood-opacity"?: Property$FloodOpacity,
  font?: Property$Font,
  "font-family"?: Property$FontFamily,
  "font-size"?: Property$FontSize<TLength>,
  "font-size-adjust"?: Property$FontSizeAdjust,
  "font-stretch"?: Property$FontStretch,
  "font-style"?: Property$FontStyle,
  "font-variant"?: Property$FontVariant,
  "font-weight"?: Property$FontWeight,
  "glyph-orientation-vertical"?: Property$GlyphOrientationVertical,
  "image-rendering"?: Property$ImageRendering,
  "letter-spacing"?: Property$LetterSpacing<TLength>,
  "lighting-color"?: Property$LightingColor,
  "line-height"?: Property$LineHeight<TLength>,
  marker?: Property$Marker,
  "marker-end"?: Property$MarkerEnd,
  "marker-mid"?: Property$MarkerMid,
  "marker-start"?: Property$MarkerStart,
  mask?: Property$Mask<TLength>,
  opacity?: Property$Opacity,
  overflow?: Property$Overflow,
  "paint-order"?: Property$PaintOrder,
  "pointer-events"?: Property$PointerEvents,
  "shape-rendering"?: Property$ShapeRendering,
  "stop-color"?: Property$StopColor,
  "stop-opacity"?: Property$StopOpacity,
  stroke?: Property$Stroke,
  "stroke-dasharray"?: Property$StrokeDasharray<TLength>,
  "stroke-dashoffset"?: Property$StrokeDashoffset<TLength>,
  "stroke-linecap"?: Property$StrokeLinecap,
  "stroke-linejoin"?: Property$StrokeLinejoin,
  "stroke-miterlimit"?: Property$StrokeMiterlimit,
  "stroke-opacity"?: Property$StrokeOpacity,
  "stroke-width"?: Property$StrokeWidth<TLength>,
  "text-anchor"?: Property$TextAnchor,
  "text-decoration"?: Property$TextDecoration<TLength>,
  "text-rendering"?: Property$TextRendering,
  "unicode-bidi"?: Property$UnicodeBidi,
  "vector-effect"?: Property$VectorEffect,
  visibility?: Property$Visibility,
  "white-space"?: Property$WhiteSpace,
  "word-spacing"?: Property$WordSpacing<TLength>,
  "writing-mode"?: Property$WritingMode,
|};

export type PropertiesHyphen<TLength = string | 0, TTime = string> = {|
  ...StandardPropertiesHyphen<TLength, TTime>,
  ...VendorPropertiesHyphen<TLength, TTime>,
  ...ObsoletePropertiesHyphen<TLength, TTime>,
  ...SvgPropertiesHyphen<TLength, TTime>,
|};

export type StandardLonghandPropertiesFallback<TLength = string | 0, TTime = string> = {|
  alignContent?: Property$AlignContent | Array<Property$AlignContent>,
  alignItems?: Property$AlignItems | Array<Property$AlignItems>,
  alignSelf?: Property$AlignSelf | Array<Property$AlignSelf>,
  alignTracks?: Property$AlignTracks | Array<Property$AlignTracks>,
  animationDelay?: Property$AnimationDelay<TTime> | Array<Property$AnimationDelay<TTime>>,
  animationDirection?: Property$AnimationDirection | Array<Property$AnimationDirection>,
  animationDuration?: Property$AnimationDuration<TTime> | Array<Property$AnimationDuration<TTime>>,
  animationFillMode?: Property$AnimationFillMode | Array<Property$AnimationFillMode>,
  animationIterationCount?: Property$AnimationIterationCount | Array<Property$AnimationIterationCount>,
  animationName?: Property$AnimationName | Array<Property$AnimationName>,
  animationPlayState?: Property$AnimationPlayState | Array<Property$AnimationPlayState>,
  animationTimingFunction?: Property$AnimationTimingFunction | Array<Property$AnimationTimingFunction>,
  appearance?: Property$Appearance | Array<Property$Appearance>,
  aspectRatio?: Property$AspectRatio | Array<Property$AspectRatio>,
  backdropFilter?: Property$BackdropFilter | Array<Property$BackdropFilter>,
  backfaceVisibility?: Property$BackfaceVisibility | Array<Property$BackfaceVisibility>,
  backgroundAttachment?: Property$BackgroundAttachment | Array<Property$BackgroundAttachment>,
  backgroundBlendMode?: Property$BackgroundBlendMode | Array<Property$BackgroundBlendMode>,
  backgroundClip?: Property$BackgroundClip | Array<Property$BackgroundClip>,
  backgroundColor?: Property$BackgroundColor | Array<Property$BackgroundColor>,
  backgroundImage?: Property$BackgroundImage | Array<Property$BackgroundImage>,
  backgroundOrigin?: Property$BackgroundOrigin | Array<Property$BackgroundOrigin>,
  backgroundPosition?: Property$BackgroundPosition<TLength> | Array<Property$BackgroundPosition<TLength>>,
  backgroundPositionX?: Property$BackgroundPositionX<TLength> | Array<Property$BackgroundPositionX<TLength>>,
  backgroundPositionY?: Property$BackgroundPositionY<TLength> | Array<Property$BackgroundPositionY<TLength>>,
  backgroundRepeat?: Property$BackgroundRepeat | Array<Property$BackgroundRepeat>,
  backgroundSize?: Property$BackgroundSize<TLength> | Array<Property$BackgroundSize<TLength>>,
  blockOverflow?: Property$BlockOverflow | Array<Property$BlockOverflow>,
  blockSize?: Property$BlockSize<TLength> | Array<Property$BlockSize<TLength>>,
  borderBlockColor?: Property$BorderBlockColor | Array<Property$BorderBlockColor>,
  borderBlockEndColor?: Property$BorderBlockEndColor | Array<Property$BorderBlockEndColor>,
  borderBlockEndStyle?: Property$BorderBlockEndStyle | Array<Property$BorderBlockEndStyle>,
  borderBlockEndWidth?: Property$BorderBlockEndWidth<TLength> | Array<Property$BorderBlockEndWidth<TLength>>,
  borderBlockStartColor?: Property$BorderBlockStartColor | Array<Property$BorderBlockStartColor>,
  borderBlockStartStyle?: Property$BorderBlockStartStyle | Array<Property$BorderBlockStartStyle>,
  borderBlockStartWidth?: Property$BorderBlockStartWidth<TLength> | Array<Property$BorderBlockStartWidth<TLength>>,
  borderBlockStyle?: Property$BorderBlockStyle | Array<Property$BorderBlockStyle>,
  borderBlockWidth?: Property$BorderBlockWidth<TLength> | Array<Property$BorderBlockWidth<TLength>>,
  borderBottomColor?: Property$BorderBottomColor | Array<Property$BorderBottomColor>,
  borderBottomLeftRadius?: Property$BorderBottomLeftRadius<TLength> | Array<Property$BorderBottomLeftRadius<TLength>>,
  borderBottomRightRadius?: Property$BorderBottomRightRadius<TLength> | Array<Property$BorderBottomRightRadius<TLength>>,
  borderBottomStyle?: Property$BorderBottomStyle | Array<Property$BorderBottomStyle>,
  borderBottomWidth?: Property$BorderBottomWidth<TLength> | Array<Property$BorderBottomWidth<TLength>>,
  borderCollapse?: Property$BorderCollapse | Array<Property$BorderCollapse>,
  borderEndEndRadius?: Property$BorderEndEndRadius<TLength> | Array<Property$BorderEndEndRadius<TLength>>,
  borderEndStartRadius?: Property$BorderEndStartRadius<TLength> | Array<Property$BorderEndStartRadius<TLength>>,
  borderImageOutset?: Property$BorderImageOutset<TLength> | Array<Property$BorderImageOutset<TLength>>,
  borderImageRepeat?: Property$BorderImageRepeat | Array<Property$BorderImageRepeat>,
  borderImageSlice?: Property$BorderImageSlice | Array<Property$BorderImageSlice>,
  borderImageSource?: Property$BorderImageSource | Array<Property$BorderImageSource>,
  borderImageWidth?: Property$BorderImageWidth<TLength> | Array<Property$BorderImageWidth<TLength>>,
  borderInlineColor?: Property$BorderInlineColor | Array<Property$BorderInlineColor>,
  borderInlineEndColor?: Property$BorderInlineEndColor | Array<Property$BorderInlineEndColor>,
  borderInlineEndStyle?: Property$BorderInlineEndStyle | Array<Property$BorderInlineEndStyle>,
  borderInlineEndWidth?: Property$BorderInlineEndWidth<TLength> | Array<Property$BorderInlineEndWidth<TLength>>,
  borderInlineStartColor?: Property$BorderInlineStartColor | Array<Property$BorderInlineStartColor>,
  borderInlineStartStyle?: Property$BorderInlineStartStyle | Array<Property$BorderInlineStartStyle>,
  borderInlineStartWidth?: Property$BorderInlineStartWidth<TLength> | Array<Property$BorderInlineStartWidth<TLength>>,
  borderInlineStyle?: Property$BorderInlineStyle | Array<Property$BorderInlineStyle>,
  borderInlineWidth?: Property$BorderInlineWidth<TLength> | Array<Property$BorderInlineWidth<TLength>>,
  borderLeftColor?: Property$BorderLeftColor | Array<Property$BorderLeftColor>,
  borderLeftStyle?: Property$BorderLeftStyle | Array<Property$BorderLeftStyle>,
  borderLeftWidth?: Property$BorderLeftWidth<TLength> | Array<Property$BorderLeftWidth<TLength>>,
  borderRightColor?: Property$BorderRightColor | Array<Property$BorderRightColor>,
  borderRightStyle?: Property$BorderRightStyle | Array<Property$BorderRightStyle>,
  borderRightWidth?: Property$BorderRightWidth<TLength> | Array<Property$BorderRightWidth<TLength>>,
  borderSpacing?: Property$BorderSpacing<TLength> | Array<Property$BorderSpacing<TLength>>,
  borderStartEndRadius?: Property$BorderStartEndRadius<TLength> | Array<Property$BorderStartEndRadius<TLength>>,
  borderStartStartRadius?: Property$BorderStartStartRadius<TLength> | Array<Property$BorderStartStartRadius<TLength>>,
  borderTopColor?: Property$BorderTopColor | Array<Property$BorderTopColor>,
  borderTopLeftRadius?: Property$BorderTopLeftRadius<TLength> | Array<Property$BorderTopLeftRadius<TLength>>,
  borderTopRightRadius?: Property$BorderTopRightRadius<TLength> | Array<Property$BorderTopRightRadius<TLength>>,
  borderTopStyle?: Property$BorderTopStyle | Array<Property$BorderTopStyle>,
  borderTopWidth?: Property$BorderTopWidth<TLength> | Array<Property$BorderTopWidth<TLength>>,
  bottom?: Property$Bottom<TLength> | Array<Property$Bottom<TLength>>,
  boxDecorationBreak?: Property$BoxDecorationBreak | Array<Property$BoxDecorationBreak>,
  boxShadow?: Property$BoxShadow | Array<Property$BoxShadow>,
  boxSizing?: Property$BoxSizing | Array<Property$BoxSizing>,
  breakAfter?: Property$BreakAfter | Array<Property$BreakAfter>,
  breakBefore?: Property$BreakBefore | Array<Property$BreakBefore>,
  breakInside?: Property$BreakInside | Array<Property$BreakInside>,
  captionSide?: Property$CaptionSide | Array<Property$CaptionSide>,
  caretColor?: Property$CaretColor | Array<Property$CaretColor>,
  clear?: Property$Clear | Array<Property$Clear>,
  clipPath?: Property$ClipPath | Array<Property$ClipPath>,
  color?: Property$Color | Array<Property$Color>,
  colorAdjust?: Property$ColorAdjust | Array<Property$ColorAdjust>,
  columnCount?: Property$ColumnCount | Array<Property$ColumnCount>,
  columnFill?: Property$ColumnFill | Array<Property$ColumnFill>,
  columnGap?: Property$ColumnGap<TLength> | Array<Property$ColumnGap<TLength>>,
  columnRuleColor?: Property$ColumnRuleColor | Array<Property$ColumnRuleColor>,
  columnRuleStyle?: Property$ColumnRuleStyle | Array<Property$ColumnRuleStyle>,
  columnRuleWidth?: Property$ColumnRuleWidth<TLength> | Array<Property$ColumnRuleWidth<TLength>>,
  columnSpan?: Property$ColumnSpan | Array<Property$ColumnSpan>,
  columnWidth?: Property$ColumnWidth<TLength> | Array<Property$ColumnWidth<TLength>>,
  contain?: Property$Contain | Array<Property$Contain>,
  content?: Property$Content | Array<Property$Content>,
  contentVisibility?: Property$ContentVisibility | Array<Property$ContentVisibility>,
  counterIncrement?: Property$CounterIncrement | Array<Property$CounterIncrement>,
  counterReset?: Property$CounterReset | Array<Property$CounterReset>,
  counterSet?: Property$CounterSet | Array<Property$CounterSet>,
  cursor?: Property$Cursor | Array<Property$Cursor>,
  direction?: Property$Direction | Array<Property$Direction>,
  display?: Property$Display | Array<Property$Display>,
  emptyCells?: Property$EmptyCells | Array<Property$EmptyCells>,
  filter?: Property$Filter | Array<Property$Filter>,
  flexBasis?: Property$FlexBasis<TLength> | Array<Property$FlexBasis<TLength>>,
  flexDirection?: Property$FlexDirection | Array<Property$FlexDirection>,
  flexGrow?: Property$FlexGrow | Array<Property$FlexGrow>,
  flexShrink?: Property$FlexShrink | Array<Property$FlexShrink>,
  flexWrap?: Property$FlexWrap | Array<Property$FlexWrap>,
  float?: Property$Float | Array<Property$Float>,
  fontFamily?: Property$FontFamily | Array<Property$FontFamily>,
  fontFeatureSettings?: Property$FontFeatureSettings | Array<Property$FontFeatureSettings>,
  fontKerning?: Property$FontKerning | Array<Property$FontKerning>,
  fontLanguageOverride?: Property$FontLanguageOverride | Array<Property$FontLanguageOverride>,
  fontOpticalSizing?: Property$FontOpticalSizing | Array<Property$FontOpticalSizing>,
  fontSize?: Property$FontSize<TLength> | Array<Property$FontSize<TLength>>,
  fontSizeAdjust?: Property$FontSizeAdjust | Array<Property$FontSizeAdjust>,
  fontSmooth?: Property$FontSmooth<TLength> | Array<Property$FontSmooth<TLength>>,
  fontStretch?: Property$FontStretch | Array<Property$FontStretch>,
  fontStyle?: Property$FontStyle | Array<Property$FontStyle>,
  fontSynthesis?: Property$FontSynthesis | Array<Property$FontSynthesis>,
  fontVariant?: Property$FontVariant | Array<Property$FontVariant>,
  fontVariantCaps?: Property$FontVariantCaps | Array<Property$FontVariantCaps>,
  fontVariantEastAsian?: Property$FontVariantEastAsian | Array<Property$FontVariantEastAsian>,
  fontVariantLigatures?: Property$FontVariantLigatures | Array<Property$FontVariantLigatures>,
  fontVariantNumeric?: Property$FontVariantNumeric | Array<Property$FontVariantNumeric>,
  fontVariantPosition?: Property$FontVariantPosition | Array<Property$FontVariantPosition>,
  fontVariationSettings?: Property$FontVariationSettings | Array<Property$FontVariationSettings>,
  fontWeight?: Property$FontWeight | Array<Property$FontWeight>,
  forcedColorAdjust?: Property$ForcedColorAdjust | Array<Property$ForcedColorAdjust>,
  gridAutoColumns?: Property$GridAutoColumns<TLength> | Array<Property$GridAutoColumns<TLength>>,
  gridAutoFlow?: Property$GridAutoFlow | Array<Property$GridAutoFlow>,
  gridAutoRows?: Property$GridAutoRows<TLength> | Array<Property$GridAutoRows<TLength>>,
  gridColumnEnd?: Property$GridColumnEnd | Array<Property$GridColumnEnd>,
  gridColumnStart?: Property$GridColumnStart | Array<Property$GridColumnStart>,
  gridRowEnd?: Property$GridRowEnd | Array<Property$GridRowEnd>,
  gridRowStart?: Property$GridRowStart | Array<Property$GridRowStart>,
  gridTemplateAreas?: Property$GridTemplateAreas | Array<Property$GridTemplateAreas>,
  gridTemplateColumns?: Property$GridTemplateColumns<TLength> | Array<Property$GridTemplateColumns<TLength>>,
  gridTemplateRows?: Property$GridTemplateRows<TLength> | Array<Property$GridTemplateRows<TLength>>,
  hangingPunctuation?: Property$HangingPunctuation | Array<Property$HangingPunctuation>,
  height?: Property$Height<TLength> | Array<Property$Height<TLength>>,
  hyphens?: Property$Hyphens | Array<Property$Hyphens>,
  imageOrientation?: Property$ImageOrientation | Array<Property$ImageOrientation>,
  imageRendering?: Property$ImageRendering | Array<Property$ImageRendering>,
  imageResolution?: Property$ImageResolution | Array<Property$ImageResolution>,
  initialLetter?: Property$InitialLetter | Array<Property$InitialLetter>,
  inlineSize?: Property$InlineSize<TLength> | Array<Property$InlineSize<TLength>>,
  inset?: Property$Inset<TLength> | Array<Property$Inset<TLength>>,
  insetBlock?: Property$InsetBlock<TLength> | Array<Property$InsetBlock<TLength>>,
  insetBlockEnd?: Property$InsetBlockEnd<TLength> | Array<Property$InsetBlockEnd<TLength>>,
  insetBlockStart?: Property$InsetBlockStart<TLength> | Array<Property$InsetBlockStart<TLength>>,
  insetInline?: Property$InsetInline<TLength> | Array<Property$InsetInline<TLength>>,
  insetInlineEnd?: Property$InsetInlineEnd<TLength> | Array<Property$InsetInlineEnd<TLength>>,
  insetInlineStart?: Property$InsetInlineStart<TLength> | Array<Property$InsetInlineStart<TLength>>,
  isolation?: Property$Isolation | Array<Property$Isolation>,
  justifyContent?: Property$JustifyContent | Array<Property$JustifyContent>,
  justifyItems?: Property$JustifyItems | Array<Property$JustifyItems>,
  justifySelf?: Property$JustifySelf | Array<Property$JustifySelf>,
  justifyTracks?: Property$JustifyTracks | Array<Property$JustifyTracks>,
  left?: Property$Left<TLength> | Array<Property$Left<TLength>>,
  letterSpacing?: Property$LetterSpacing<TLength> | Array<Property$LetterSpacing<TLength>>,
  lineBreak?: Property$LineBreak | Array<Property$LineBreak>,
  lineHeight?: Property$LineHeight<TLength> | Array<Property$LineHeight<TLength>>,
  lineHeightStep?: Property$LineHeightStep<TLength> | Array<Property$LineHeightStep<TLength>>,
  listStyleImage?: Property$ListStyleImage | Array<Property$ListStyleImage>,
  listStylePosition?: Property$ListStylePosition | Array<Property$ListStylePosition>,
  listStyleType?: Property$ListStyleType | Array<Property$ListStyleType>,
  marginBlock?: Property$MarginBlock<TLength> | Array<Property$MarginBlock<TLength>>,
  marginBlockEnd?: Property$MarginBlockEnd<TLength> | Array<Property$MarginBlockEnd<TLength>>,
  marginBlockStart?: Property$MarginBlockStart<TLength> | Array<Property$MarginBlockStart<TLength>>,
  marginBottom?: Property$MarginBottom<TLength> | Array<Property$MarginBottom<TLength>>,
  marginInline?: Property$MarginInline<TLength> | Array<Property$MarginInline<TLength>>,
  marginInlineEnd?: Property$MarginInlineEnd<TLength> | Array<Property$MarginInlineEnd<TLength>>,
  marginInlineStart?: Property$MarginInlineStart<TLength> | Array<Property$MarginInlineStart<TLength>>,
  marginLeft?: Property$MarginLeft<TLength> | Array<Property$MarginLeft<TLength>>,
  marginRight?: Property$MarginRight<TLength> | Array<Property$MarginRight<TLength>>,
  marginTop?: Property$MarginTop<TLength> | Array<Property$MarginTop<TLength>>,
  maskBorderMode?: Property$MaskBorderMode | Array<Property$MaskBorderMode>,
  maskBorderOutset?: Property$MaskBorderOutset<TLength> | Array<Property$MaskBorderOutset<TLength>>,
  maskBorderRepeat?: Property$MaskBorderRepeat | Array<Property$MaskBorderRepeat>,
  maskBorderSlice?: Property$MaskBorderSlice | Array<Property$MaskBorderSlice>,
  maskBorderSource?: Property$MaskBorderSource | Array<Property$MaskBorderSource>,
  maskBorderWidth?: Property$MaskBorderWidth<TLength> | Array<Property$MaskBorderWidth<TLength>>,
  maskClip?: Property$MaskClip | Array<Property$MaskClip>,
  maskComposite?: Property$MaskComposite | Array<Property$MaskComposite>,
  maskImage?: Property$MaskImage | Array<Property$MaskImage>,
  maskMode?: Property$MaskMode | Array<Property$MaskMode>,
  maskOrigin?: Property$MaskOrigin | Array<Property$MaskOrigin>,
  maskPosition?: Property$MaskPosition<TLength> | Array<Property$MaskPosition<TLength>>,
  maskRepeat?: Property$MaskRepeat | Array<Property$MaskRepeat>,
  maskSize?: Property$MaskSize<TLength> | Array<Property$MaskSize<TLength>>,
  maskType?: Property$MaskType | Array<Property$MaskType>,
  mathStyle?: Property$MathStyle | Array<Property$MathStyle>,
  maxBlockSize?: Property$MaxBlockSize<TLength> | Array<Property$MaxBlockSize<TLength>>,
  maxHeight?: Property$MaxHeight<TLength> | Array<Property$MaxHeight<TLength>>,
  maxInlineSize?: Property$MaxInlineSize<TLength> | Array<Property$MaxInlineSize<TLength>>,
  maxLines?: Property$MaxLines | Array<Property$MaxLines>,
  maxWidth?: Property$MaxWidth<TLength> | Array<Property$MaxWidth<TLength>>,
  minBlockSize?: Property$MinBlockSize<TLength> | Array<Property$MinBlockSize<TLength>>,
  minHeight?: Property$MinHeight<TLength> | Array<Property$MinHeight<TLength>>,
  minInlineSize?: Property$MinInlineSize<TLength> | Array<Property$MinInlineSize<TLength>>,
  minWidth?: Property$MinWidth<TLength> | Array<Property$MinWidth<TLength>>,
  mixBlendMode?: Property$MixBlendMode | Array<Property$MixBlendMode>,
  motionDistance?: Property$OffsetDistance<TLength> | Array<Property$OffsetDistance<TLength>>,
  motionPath?: Property$OffsetPath | Array<Property$OffsetPath>,
  motionRotation?: Property$OffsetRotate | Array<Property$OffsetRotate>,
  objectFit?: Property$ObjectFit | Array<Property$ObjectFit>,
  objectPosition?: Property$ObjectPosition<TLength> | Array<Property$ObjectPosition<TLength>>,
  offsetAnchor?: Property$OffsetAnchor<TLength> | Array<Property$OffsetAnchor<TLength>>,
  offsetDistance?: Property$OffsetDistance<TLength> | Array<Property$OffsetDistance<TLength>>,
  offsetPath?: Property$OffsetPath | Array<Property$OffsetPath>,
  offsetRotate?: Property$OffsetRotate | Array<Property$OffsetRotate>,
  offsetRotation?: Property$OffsetRotate | Array<Property$OffsetRotate>,
  opacity?: Property$Opacity | Array<Property$Opacity>,
  order?: Property$Order | Array<Property$Order>,
  orphans?: Property$Orphans | Array<Property$Orphans>,
  outlineColor?: Property$OutlineColor | Array<Property$OutlineColor>,
  outlineOffset?: Property$OutlineOffset<TLength> | Array<Property$OutlineOffset<TLength>>,
  outlineStyle?: Property$OutlineStyle | Array<Property$OutlineStyle>,
  outlineWidth?: Property$OutlineWidth<TLength> | Array<Property$OutlineWidth<TLength>>,
  overflowAnchor?: Property$OverflowAnchor | Array<Property$OverflowAnchor>,
  overflowBlock?: Property$OverflowBlock | Array<Property$OverflowBlock>,
  overflowClipBox?: Property$OverflowClipBox | Array<Property$OverflowClipBox>,
  overflowInline?: Property$OverflowInline | Array<Property$OverflowInline>,
  overflowWrap?: Property$OverflowWrap | Array<Property$OverflowWrap>,
  overflowX?: Property$OverflowX | Array<Property$OverflowX>,
  overflowY?: Property$OverflowY | Array<Property$OverflowY>,
  overscrollBehavior?: Property$OverscrollBehavior | Array<Property$OverscrollBehavior>,
  overscrollBehaviorBlock?: Property$OverscrollBehaviorBlock | Array<Property$OverscrollBehaviorBlock>,
  overscrollBehaviorInline?: Property$OverscrollBehaviorInline | Array<Property$OverscrollBehaviorInline>,
  overscrollBehaviorX?: Property$OverscrollBehaviorX | Array<Property$OverscrollBehaviorX>,
  overscrollBehaviorY?: Property$OverscrollBehaviorY | Array<Property$OverscrollBehaviorY>,
  paddingBlock?: Property$PaddingBlock<TLength> | Array<Property$PaddingBlock<TLength>>,
  paddingBlockEnd?: Property$PaddingBlockEnd<TLength> | Array<Property$PaddingBlockEnd<TLength>>,
  paddingBlockStart?: Property$PaddingBlockStart<TLength> | Array<Property$PaddingBlockStart<TLength>>,
  paddingBottom?: Property$PaddingBottom<TLength> | Array<Property$PaddingBottom<TLength>>,
  paddingInline?: Property$PaddingInline<TLength> | Array<Property$PaddingInline<TLength>>,
  paddingInlineEnd?: Property$PaddingInlineEnd<TLength> | Array<Property$PaddingInlineEnd<TLength>>,
  paddingInlineStart?: Property$PaddingInlineStart<TLength> | Array<Property$PaddingInlineStart<TLength>>,
  paddingLeft?: Property$PaddingLeft<TLength> | Array<Property$PaddingLeft<TLength>>,
  paddingRight?: Property$PaddingRight<TLength> | Array<Property$PaddingRight<TLength>>,
  paddingTop?: Property$PaddingTop<TLength> | Array<Property$PaddingTop<TLength>>,
  pageBreakAfter?: Property$PageBreakAfter | Array<Property$PageBreakAfter>,
  pageBreakBefore?: Property$PageBreakBefore | Array<Property$PageBreakBefore>,
  pageBreakInside?: Property$PageBreakInside | Array<Property$PageBreakInside>,
  paintOrder?: Property$PaintOrder | Array<Property$PaintOrder>,
  perspective?: Property$Perspective<TLength> | Array<Property$Perspective<TLength>>,
  perspectiveOrigin?: Property$PerspectiveOrigin<TLength> | Array<Property$PerspectiveOrigin<TLength>>,
  placeContent?: Property$PlaceContent | Array<Property$PlaceContent>,
  pointerEvents?: Property$PointerEvents | Array<Property$PointerEvents>,
  position?: Property$Position | Array<Property$Position>,
  quotes?: Property$Quotes | Array<Property$Quotes>,
  resize?: Property$Resize | Array<Property$Resize>,
  right?: Property$Right<TLength> | Array<Property$Right<TLength>>,
  rotate?: Property$Rotate | Array<Property$Rotate>,
  rowGap?: Property$RowGap<TLength> | Array<Property$RowGap<TLength>>,
  rubyAlign?: Property$RubyAlign | Array<Property$RubyAlign>,
  rubyMerge?: Property$RubyMerge | Array<Property$RubyMerge>,
  rubyPosition?: Property$RubyPosition | Array<Property$RubyPosition>,
  scale?: Property$Scale | Array<Property$Scale>,
  scrollBehavior?: Property$ScrollBehavior | Array<Property$ScrollBehavior>,
  scrollMargin?: Property$ScrollMargin<TLength> | Array<Property$ScrollMargin<TLength>>,
  scrollMarginBlock?: Property$ScrollMarginBlock<TLength> | Array<Property$ScrollMarginBlock<TLength>>,
  scrollMarginBlockEnd?: Property$ScrollMarginBlockEnd<TLength> | Array<Property$ScrollMarginBlockEnd<TLength>>,
  scrollMarginBlockStart?: Property$ScrollMarginBlockStart<TLength> | Array<Property$ScrollMarginBlockStart<TLength>>,
  scrollMarginBottom?: Property$ScrollMarginBottom<TLength> | Array<Property$ScrollMarginBottom<TLength>>,
  scrollMarginInline?: Property$ScrollMarginInline<TLength> | Array<Property$ScrollMarginInline<TLength>>,
  scrollMarginInlineEnd?: Property$ScrollMarginInlineEnd<TLength> | Array<Property$ScrollMarginInlineEnd<TLength>>,
  scrollMarginInlineStart?: Property$ScrollMarginInlineStart<TLength> | Array<Property$ScrollMarginInlineStart<TLength>>,
  scrollMarginLeft?: Property$ScrollMarginLeft<TLength> | Array<Property$ScrollMarginLeft<TLength>>,
  scrollMarginRight?: Property$ScrollMarginRight<TLength> | Array<Property$ScrollMarginRight<TLength>>,
  scrollMarginTop?: Property$ScrollMarginTop<TLength> | Array<Property$ScrollMarginTop<TLength>>,
  scrollPadding?: Property$ScrollPadding<TLength> | Array<Property$ScrollPadding<TLength>>,
  scrollPaddingBlock?: Property$ScrollPaddingBlock<TLength> | Array<Property$ScrollPaddingBlock<TLength>>,
  scrollPaddingBlockEnd?: Property$ScrollPaddingBlockEnd<TLength> | Array<Property$ScrollPaddingBlockEnd<TLength>>,
  scrollPaddingBlockStart?: Property$ScrollPaddingBlockStart<TLength> | Array<Property$ScrollPaddingBlockStart<TLength>>,
  scrollPaddingBottom?: Property$ScrollPaddingBottom<TLength> | Array<Property$ScrollPaddingBottom<TLength>>,
  scrollPaddingInline?: Property$ScrollPaddingInline<TLength> | Array<Property$ScrollPaddingInline<TLength>>,
  scrollPaddingInlineEnd?: Property$ScrollPaddingInlineEnd<TLength> | Array<Property$ScrollPaddingInlineEnd<TLength>>,
  scrollPaddingInlineStart?: Property$ScrollPaddingInlineStart<TLength> | Array<Property$ScrollPaddingInlineStart<TLength>>,
  scrollPaddingLeft?: Property$ScrollPaddingLeft<TLength> | Array<Property$ScrollPaddingLeft<TLength>>,
  scrollPaddingRight?: Property$ScrollPaddingRight<TLength> | Array<Property$ScrollPaddingRight<TLength>>,
  scrollPaddingTop?: Property$ScrollPaddingTop<TLength> | Array<Property$ScrollPaddingTop<TLength>>,
  scrollSnapAlign?: Property$ScrollSnapAlign | Array<Property$ScrollSnapAlign>,
  scrollSnapMargin?: Property$ScrollMargin<TLength> | Array<Property$ScrollMargin<TLength>>,
  scrollSnapMarginBottom?: Property$ScrollMarginBottom<TLength> | Array<Property$ScrollMarginBottom<TLength>>,
  scrollSnapMarginLeft?: Property$ScrollMarginLeft<TLength> | Array<Property$ScrollMarginLeft<TLength>>,
  scrollSnapMarginRight?: Property$ScrollMarginRight<TLength> | Array<Property$ScrollMarginRight<TLength>>,
  scrollSnapMarginTop?: Property$ScrollMarginTop<TLength> | Array<Property$ScrollMarginTop<TLength>>,
  scrollSnapStop?: Property$ScrollSnapStop | Array<Property$ScrollSnapStop>,
  scrollSnapType?: Property$ScrollSnapType | Array<Property$ScrollSnapType>,
  scrollbarColor?: Property$ScrollbarColor | Array<Property$ScrollbarColor>,
  scrollbarGutter?: Property$ScrollbarGutter | Array<Property$ScrollbarGutter>,
  scrollbarWidth?: Property$ScrollbarWidth | Array<Property$ScrollbarWidth>,
  shapeImageThreshold?: Property$ShapeImageThreshold | Array<Property$ShapeImageThreshold>,
  shapeMargin?: Property$ShapeMargin<TLength> | Array<Property$ShapeMargin<TLength>>,
  shapeOutside?: Property$ShapeOutside | Array<Property$ShapeOutside>,
  tabSize?: Property$TabSize<TLength> | Array<Property$TabSize<TLength>>,
  tableLayout?: Property$TableLayout | Array<Property$TableLayout>,
  textAlign?: Property$TextAlign | Array<Property$TextAlign>,
  textAlignLast?: Property$TextAlignLast | Array<Property$TextAlignLast>,
  textCombineUpright?: Property$TextCombineUpright | Array<Property$TextCombineUpright>,
  textDecorationColor?: Property$TextDecorationColor | Array<Property$TextDecorationColor>,
  textDecorationLine?: Property$TextDecorationLine | Array<Property$TextDecorationLine>,
  textDecorationSkip?: Property$TextDecorationSkip | Array<Property$TextDecorationSkip>,
  textDecorationSkipInk?: Property$TextDecorationSkipInk | Array<Property$TextDecorationSkipInk>,
  textDecorationStyle?: Property$TextDecorationStyle | Array<Property$TextDecorationStyle>,
  textDecorationThickness?: Property$TextDecorationThickness<TLength> | Array<Property$TextDecorationThickness<TLength>>,
  textDecorationWidth?: Property$TextDecorationThickness<TLength> | Array<Property$TextDecorationThickness<TLength>>,
  textEmphasisColor?: Property$TextEmphasisColor | Array<Property$TextEmphasisColor>,
  textEmphasisPosition?: Property$TextEmphasisPosition | Array<Property$TextEmphasisPosition>,
  textEmphasisStyle?: Property$TextEmphasisStyle | Array<Property$TextEmphasisStyle>,
  textIndent?: Property$TextIndent<TLength> | Array<Property$TextIndent<TLength>>,
  textJustify?: Property$TextJustify | Array<Property$TextJustify>,
  textOrientation?: Property$TextOrientation | Array<Property$TextOrientation>,
  textOverflow?: Property$TextOverflow | Array<Property$TextOverflow>,
  textRendering?: Property$TextRendering | Array<Property$TextRendering>,
  textShadow?: Property$TextShadow | Array<Property$TextShadow>,
  textSizeAdjust?: Property$TextSizeAdjust | Array<Property$TextSizeAdjust>,
  textTransform?: Property$TextTransform | Array<Property$TextTransform>,
  textUnderlineOffset?: Property$TextUnderlineOffset<TLength> | Array<Property$TextUnderlineOffset<TLength>>,
  textUnderlinePosition?: Property$TextUnderlinePosition | Array<Property$TextUnderlinePosition>,
  top?: Property$Top<TLength> | Array<Property$Top<TLength>>,
  touchAction?: Property$TouchAction | Array<Property$TouchAction>,
  transform?: Property$Transform | Array<Property$Transform>,
  transformBox?: Property$TransformBox | Array<Property$TransformBox>,
  transformOrigin?: Property$TransformOrigin<TLength> | Array<Property$TransformOrigin<TLength>>,
  transformStyle?: Property$TransformStyle | Array<Property$TransformStyle>,
  transitionDelay?: Property$TransitionDelay<TTime> | Array<Property$TransitionDelay<TTime>>,
  transitionDuration?: Property$TransitionDuration<TTime> | Array<Property$TransitionDuration<TTime>>,
  transitionProperty?: Property$TransitionProperty | Array<Property$TransitionProperty>,
  transitionTimingFunction?: Property$TransitionTimingFunction | Array<Property$TransitionTimingFunction>,
  translate?: Property$Translate<TLength> | Array<Property$Translate<TLength>>,
  unicodeBidi?: Property$UnicodeBidi | Array<Property$UnicodeBidi>,
  userSelect?: Property$UserSelect | Array<Property$UserSelect>,
  verticalAlign?: Property$VerticalAlign<TLength> | Array<Property$VerticalAlign<TLength>>,
  visibility?: Property$Visibility | Array<Property$Visibility>,
  whiteSpace?: Property$WhiteSpace | Array<Property$WhiteSpace>,
  widows?: Property$Widows | Array<Property$Widows>,
  width?: Property$Width<TLength> | Array<Property$Width<TLength>>,
  willChange?: Property$WillChange | Array<Property$WillChange>,
  wordBreak?: Property$WordBreak | Array<Property$WordBreak>,
  wordSpacing?: Property$WordSpacing<TLength> | Array<Property$WordSpacing<TLength>>,
  wordWrap?: Property$WordWrap | Array<Property$WordWrap>,
  writingMode?: Property$WritingMode | Array<Property$WritingMode>,
  zIndex?: Property$ZIndex | Array<Property$ZIndex>,
  zoom?: Property$Zoom | Array<Property$Zoom>,
|};

export type StandardShorthandPropertiesFallback<TLength = string | 0, TTime = string> = {|
  all?: Property$All | Array<Property$All>,
  animation?: Property$Animation<TTime> | Array<Property$Animation<TTime>>,
  background?: Property$Background<TLength> | Array<Property$Background<TLength>>,
  border?: Property$Border<TLength> | Array<Property$Border<TLength>>,
  borderBlock?: Property$BorderBlock<TLength> | Array<Property$BorderBlock<TLength>>,
  borderBlockEnd?: Property$BorderBlockEnd<TLength> | Array<Property$BorderBlockEnd<TLength>>,
  borderBlockStart?: Property$BorderBlockStart<TLength> | Array<Property$BorderBlockStart<TLength>>,
  borderBottom?: Property$BorderBottom<TLength> | Array<Property$BorderBottom<TLength>>,
  borderColor?: Property$BorderColor | Array<Property$BorderColor>,
  borderImage?: Property$BorderImage | Array<Property$BorderImage>,
  borderInline?: Property$BorderInline<TLength> | Array<Property$BorderInline<TLength>>,
  borderInlineEnd?: Property$BorderInlineEnd<TLength> | Array<Property$BorderInlineEnd<TLength>>,
  borderInlineStart?: Property$BorderInlineStart<TLength> | Array<Property$BorderInlineStart<TLength>>,
  borderLeft?: Property$BorderLeft<TLength> | Array<Property$BorderLeft<TLength>>,
  borderRadius?: Property$BorderRadius<TLength> | Array<Property$BorderRadius<TLength>>,
  borderRight?: Property$BorderRight<TLength> | Array<Property$BorderRight<TLength>>,
  borderStyle?: Property$BorderStyle | Array<Property$BorderStyle>,
  borderTop?: Property$BorderTop<TLength> | Array<Property$BorderTop<TLength>>,
  borderWidth?: Property$BorderWidth<TLength> | Array<Property$BorderWidth<TLength>>,
  columnRule?: Property$ColumnRule<TLength> | Array<Property$ColumnRule<TLength>>,
  columns?: Property$Columns<TLength> | Array<Property$Columns<TLength>>,
  flex?: Property$Flex<TLength> | Array<Property$Flex<TLength>>,
  flexFlow?: Property$FlexFlow | Array<Property$FlexFlow>,
  font?: Property$Font | Array<Property$Font>,
  gap?: Property$Gap<TLength> | Array<Property$Gap<TLength>>,
  grid?: Property$Grid | Array<Property$Grid>,
  gridArea?: Property$GridArea | Array<Property$GridArea>,
  gridColumn?: Property$GridColumn | Array<Property$GridColumn>,
  gridRow?: Property$GridRow | Array<Property$GridRow>,
  gridTemplate?: Property$GridTemplate | Array<Property$GridTemplate>,
  lineClamp?: Property$LineClamp | Array<Property$LineClamp>,
  listStyle?: Property$ListStyle | Array<Property$ListStyle>,
  margin?: Property$Margin<TLength> | Array<Property$Margin<TLength>>,
  mask?: Property$Mask<TLength> | Array<Property$Mask<TLength>>,
  maskBorder?: Property$MaskBorder | Array<Property$MaskBorder>,
  motion?: Property$Offset<TLength> | Array<Property$Offset<TLength>>,
  offset?: Property$Offset<TLength> | Array<Property$Offset<TLength>>,
  outline?: Property$Outline<TLength> | Array<Property$Outline<TLength>>,
  overflow?: Property$Overflow | Array<Property$Overflow>,
  padding?: Property$Padding<TLength> | Array<Property$Padding<TLength>>,
  placeItems?: Property$PlaceItems | Array<Property$PlaceItems>,
  placeSelf?: Property$PlaceSelf | Array<Property$PlaceSelf>,
  textDecoration?: Property$TextDecoration<TLength> | Array<Property$TextDecoration<TLength>>,
  textEmphasis?: Property$TextEmphasis | Array<Property$TextEmphasis>,
  transition?: Property$Transition<TTime> | Array<Property$Transition<TTime>>,
|};

export type StandardPropertiesFallback<TLength = string | 0, TTime = string> = {|
  ...StandardLonghandPropertiesFallback<TLength, TTime>,
  ...StandardShorthandPropertiesFallback<TLength, TTime>,
|};

export type VendorLonghandPropertiesFallback<TLength = string | 0, TTime = string> = {|
  MozAnimationDelay?: Property$AnimationDelay<TTime> | Array<Property$AnimationDelay<TTime>>,
  MozAnimationDirection?: Property$AnimationDirection | Array<Property$AnimationDirection>,
  MozAnimationDuration?: Property$AnimationDuration<TTime> | Array<Property$AnimationDuration<TTime>>,
  MozAnimationFillMode?: Property$AnimationFillMode | Array<Property$AnimationFillMode>,
  MozAnimationIterationCount?: Property$AnimationIterationCount | Array<Property$AnimationIterationCount>,
  MozAnimationName?: Property$AnimationName | Array<Property$AnimationName>,
  MozAnimationPlayState?: Property$AnimationPlayState | Array<Property$AnimationPlayState>,
  MozAnimationTimingFunction?: Property$AnimationTimingFunction | Array<Property$AnimationTimingFunction>,
  MozAppearance?: Property$MozAppearance | Array<Property$MozAppearance>,
  MozBackfaceVisibility?: Property$BackfaceVisibility | Array<Property$BackfaceVisibility>,
  MozBorderBottomColors?: Property$MozBorderBottomColors | Array<Property$MozBorderBottomColors>,
  MozBorderEndColor?: Property$BorderInlineEndColor | Array<Property$BorderInlineEndColor>,
  MozBorderEndStyle?: Property$BorderInlineEndStyle | Array<Property$BorderInlineEndStyle>,
  MozBorderEndWidth?: Property$BorderInlineEndWidth<TLength> | Array<Property$BorderInlineEndWidth<TLength>>,
  MozBorderLeftColors?: Property$MozBorderLeftColors | Array<Property$MozBorderLeftColors>,
  MozBorderRightColors?: Property$MozBorderRightColors | Array<Property$MozBorderRightColors>,
  MozBorderStartColor?: Property$BorderInlineStartColor | Array<Property$BorderInlineStartColor>,
  MozBorderStartStyle?: Property$BorderInlineStartStyle | Array<Property$BorderInlineStartStyle>,
  MozBorderTopColors?: Property$MozBorderTopColors | Array<Property$MozBorderTopColors>,
  MozBoxSizing?: Property$BoxSizing | Array<Property$BoxSizing>,
  MozColumnCount?: Property$ColumnCount | Array<Property$ColumnCount>,
  MozColumnFill?: Property$ColumnFill | Array<Property$ColumnFill>,
  MozColumnGap?: Property$ColumnGap<TLength> | Array<Property$ColumnGap<TLength>>,
  MozColumnRuleColor?: Property$ColumnRuleColor | Array<Property$ColumnRuleColor>,
  MozColumnRuleStyle?: Property$ColumnRuleStyle | Array<Property$ColumnRuleStyle>,
  MozColumnRuleWidth?: Property$ColumnRuleWidth<TLength> | Array<Property$ColumnRuleWidth<TLength>>,
  MozColumnWidth?: Property$ColumnWidth<TLength> | Array<Property$ColumnWidth<TLength>>,
  MozContextProperties?: Property$MozContextProperties | Array<Property$MozContextProperties>,
  MozFontFeatureSettings?: Property$FontFeatureSettings | Array<Property$FontFeatureSettings>,
  MozFontLanguageOverride?: Property$FontLanguageOverride | Array<Property$FontLanguageOverride>,
  MozHyphens?: Property$Hyphens | Array<Property$Hyphens>,
  MozImageRegion?: Property$MozImageRegion | Array<Property$MozImageRegion>,
  MozMarginEnd?: Property$MarginInlineEnd<TLength> | Array<Property$MarginInlineEnd<TLength>>,
  MozMarginStart?: Property$MarginInlineStart<TLength> | Array<Property$MarginInlineStart<TLength>>,
  MozOrient?: Property$MozOrient | Array<Property$MozOrient>,
  MozOsxFontSmoothing?: Property$FontSmooth<TLength> | Array<Property$FontSmooth<TLength>>,
  MozPaddingEnd?: Property$PaddingInlineEnd<TLength> | Array<Property$PaddingInlineEnd<TLength>>,
  MozPaddingStart?: Property$PaddingInlineStart<TLength> | Array<Property$PaddingInlineStart<TLength>>,
  MozPerspective?: Property$Perspective<TLength> | Array<Property$Perspective<TLength>>,
  MozPerspectiveOrigin?: Property$PerspectiveOrigin<TLength> | Array<Property$PerspectiveOrigin<TLength>>,
  MozStackSizing?: Property$MozStackSizing | Array<Property$MozStackSizing>,
  MozTabSize?: Property$TabSize<TLength> | Array<Property$TabSize<TLength>>,
  MozTextBlink?: Property$MozTextBlink | Array<Property$MozTextBlink>,
  MozTextSizeAdjust?: Property$TextSizeAdjust | Array<Property$TextSizeAdjust>,
  MozTransformOrigin?: Property$TransformOrigin<TLength> | Array<Property$TransformOrigin<TLength>>,
  MozTransformStyle?: Property$TransformStyle | Array<Property$TransformStyle>,
  MozTransitionDelay?: Property$TransitionDelay<TTime> | Array<Property$TransitionDelay<TTime>>,
  MozTransitionDuration?: Property$TransitionDuration<TTime> | Array<Property$TransitionDuration<TTime>>,
  MozTransitionProperty?: Property$TransitionProperty | Array<Property$TransitionProperty>,
  MozTransitionTimingFunction?: Property$TransitionTimingFunction | Array<Property$TransitionTimingFunction>,
  MozUserFocus?: Property$MozUserFocus | Array<Property$MozUserFocus>,
  MozUserModify?: Property$MozUserModify | Array<Property$MozUserModify>,
  MozUserSelect?: Property$UserSelect | Array<Property$UserSelect>,
  MozWindowDragging?: Property$MozWindowDragging | Array<Property$MozWindowDragging>,
  MozWindowShadow?: Property$MozWindowShadow | Array<Property$MozWindowShadow>,
  msAccelerator?: Property$MsAccelerator | Array<Property$MsAccelerator>,
  msAlignSelf?: Property$AlignSelf | Array<Property$AlignSelf>,
  msBlockProgression?: Property$MsBlockProgression | Array<Property$MsBlockProgression>,
  msContentZoomChaining?: Property$MsContentZoomChaining | Array<Property$MsContentZoomChaining>,
  msContentZoomLimitMax?: Property$MsContentZoomLimitMax | Array<Property$MsContentZoomLimitMax>,
  msContentZoomLimitMin?: Property$MsContentZoomLimitMin | Array<Property$MsContentZoomLimitMin>,
  msContentZoomSnapPoints?: Property$MsContentZoomSnapPoints | Array<Property$MsContentZoomSnapPoints>,
  msContentZoomSnapType?: Property$MsContentZoomSnapType | Array<Property$MsContentZoomSnapType>,
  msContentZooming?: Property$MsContentZooming | Array<Property$MsContentZooming>,
  msFilter?: Property$MsFilter | Array<Property$MsFilter>,
  msFlexDirection?: Property$FlexDirection | Array<Property$FlexDirection>,
  msFlexPositive?: Property$FlexGrow | Array<Property$FlexGrow>,
  msFlowFrom?: Property$MsFlowFrom | Array<Property$MsFlowFrom>,
  msFlowInto?: Property$MsFlowInto | Array<Property$MsFlowInto>,
  msGridColumns?: Property$MsGridColumns<TLength> | Array<Property$MsGridColumns<TLength>>,
  msGridRows?: Property$MsGridRows<TLength> | Array<Property$MsGridRows<TLength>>,
  msHighContrastAdjust?: Property$MsHighContrastAdjust | Array<Property$MsHighContrastAdjust>,
  msHyphenateLimitChars?: Property$MsHyphenateLimitChars | Array<Property$MsHyphenateLimitChars>,
  msHyphenateLimitLines?: Property$MsHyphenateLimitLines | Array<Property$MsHyphenateLimitLines>,
  msHyphenateLimitZone?: Property$MsHyphenateLimitZone<TLength> | Array<Property$MsHyphenateLimitZone<TLength>>,
  msHyphens?: Property$Hyphens | Array<Property$Hyphens>,
  msImeAlign?: Property$MsImeAlign | Array<Property$MsImeAlign>,
  msJustifySelf?: Property$JustifySelf | Array<Property$JustifySelf>,
  msLineBreak?: Property$LineBreak | Array<Property$LineBreak>,
  msOrder?: Property$Order | Array<Property$Order>,
  msOverflowStyle?: Property$MsOverflowStyle | Array<Property$MsOverflowStyle>,
  msOverflowX?: Property$OverflowX | Array<Property$OverflowX>,
  msOverflowY?: Property$OverflowY | Array<Property$OverflowY>,
  msScrollChaining?: Property$MsScrollChaining | Array<Property$MsScrollChaining>,
  msScrollLimitXMax?: Property$MsScrollLimitXMax<TLength> | Array<Property$MsScrollLimitXMax<TLength>>,
  msScrollLimitXMin?: Property$MsScrollLimitXMin<TLength> | Array<Property$MsScrollLimitXMin<TLength>>,
  msScrollLimitYMax?: Property$MsScrollLimitYMax<TLength> | Array<Property$MsScrollLimitYMax<TLength>>,
  msScrollLimitYMin?: Property$MsScrollLimitYMin<TLength> | Array<Property$MsScrollLimitYMin<TLength>>,
  msScrollRails?: Property$MsScrollRails | Array<Property$MsScrollRails>,
  msScrollSnapPointsX?: Property$MsScrollSnapPointsX | Array<Property$MsScrollSnapPointsX>,
  msScrollSnapPointsY?: Property$MsScrollSnapPointsY | Array<Property$MsScrollSnapPointsY>,
  msScrollSnapType?: Property$MsScrollSnapType | Array<Property$MsScrollSnapType>,
  msScrollTranslation?: Property$MsScrollTranslation | Array<Property$MsScrollTranslation>,
  msScrollbar3dlightColor?: Property$MsScrollbar3dlightColor | Array<Property$MsScrollbar3dlightColor>,
  msScrollbarArrowColor?: Property$MsScrollbarArrowColor | Array<Property$MsScrollbarArrowColor>,
  msScrollbarBaseColor?: Property$MsScrollbarBaseColor | Array<Property$MsScrollbarBaseColor>,
  msScrollbarDarkshadowColor?: Property$MsScrollbarDarkshadowColor | Array<Property$MsScrollbarDarkshadowColor>,
  msScrollbarFaceColor?: Property$MsScrollbarFaceColor | Array<Property$MsScrollbarFaceColor>,
  msScrollbarHighlightColor?: Property$MsScrollbarHighlightColor | Array<Property$MsScrollbarHighlightColor>,
  msScrollbarShadowColor?: Property$MsScrollbarShadowColor | Array<Property$MsScrollbarShadowColor>,
  msTextAutospace?: Property$MsTextAutospace | Array<Property$MsTextAutospace>,
  msTextCombineHorizontal?: Property$TextCombineUpright | Array<Property$TextCombineUpright>,
  msTextOverflow?: Property$TextOverflow | Array<Property$TextOverflow>,
  msTouchAction?: Property$TouchAction | Array<Property$TouchAction>,
  msTouchSelect?: Property$MsTouchSelect | Array<Property$MsTouchSelect>,
  msTransform?: Property$Transform | Array<Property$Transform>,
  msTransformOrigin?: Property$TransformOrigin<TLength> | Array<Property$TransformOrigin<TLength>>,
  msTransitionDelay?: Property$TransitionDelay<TTime> | Array<Property$TransitionDelay<TTime>>,
  msTransitionDuration?: Property$TransitionDuration<TTime> | Array<Property$TransitionDuration<TTime>>,
  msTransitionProperty?: Property$TransitionProperty | Array<Property$TransitionProperty>,
  msTransitionTimingFunction?: Property$TransitionTimingFunction | Array<Property$TransitionTimingFunction>,
  msUserSelect?: Property$MsUserSelect | Array<Property$MsUserSelect>,
  msWordBreak?: Property$WordBreak | Array<Property$WordBreak>,
  msWrapFlow?: Property$MsWrapFlow | Array<Property$MsWrapFlow>,
  msWrapMargin?: Property$MsWrapMargin<TLength> | Array<Property$MsWrapMargin<TLength>>,
  msWrapThrough?: Property$MsWrapThrough | Array<Property$MsWrapThrough>,
  msWritingMode?: Property$WritingMode | Array<Property$WritingMode>,
  OObjectFit?: Property$ObjectFit | Array<Property$ObjectFit>,
  OObjectPosition?: Property$ObjectPosition<TLength> | Array<Property$ObjectPosition<TLength>>,
  OTabSize?: Property$TabSize<TLength> | Array<Property$TabSize<TLength>>,
  OTextOverflow?: Property$TextOverflow | Array<Property$TextOverflow>,
  OTransformOrigin?: Property$TransformOrigin<TLength> | Array<Property$TransformOrigin<TLength>>,
  WebkitAlignContent?: Property$AlignContent | Array<Property$AlignContent>,
  WebkitAlignItems?: Property$AlignItems | Array<Property$AlignItems>,
  WebkitAlignSelf?: Property$AlignSelf | Array<Property$AlignSelf>,
  WebkitAnimationDelay?: Property$AnimationDelay<TTime> | Array<Property$AnimationDelay<TTime>>,
  WebkitAnimationDirection?: Property$AnimationDirection | Array<Property$AnimationDirection>,
  WebkitAnimationDuration?: Property$AnimationDuration<TTime> | Array<Property$AnimationDuration<TTime>>,
  WebkitAnimationFillMode?: Property$AnimationFillMode | Array<Property$AnimationFillMode>,
  WebkitAnimationIterationCount?: Property$AnimationIterationCount | Array<Property$AnimationIterationCount>,
  WebkitAnimationName?: Property$AnimationName | Array<Property$AnimationName>,
  WebkitAnimationPlayState?: Property$AnimationPlayState | Array<Property$AnimationPlayState>,
  WebkitAnimationTimingFunction?: Property$AnimationTimingFunction | Array<Property$AnimationTimingFunction>,
  WebkitAppearance?: Property$WebkitAppearance | Array<Property$WebkitAppearance>,
  WebkitBackdropFilter?: Property$BackdropFilter | Array<Property$BackdropFilter>,
  WebkitBackfaceVisibility?: Property$BackfaceVisibility | Array<Property$BackfaceVisibility>,
  WebkitBackgroundClip?: Property$BackgroundClip | Array<Property$BackgroundClip>,
  WebkitBackgroundOrigin?: Property$BackgroundOrigin | Array<Property$BackgroundOrigin>,
  WebkitBackgroundSize?: Property$BackgroundSize<TLength> | Array<Property$BackgroundSize<TLength>>,
  WebkitBorderBeforeColor?: Property$WebkitBorderBeforeColor | Array<Property$WebkitBorderBeforeColor>,
  WebkitBorderBeforeStyle?: Property$WebkitBorderBeforeStyle | Array<Property$WebkitBorderBeforeStyle>,
  WebkitBorderBeforeWidth?: Property$WebkitBorderBeforeWidth<TLength> | Array<Property$WebkitBorderBeforeWidth<TLength>>,
  WebkitBorderBottomLeftRadius?: Property$BorderBottomLeftRadius<TLength> | Array<Property$BorderBottomLeftRadius<TLength>>,
  WebkitBorderBottomRightRadius?: Property$BorderBottomRightRadius<TLength> | Array<Property$BorderBottomRightRadius<TLength>>,
  WebkitBorderImageSlice?: Property$BorderImageSlice | Array<Property$BorderImageSlice>,
  WebkitBorderTopLeftRadius?: Property$BorderTopLeftRadius<TLength> | Array<Property$BorderTopLeftRadius<TLength>>,
  WebkitBorderTopRightRadius?: Property$BorderTopRightRadius<TLength> | Array<Property$BorderTopRightRadius<TLength>>,
  WebkitBoxDecorationBreak?: Property$BoxDecorationBreak | Array<Property$BoxDecorationBreak>,
  WebkitBoxReflect?: Property$WebkitBoxReflect<TLength> | Array<Property$WebkitBoxReflect<TLength>>,
  WebkitBoxShadow?: Property$BoxShadow | Array<Property$BoxShadow>,
  WebkitBoxSizing?: Property$BoxSizing | Array<Property$BoxSizing>,
  WebkitClipPath?: Property$ClipPath | Array<Property$ClipPath>,
  WebkitColumnCount?: Property$ColumnCount | Array<Property$ColumnCount>,
  WebkitColumnFill?: Property$ColumnFill | Array<Property$ColumnFill>,
  WebkitColumnGap?: Property$ColumnGap<TLength> | Array<Property$ColumnGap<TLength>>,
  WebkitColumnRuleColor?: Property$ColumnRuleColor | Array<Property$ColumnRuleColor>,
  WebkitColumnRuleStyle?: Property$ColumnRuleStyle | Array<Property$ColumnRuleStyle>,
  WebkitColumnRuleWidth?: Property$ColumnRuleWidth<TLength> | Array<Property$ColumnRuleWidth<TLength>>,
  WebkitColumnSpan?: Property$ColumnSpan | Array<Property$ColumnSpan>,
  WebkitColumnWidth?: Property$ColumnWidth<TLength> | Array<Property$ColumnWidth<TLength>>,
  WebkitFilter?: Property$Filter | Array<Property$Filter>,
  WebkitFlexBasis?: Property$FlexBasis<TLength> | Array<Property$FlexBasis<TLength>>,
  WebkitFlexDirection?: Property$FlexDirection | Array<Property$FlexDirection>,
  WebkitFlexGrow?: Property$FlexGrow | Array<Property$FlexGrow>,
  WebkitFlexShrink?: Property$FlexShrink | Array<Property$FlexShrink>,
  WebkitFlexWrap?: Property$FlexWrap | Array<Property$FlexWrap>,
  WebkitFontFeatureSettings?: Property$FontFeatureSettings | Array<Property$FontFeatureSettings>,
  WebkitFontKerning?: Property$FontKerning | Array<Property$FontKerning>,
  WebkitFontSmoothing?: Property$FontSmooth<TLength> | Array<Property$FontSmooth<TLength>>,
  WebkitFontVariantLigatures?: Property$FontVariantLigatures | Array<Property$FontVariantLigatures>,
  WebkitHyphens?: Property$Hyphens | Array<Property$Hyphens>,
  WebkitJustifyContent?: Property$JustifyContent | Array<Property$JustifyContent>,
  WebkitLineBreak?: Property$LineBreak | Array<Property$LineBreak>,
  WebkitLineClamp?: Property$WebkitLineClamp | Array<Property$WebkitLineClamp>,
  WebkitMarginEnd?: Property$MarginInlineEnd<TLength> | Array<Property$MarginInlineEnd<TLength>>,
  WebkitMarginStart?: Property$MarginInlineStart<TLength> | Array<Property$MarginInlineStart<TLength>>,
  WebkitMaskAttachment?: Property$WebkitMaskAttachment | Array<Property$WebkitMaskAttachment>,
  WebkitMaskClip?: Property$WebkitMaskClip | Array<Property$WebkitMaskClip>,
  WebkitMaskComposite?: Property$WebkitMaskComposite | Array<Property$WebkitMaskComposite>,
  WebkitMaskImage?: Property$WebkitMaskImage | Array<Property$WebkitMaskImage>,
  WebkitMaskOrigin?: Property$WebkitMaskOrigin | Array<Property$WebkitMaskOrigin>,
  WebkitMaskPosition?: Property$WebkitMaskPosition<TLength> | Array<Property$WebkitMaskPosition<TLength>>,
  WebkitMaskPositionX?: Property$WebkitMaskPositionX<TLength> | Array<Property$WebkitMaskPositionX<TLength>>,
  WebkitMaskPositionY?: Property$WebkitMaskPositionY<TLength> | Array<Property$WebkitMaskPositionY<TLength>>,
  WebkitMaskRepeat?: Property$WebkitMaskRepeat | Array<Property$WebkitMaskRepeat>,
  WebkitMaskRepeatX?: Property$WebkitMaskRepeatX | Array<Property$WebkitMaskRepeatX>,
  WebkitMaskRepeatY?: Property$WebkitMaskRepeatY | Array<Property$WebkitMaskRepeatY>,
  WebkitMaskSize?: Property$WebkitMaskSize<TLength> | Array<Property$WebkitMaskSize<TLength>>,
  WebkitMaxInlineSize?: Property$MaxInlineSize<TLength> | Array<Property$MaxInlineSize<TLength>>,
  WebkitOrder?: Property$Order | Array<Property$Order>,
  WebkitOverflowScrolling?: Property$WebkitOverflowScrolling | Array<Property$WebkitOverflowScrolling>,
  WebkitPaddingEnd?: Property$PaddingInlineEnd<TLength> | Array<Property$PaddingInlineEnd<TLength>>,
  WebkitPaddingStart?: Property$PaddingInlineStart<TLength> | Array<Property$PaddingInlineStart<TLength>>,
  WebkitPerspective?: Property$Perspective<TLength> | Array<Property$Perspective<TLength>>,
  WebkitPerspectiveOrigin?: Property$PerspectiveOrigin<TLength> | Array<Property$PerspectiveOrigin<TLength>>,
  WebkitPrintColorAdjust?: Property$ColorAdjust | Array<Property$ColorAdjust>,
  WebkitRubyPosition?: Property$RubyPosition | Array<Property$RubyPosition>,
  WebkitScrollSnapType?: Property$ScrollSnapType | Array<Property$ScrollSnapType>,
  WebkitShapeMargin?: Property$ShapeMargin<TLength> | Array<Property$ShapeMargin<TLength>>,
  WebkitTapHighlightColor?: Property$WebkitTapHighlightColor | Array<Property$WebkitTapHighlightColor>,
  WebkitTextCombine?: Property$TextCombineUpright | Array<Property$TextCombineUpright>,
  WebkitTextDecorationColor?: Property$TextDecorationColor | Array<Property$TextDecorationColor>,
  WebkitTextDecorationLine?: Property$TextDecorationLine | Array<Property$TextDecorationLine>,
  WebkitTextDecorationSkip?: Property$TextDecorationSkip | Array<Property$TextDecorationSkip>,
  WebkitTextDecorationStyle?: Property$TextDecorationStyle | Array<Property$TextDecorationStyle>,
  WebkitTextEmphasisColor?: Property$TextEmphasisColor | Array<Property$TextEmphasisColor>,
  WebkitTextEmphasisPosition?: Property$TextEmphasisPosition | Array<Property$TextEmphasisPosition>,
  WebkitTextEmphasisStyle?: Property$TextEmphasisStyle | Array<Property$TextEmphasisStyle>,
  WebkitTextFillColor?: Property$WebkitTextFillColor | Array<Property$WebkitTextFillColor>,
  WebkitTextOrientation?: Property$TextOrientation | Array<Property$TextOrientation>,
  WebkitTextSizeAdjust?: Property$TextSizeAdjust | Array<Property$TextSizeAdjust>,
  WebkitTextStrokeColor?: Property$WebkitTextStrokeColor | Array<Property$WebkitTextStrokeColor>,
  WebkitTextStrokeWidth?: Property$WebkitTextStrokeWidth<TLength> | Array<Property$WebkitTextStrokeWidth<TLength>>,
  WebkitTextUnderlinePosition?: Property$TextUnderlinePosition | Array<Property$TextUnderlinePosition>,
  WebkitTouchCallout?: Property$WebkitTouchCallout | Array<Property$WebkitTouchCallout>,
  WebkitTransform?: Property$Transform | Array<Property$Transform>,
  WebkitTransformOrigin?: Property$TransformOrigin<TLength> | Array<Property$TransformOrigin<TLength>>,
  WebkitTransformStyle?: Property$TransformStyle | Array<Property$TransformStyle>,
  WebkitTransitionDelay?: Property$TransitionDelay<TTime> | Array<Property$TransitionDelay<TTime>>,
  WebkitTransitionDuration?: Property$TransitionDuration<TTime> | Array<Property$TransitionDuration<TTime>>,
  WebkitTransitionProperty?: Property$TransitionProperty | Array<Property$TransitionProperty>,
  WebkitTransitionTimingFunction?: Property$TransitionTimingFunction | Array<Property$TransitionTimingFunction>,
  WebkitUserModify?: Property$WebkitUserModify | Array<Property$WebkitUserModify>,
  WebkitUserSelect?: Property$UserSelect | Array<Property$UserSelect>,
  WebkitWritingMode?: Property$WritingMode | Array<Property$WritingMode>,
|};

export type VendorShorthandPropertiesFallback<TLength = string | 0, TTime = string> = {|
  MozAnimation?: Property$Animation<TTime> | Array<Property$Animation<TTime>>,
  MozBorderImage?: Property$BorderImage | Array<Property$BorderImage>,
  MozColumnRule?: Property$ColumnRule<TLength> | Array<Property$ColumnRule<TLength>>,
  MozColumns?: Property$Columns<TLength> | Array<Property$Columns<TLength>>,
  MozTransition?: Property$Transition<TTime> | Array<Property$Transition<TTime>>,
  msContentZoomLimit?: Property$MsContentZoomLimit | Array<Property$MsContentZoomLimit>,
  msContentZoomSnap?: Property$MsContentZoomSnap | Array<Property$MsContentZoomSnap>,
  msFlex?: Property$Flex<TLength> | Array<Property$Flex<TLength>>,
  msScrollLimit?: Property$MsScrollLimit | Array<Property$MsScrollLimit>,
  msScrollSnapX?: Property$MsScrollSnapX | Array<Property$MsScrollSnapX>,
  msScrollSnapY?: Property$MsScrollSnapY | Array<Property$MsScrollSnapY>,
  msTransition?: Property$Transition<TTime> | Array<Property$Transition<TTime>>,
  WebkitAnimation?: Property$Animation<TTime> | Array<Property$Animation<TTime>>,
  WebkitBorderBefore?: Property$WebkitBorderBefore<TLength> | Array<Property$WebkitBorderBefore<TLength>>,
  WebkitBorderImage?: Property$BorderImage | Array<Property$BorderImage>,
  WebkitBorderRadius?: Property$BorderRadius<TLength> | Array<Property$BorderRadius<TLength>>,
  WebkitColumnRule?: Property$ColumnRule<TLength> | Array<Property$ColumnRule<TLength>>,
  WebkitColumns?: Property$Columns<TLength> | Array<Property$Columns<TLength>>,
  WebkitFlex?: Property$Flex<TLength> | Array<Property$Flex<TLength>>,
  WebkitFlexFlow?: Property$FlexFlow | Array<Property$FlexFlow>,
  WebkitMask?: Property$WebkitMask<TLength> | Array<Property$WebkitMask<TLength>>,
  WebkitTextEmphasis?: Property$TextEmphasis | Array<Property$TextEmphasis>,
  WebkitTextStroke?: Property$WebkitTextStroke<TLength> | Array<Property$WebkitTextStroke<TLength>>,
  WebkitTransition?: Property$Transition<TTime> | Array<Property$Transition<TTime>>,
|};

export type VendorPropertiesFallback<TLength = string | 0, TTime = string> = {|
  ...VendorLonghandPropertiesFallback<TLength, TTime>,
  ...VendorShorthandPropertiesFallback<TLength, TTime>,
|};

export type ObsoletePropertiesFallback<TLength = string | 0, TTime = string> = {|
  azimuth?: Property$Azimuth | Array<Property$Azimuth>,
  boxAlign?: Property$BoxAlign | Array<Property$BoxAlign>,
  boxDirection?: Property$BoxDirection | Array<Property$BoxDirection>,
  boxFlex?: Property$BoxFlex | Array<Property$BoxFlex>,
  boxFlexGroup?: Property$BoxFlexGroup | Array<Property$BoxFlexGroup>,
  boxLines?: Property$BoxLines | Array<Property$BoxLines>,
  boxOrdinalGroup?: Property$BoxOrdinalGroup | Array<Property$BoxOrdinalGroup>,
  boxOrient?: Property$BoxOrient | Array<Property$BoxOrient>,
  boxPack?: Property$BoxPack | Array<Property$BoxPack>,
  clip?: Property$Clip | Array<Property$Clip>,
  fontVariantAlternates?: Property$FontVariantAlternates | Array<Property$FontVariantAlternates>,
  gridColumnGap?: Property$GridColumnGap<TLength> | Array<Property$GridColumnGap<TLength>>,
  gridGap?: Property$GridGap<TLength> | Array<Property$GridGap<TLength>>,
  gridRowGap?: Property$GridRowGap<TLength> | Array<Property$GridRowGap<TLength>>,
  imeMode?: Property$ImeMode | Array<Property$ImeMode>,
  offsetBlock?: Property$InsetBlock<TLength> | Array<Property$InsetBlock<TLength>>,
  offsetBlockEnd?: Property$InsetBlockEnd<TLength> | Array<Property$InsetBlockEnd<TLength>>,
  offsetBlockStart?: Property$InsetBlockStart<TLength> | Array<Property$InsetBlockStart<TLength>>,
  offsetInline?: Property$InsetInline<TLength> | Array<Property$InsetInline<TLength>>,
  offsetInlineEnd?: Property$InsetInlineEnd<TLength> | Array<Property$InsetInlineEnd<TLength>>,
  offsetInlineStart?: Property$InsetInlineStart<TLength> | Array<Property$InsetInlineStart<TLength>>,
  scrollSnapCoordinate?: Property$ScrollSnapCoordinate<TLength> | Array<Property$ScrollSnapCoordinate<TLength>>,
  scrollSnapDestination?: Property$ScrollSnapDestination<TLength> | Array<Property$ScrollSnapDestination<TLength>>,
  scrollSnapPointsX?: Property$ScrollSnapPointsX | Array<Property$ScrollSnapPointsX>,
  scrollSnapPointsY?: Property$ScrollSnapPointsY | Array<Property$ScrollSnapPointsY>,
  scrollSnapTypeX?: Property$ScrollSnapTypeX | Array<Property$ScrollSnapTypeX>,
  scrollSnapTypeY?: Property$ScrollSnapTypeY | Array<Property$ScrollSnapTypeY>,
  scrollbarTrackColor?: Property$MsScrollbarTrackColor | Array<Property$MsScrollbarTrackColor>,
  textCombineHorizontal?: Property$TextCombineUpright | Array<Property$TextCombineUpright>,
  KhtmlBoxAlign?: Property$BoxAlign | Array<Property$BoxAlign>,
  KhtmlBoxDirection?: Property$BoxDirection | Array<Property$BoxDirection>,
  KhtmlBoxFlex?: Property$BoxFlex | Array<Property$BoxFlex>,
  KhtmlBoxFlexGroup?: Property$BoxFlexGroup | Array<Property$BoxFlexGroup>,
  KhtmlBoxLines?: Property$BoxLines | Array<Property$BoxLines>,
  KhtmlBoxOrdinalGroup?: Property$BoxOrdinalGroup | Array<Property$BoxOrdinalGroup>,
  KhtmlBoxOrient?: Property$BoxOrient | Array<Property$BoxOrient>,
  KhtmlBoxPack?: Property$BoxPack | Array<Property$BoxPack>,
  KhtmlLineBreak?: Property$LineBreak | Array<Property$LineBreak>,
  KhtmlOpacity?: Property$Opacity | Array<Property$Opacity>,
  KhtmlUserSelect?: Property$UserSelect | Array<Property$UserSelect>,
  MozBackgroundClip?: Property$BackgroundClip | Array<Property$BackgroundClip>,
  MozBackgroundInlinePolicy?: Property$BoxDecorationBreak | Array<Property$BoxDecorationBreak>,
  MozBackgroundOrigin?: Property$BackgroundOrigin | Array<Property$BackgroundOrigin>,
  MozBackgroundSize?: Property$BackgroundSize<TLength> | Array<Property$BackgroundSize<TLength>>,
  MozBinding?: Property$MozBinding | Array<Property$MozBinding>,
  MozBorderRadius?: Property$BorderRadius<TLength> | Array<Property$BorderRadius<TLength>>,
  MozBorderRadiusBottomleft?: Property$BorderBottomLeftRadius<TLength> | Array<Property$BorderBottomLeftRadius<TLength>>,
  MozBorderRadiusBottomright?: Property$BorderBottomRightRadius<TLength> | Array<Property$BorderBottomRightRadius<TLength>>,
  MozBorderRadiusTopleft?: Property$BorderTopLeftRadius<TLength> | Array<Property$BorderTopLeftRadius<TLength>>,
  MozBorderRadiusTopright?: Property$BorderTopRightRadius<TLength> | Array<Property$BorderTopRightRadius<TLength>>,
  MozBoxAlign?: Property$BoxAlign | Array<Property$BoxAlign>,
  MozBoxDirection?: Property$BoxDirection | Array<Property$BoxDirection>,
  MozBoxFlex?: Property$BoxFlex | Array<Property$BoxFlex>,
  MozBoxOrdinalGroup?: Property$BoxOrdinalGroup | Array<Property$BoxOrdinalGroup>,
  MozBoxOrient?: Property$BoxOrient | Array<Property$BoxOrient>,
  MozBoxPack?: Property$BoxPack | Array<Property$BoxPack>,
  MozBoxShadow?: Property$BoxShadow | Array<Property$BoxShadow>,
  MozFloatEdge?: Property$MozFloatEdge | Array<Property$MozFloatEdge>,
  MozForceBrokenImageIcon?: Property$MozForceBrokenImageIcon | Array<Property$MozForceBrokenImageIcon>,
  MozOpacity?: Property$Opacity | Array<Property$Opacity>,
  MozOutline?: Property$Outline<TLength> | Array<Property$Outline<TLength>>,
  MozOutlineColor?: Property$OutlineColor | Array<Property$OutlineColor>,
  MozOutlineRadius?: Property$MozOutlineRadius<TLength> | Array<Property$MozOutlineRadius<TLength>>,
  MozOutlineRadiusBottomleft?: Property$MozOutlineRadiusBottomleft<TLength> | Array<Property$MozOutlineRadiusBottomleft<TLength>>,
  MozOutlineRadiusBottomright?: Property$MozOutlineRadiusBottomright<TLength> | Array<Property$MozOutlineRadiusBottomright<TLength>>,
  MozOutlineRadiusTopleft?: Property$MozOutlineRadiusTopleft<TLength> | Array<Property$MozOutlineRadiusTopleft<TLength>>,
  MozOutlineRadiusTopright?: Property$MozOutlineRadiusTopright<TLength> | Array<Property$MozOutlineRadiusTopright<TLength>>,
  MozOutlineStyle?: Property$OutlineStyle | Array<Property$OutlineStyle>,
  MozOutlineWidth?: Property$OutlineWidth<TLength> | Array<Property$OutlineWidth<TLength>>,
  MozTextAlignLast?: Property$TextAlignLast | Array<Property$TextAlignLast>,
  MozTextDecorationColor?: Property$TextDecorationColor | Array<Property$TextDecorationColor>,
  MozTextDecorationLine?: Property$TextDecorationLine | Array<Property$TextDecorationLine>,
  MozTextDecorationStyle?: Property$TextDecorationStyle | Array<Property$TextDecorationStyle>,
  MozUserInput?: Property$MozUserInput | Array<Property$MozUserInput>,
  msImeMode?: Property$ImeMode | Array<Property$ImeMode>,
  msScrollbarTrackColor?: Property$MsScrollbarTrackColor | Array<Property$MsScrollbarTrackColor>,
  OAnimation?: Property$Animation<TTime> | Array<Property$Animation<TTime>>,
  OAnimationDelay?: Property$AnimationDelay<TTime> | Array<Property$AnimationDelay<TTime>>,
  OAnimationDirection?: Property$AnimationDirection | Array<Property$AnimationDirection>,
  OAnimationDuration?: Property$AnimationDuration<TTime> | Array<Property$AnimationDuration<TTime>>,
  OAnimationFillMode?: Property$AnimationFillMode | Array<Property$AnimationFillMode>,
  OAnimationIterationCount?: Property$AnimationIterationCount | Array<Property$AnimationIterationCount>,
  OAnimationName?: Property$AnimationName | Array<Property$AnimationName>,
  OAnimationPlayState?: Property$AnimationPlayState | Array<Property$AnimationPlayState>,
  OAnimationTimingFunction?: Property$AnimationTimingFunction | Array<Property$AnimationTimingFunction>,
  OBackgroundSize?: Property$BackgroundSize<TLength> | Array<Property$BackgroundSize<TLength>>,
  OBorderImage?: Property$BorderImage | Array<Property$BorderImage>,
  OTransform?: Property$Transform | Array<Property$Transform>,
  OTransition?: Property$Transition<TTime> | Array<Property$Transition<TTime>>,
  OTransitionDelay?: Property$TransitionDelay<TTime> | Array<Property$TransitionDelay<TTime>>,
  OTransitionDuration?: Property$TransitionDuration<TTime> | Array<Property$TransitionDuration<TTime>>,
  OTransitionProperty?: Property$TransitionProperty | Array<Property$TransitionProperty>,
  OTransitionTimingFunction?: Property$TransitionTimingFunction | Array<Property$TransitionTimingFunction>,
  WebkitBoxAlign?: Property$BoxAlign | Array<Property$BoxAlign>,
  WebkitBoxDirection?: Property$BoxDirection | Array<Property$BoxDirection>,
  WebkitBoxFlex?: Property$BoxFlex | Array<Property$BoxFlex>,
  WebkitBoxFlexGroup?: Property$BoxFlexGroup | Array<Property$BoxFlexGroup>,
  WebkitBoxLines?: Property$BoxLines | Array<Property$BoxLines>,
  WebkitBoxOrdinalGroup?: Property$BoxOrdinalGroup | Array<Property$BoxOrdinalGroup>,
  WebkitBoxOrient?: Property$BoxOrient | Array<Property$BoxOrient>,
  WebkitBoxPack?: Property$BoxPack | Array<Property$BoxPack>,
  WebkitScrollSnapPointsX?: Property$ScrollSnapPointsX | Array<Property$ScrollSnapPointsX>,
  WebkitScrollSnapPointsY?: Property$ScrollSnapPointsY | Array<Property$ScrollSnapPointsY>,
|};

export type SvgPropertiesFallback<TLength = string | 0, TTime = string> = {|
  alignmentBaseline?: Property$AlignmentBaseline | Array<Property$AlignmentBaseline>,
  baselineShift?: Property$BaselineShift<TLength> | Array<Property$BaselineShift<TLength>>,
  clip?: Property$Clip | Array<Property$Clip>,
  clipPath?: Property$ClipPath | Array<Property$ClipPath>,
  clipRule?: Property$ClipRule | Array<Property$ClipRule>,
  color?: Property$Color | Array<Property$Color>,
  colorInterpolation?: Property$ColorInterpolation | Array<Property$ColorInterpolation>,
  colorRendering?: Property$ColorRendering | Array<Property$ColorRendering>,
  cursor?: Property$Cursor | Array<Property$Cursor>,
  direction?: Property$Direction | Array<Property$Direction>,
  display?: Property$Display | Array<Property$Display>,
  dominantBaseline?: Property$DominantBaseline | Array<Property$DominantBaseline>,
  fill?: Property$Fill | Array<Property$Fill>,
  fillOpacity?: Property$FillOpacity | Array<Property$FillOpacity>,
  fillRule?: Property$FillRule | Array<Property$FillRule>,
  filter?: Property$Filter | Array<Property$Filter>,
  floodColor?: Property$FloodColor | Array<Property$FloodColor>,
  floodOpacity?: Property$FloodOpacity | Array<Property$FloodOpacity>,
  font?: Property$Font | Array<Property$Font>,
  fontFamily?: Property$FontFamily | Array<Property$FontFamily>,
  fontSize?: Property$FontSize<TLength> | Array<Property$FontSize<TLength>>,
  fontSizeAdjust?: Property$FontSizeAdjust | Array<Property$FontSizeAdjust>,
  fontStretch?: Property$FontStretch | Array<Property$FontStretch>,
  fontStyle?: Property$FontStyle | Array<Property$FontStyle>,
  fontVariant?: Property$FontVariant | Array<Property$FontVariant>,
  fontWeight?: Property$FontWeight | Array<Property$FontWeight>,
  glyphOrientationVertical?: Property$GlyphOrientationVertical | Array<Property$GlyphOrientationVertical>,
  imageRendering?: Property$ImageRendering | Array<Property$ImageRendering>,
  letterSpacing?: Property$LetterSpacing<TLength> | Array<Property$LetterSpacing<TLength>>,
  lightingColor?: Property$LightingColor | Array<Property$LightingColor>,
  lineHeight?: Property$LineHeight<TLength> | Array<Property$LineHeight<TLength>>,
  marker?: Property$Marker | Array<Property$Marker>,
  markerEnd?: Property$MarkerEnd | Array<Property$MarkerEnd>,
  markerMid?: Property$MarkerMid | Array<Property$MarkerMid>,
  markerStart?: Property$MarkerStart | Array<Property$MarkerStart>,
  mask?: Property$Mask<TLength> | Array<Property$Mask<TLength>>,
  opacity?: Property$Opacity | Array<Property$Opacity>,
  overflow?: Property$Overflow | Array<Property$Overflow>,
  paintOrder?: Property$PaintOrder | Array<Property$PaintOrder>,
  pointerEvents?: Property$PointerEvents | Array<Property$PointerEvents>,
  shapeRendering?: Property$ShapeRendering | Array<Property$ShapeRendering>,
  stopColor?: Property$StopColor | Array<Property$StopColor>,
  stopOpacity?: Property$StopOpacity | Array<Property$StopOpacity>,
  stroke?: Property$Stroke | Array<Property$Stroke>,
  strokeDasharray?: Property$StrokeDasharray<TLength> | Array<Property$StrokeDasharray<TLength>>,
  strokeDashoffset?: Property$StrokeDashoffset<TLength> | Array<Property$StrokeDashoffset<TLength>>,
  strokeLinecap?: Property$StrokeLinecap | Array<Property$StrokeLinecap>,
  strokeLinejoin?: Property$StrokeLinejoin | Array<Property$StrokeLinejoin>,
  strokeMiterlimit?: Property$StrokeMiterlimit | Array<Property$StrokeMiterlimit>,
  strokeOpacity?: Property$StrokeOpacity | Array<Property$StrokeOpacity>,
  strokeWidth?: Property$StrokeWidth<TLength> | Array<Property$StrokeWidth<TLength>>,
  textAnchor?: Property$TextAnchor | Array<Property$TextAnchor>,
  textDecoration?: Property$TextDecoration<TLength> | Array<Property$TextDecoration<TLength>>,
  textRendering?: Property$TextRendering | Array<Property$TextRendering>,
  unicodeBidi?: Property$UnicodeBidi | Array<Property$UnicodeBidi>,
  vectorEffect?: Property$VectorEffect | Array<Property$VectorEffect>,
  visibility?: Property$Visibility | Array<Property$Visibility>,
  whiteSpace?: Property$WhiteSpace | Array<Property$WhiteSpace>,
  wordSpacing?: Property$WordSpacing<TLength> | Array<Property$WordSpacing<TLength>>,
  writingMode?: Property$WritingMode | Array<Property$WritingMode>,
|};

export type PropertiesFallback<TLength = string | 0, TTime = string> = {|
  ...StandardPropertiesFallback<TLength, TTime>,
  ...VendorPropertiesFallback<TLength, TTime>,
  ...ObsoletePropertiesFallback<TLength, TTime>,
  ...SvgPropertiesFallback<TLength, TTime>,
|};

export type StandardLonghandPropertiesHyphenFallback<TLength = string | 0, TTime = string> = {|
  "align-content"?: Property$AlignContent | Array<Property$AlignContent>,
  "align-items"?: Property$AlignItems | Array<Property$AlignItems>,
  "align-self"?: Property$AlignSelf | Array<Property$AlignSelf>,
  "align-tracks"?: Property$AlignTracks | Array<Property$AlignTracks>,
  "animation-delay"?: Property$AnimationDelay<TTime> | Array<Property$AnimationDelay<TTime>>,
  "animation-direction"?: Property$AnimationDirection | Array<Property$AnimationDirection>,
  "animation-duration"?: Property$AnimationDuration<TTime> | Array<Property$AnimationDuration<TTime>>,
  "animation-fill-mode"?: Property$AnimationFillMode | Array<Property$AnimationFillMode>,
  "animation-iteration-count"?: Property$AnimationIterationCount | Array<Property$AnimationIterationCount>,
  "animation-name"?: Property$AnimationName | Array<Property$AnimationName>,
  "animation-play-state"?: Property$AnimationPlayState | Array<Property$AnimationPlayState>,
  "animation-timing-function"?: Property$AnimationTimingFunction | Array<Property$AnimationTimingFunction>,
  appearance?: Property$Appearance | Array<Property$Appearance>,
  "aspect-ratio"?: Property$AspectRatio | Array<Property$AspectRatio>,
  "backdrop-filter"?: Property$BackdropFilter | Array<Property$BackdropFilter>,
  "backface-visibility"?: Property$BackfaceVisibility | Array<Property$BackfaceVisibility>,
  "background-attachment"?: Property$BackgroundAttachment | Array<Property$BackgroundAttachment>,
  "background-blend-mode"?: Property$BackgroundBlendMode | Array<Property$BackgroundBlendMode>,
  "background-clip"?: Property$BackgroundClip | Array<Property$BackgroundClip>,
  "background-color"?: Property$BackgroundColor | Array<Property$BackgroundColor>,
  "background-image"?: Property$BackgroundImage | Array<Property$BackgroundImage>,
  "background-origin"?: Property$BackgroundOrigin | Array<Property$BackgroundOrigin>,
  "background-position"?: Property$BackgroundPosition<TLength> | Array<Property$BackgroundPosition<TLength>>,
  "background-position-x"?: Property$BackgroundPositionX<TLength> | Array<Property$BackgroundPositionX<TLength>>,
  "background-position-y"?: Property$BackgroundPositionY<TLength> | Array<Property$BackgroundPositionY<TLength>>,
  "background-repeat"?: Property$BackgroundRepeat | Array<Property$BackgroundRepeat>,
  "background-size"?: Property$BackgroundSize<TLength> | Array<Property$BackgroundSize<TLength>>,
  "block-overflow"?: Property$BlockOverflow | Array<Property$BlockOverflow>,
  "block-size"?: Property$BlockSize<TLength> | Array<Property$BlockSize<TLength>>,
  "border-block-color"?: Property$BorderBlockColor | Array<Property$BorderBlockColor>,
  "border-block-end-color"?: Property$BorderBlockEndColor | Array<Property$BorderBlockEndColor>,
  "border-block-end-style"?: Property$BorderBlockEndStyle | Array<Property$BorderBlockEndStyle>,
  "border-block-end-width"?: Property$BorderBlockEndWidth<TLength> | Array<Property$BorderBlockEndWidth<TLength>>,
  "border-block-start-color"?: Property$BorderBlockStartColor | Array<Property$BorderBlockStartColor>,
  "border-block-start-style"?: Property$BorderBlockStartStyle | Array<Property$BorderBlockStartStyle>,
  "border-block-start-width"?: Property$BorderBlockStartWidth<TLength> | Array<Property$BorderBlockStartWidth<TLength>>,
  "border-block-style"?: Property$BorderBlockStyle | Array<Property$BorderBlockStyle>,
  "border-block-width"?: Property$BorderBlockWidth<TLength> | Array<Property$BorderBlockWidth<TLength>>,
  "border-bottom-color"?: Property$BorderBottomColor | Array<Property$BorderBottomColor>,
  "border-bottom-left-radius"?: Property$BorderBottomLeftRadius<TLength> | Array<Property$BorderBottomLeftRadius<TLength>>,
  "border-bottom-right-radius"?: Property$BorderBottomRightRadius<TLength> | Array<Property$BorderBottomRightRadius<TLength>>,
  "border-bottom-style"?: Property$BorderBottomStyle | Array<Property$BorderBottomStyle>,
  "border-bottom-width"?: Property$BorderBottomWidth<TLength> | Array<Property$BorderBottomWidth<TLength>>,
  "border-collapse"?: Property$BorderCollapse | Array<Property$BorderCollapse>,
  "border-end-end-radius"?: Property$BorderEndEndRadius<TLength> | Array<Property$BorderEndEndRadius<TLength>>,
  "border-end-start-radius"?: Property$BorderEndStartRadius<TLength> | Array<Property$BorderEndStartRadius<TLength>>,
  "border-image-outset"?: Property$BorderImageOutset<TLength> | Array<Property$BorderImageOutset<TLength>>,
  "border-image-repeat"?: Property$BorderImageRepeat | Array<Property$BorderImageRepeat>,
  "border-image-slice"?: Property$BorderImageSlice | Array<Property$BorderImageSlice>,
  "border-image-source"?: Property$BorderImageSource | Array<Property$BorderImageSource>,
  "border-image-width"?: Property$BorderImageWidth<TLength> | Array<Property$BorderImageWidth<TLength>>,
  "border-inline-color"?: Property$BorderInlineColor | Array<Property$BorderInlineColor>,
  "border-inline-end-color"?: Property$BorderInlineEndColor | Array<Property$BorderInlineEndColor>,
  "border-inline-end-style"?: Property$BorderInlineEndStyle | Array<Property$BorderInlineEndStyle>,
  "border-inline-end-width"?: Property$BorderInlineEndWidth<TLength> | Array<Property$BorderInlineEndWidth<TLength>>,
  "border-inline-start-color"?: Property$BorderInlineStartColor | Array<Property$BorderInlineStartColor>,
  "border-inline-start-style"?: Property$BorderInlineStartStyle | Array<Property$BorderInlineStartStyle>,
  "border-inline-start-width"?: Property$BorderInlineStartWidth<TLength> | Array<Property$BorderInlineStartWidth<TLength>>,
  "border-inline-style"?: Property$BorderInlineStyle | Array<Property$BorderInlineStyle>,
  "border-inline-width"?: Property$BorderInlineWidth<TLength> | Array<Property$BorderInlineWidth<TLength>>,
  "border-left-color"?: Property$BorderLeftColor | Array<Property$BorderLeftColor>,
  "border-left-style"?: Property$BorderLeftStyle | Array<Property$BorderLeftStyle>,
  "border-left-width"?: Property$BorderLeftWidth<TLength> | Array<Property$BorderLeftWidth<TLength>>,
  "border-right-color"?: Property$BorderRightColor | Array<Property$BorderRightColor>,
  "border-right-style"?: Property$BorderRightStyle | Array<Property$BorderRightStyle>,
  "border-right-width"?: Property$BorderRightWidth<TLength> | Array<Property$BorderRightWidth<TLength>>,
  "border-spacing"?: Property$BorderSpacing<TLength> | Array<Property$BorderSpacing<TLength>>,
  "border-start-end-radius"?: Property$BorderStartEndRadius<TLength> | Array<Property$BorderStartEndRadius<TLength>>,
  "border-start-start-radius"?: Property$BorderStartStartRadius<TLength> | Array<Property$BorderStartStartRadius<TLength>>,
  "border-top-color"?: Property$BorderTopColor | Array<Property$BorderTopColor>,
  "border-top-left-radius"?: Property$BorderTopLeftRadius<TLength> | Array<Property$BorderTopLeftRadius<TLength>>,
  "border-top-right-radius"?: Property$BorderTopRightRadius<TLength> | Array<Property$BorderTopRightRadius<TLength>>,
  "border-top-style"?: Property$BorderTopStyle | Array<Property$BorderTopStyle>,
  "border-top-width"?: Property$BorderTopWidth<TLength> | Array<Property$BorderTopWidth<TLength>>,
  bottom?: Property$Bottom<TLength> | Array<Property$Bottom<TLength>>,
  "box-decoration-break"?: Property$BoxDecorationBreak | Array<Property$BoxDecorationBreak>,
  "box-shadow"?: Property$BoxShadow | Array<Property$BoxShadow>,
  "box-sizing"?: Property$BoxSizing | Array<Property$BoxSizing>,
  "break-after"?: Property$BreakAfter | Array<Property$BreakAfter>,
  "break-before"?: Property$BreakBefore | Array<Property$BreakBefore>,
  "break-inside"?: Property$BreakInside | Array<Property$BreakInside>,
  "caption-side"?: Property$CaptionSide | Array<Property$CaptionSide>,
  "caret-color"?: Property$CaretColor | Array<Property$CaretColor>,
  clear?: Property$Clear | Array<Property$Clear>,
  "clip-path"?: Property$ClipPath | Array<Property$ClipPath>,
  color?: Property$Color | Array<Property$Color>,
  "color-adjust"?: Property$ColorAdjust | Array<Property$ColorAdjust>,
  "column-count"?: Property$ColumnCount | Array<Property$ColumnCount>,
  "column-fill"?: Property$ColumnFill | Array<Property$ColumnFill>,
  "column-gap"?: Property$ColumnGap<TLength> | Array<Property$ColumnGap<TLength>>,
  "column-rule-color"?: Property$ColumnRuleColor | Array<Property$ColumnRuleColor>,
  "column-rule-style"?: Property$ColumnRuleStyle | Array<Property$ColumnRuleStyle>,
  "column-rule-width"?: Property$ColumnRuleWidth<TLength> | Array<Property$ColumnRuleWidth<TLength>>,
  "column-span"?: Property$ColumnSpan | Array<Property$ColumnSpan>,
  "column-width"?: Property$ColumnWidth<TLength> | Array<Property$ColumnWidth<TLength>>,
  contain?: Property$Contain | Array<Property$Contain>,
  content?: Property$Content | Array<Property$Content>,
  "content-visibility"?: Property$ContentVisibility | Array<Property$ContentVisibility>,
  "counter-increment"?: Property$CounterIncrement | Array<Property$CounterIncrement>,
  "counter-reset"?: Property$CounterReset | Array<Property$CounterReset>,
  "counter-set"?: Property$CounterSet | Array<Property$CounterSet>,
  cursor?: Property$Cursor | Array<Property$Cursor>,
  direction?: Property$Direction | Array<Property$Direction>,
  display?: Property$Display | Array<Property$Display>,
  "empty-cells"?: Property$EmptyCells | Array<Property$EmptyCells>,
  filter?: Property$Filter | Array<Property$Filter>,
  "flex-basis"?: Property$FlexBasis<TLength> | Array<Property$FlexBasis<TLength>>,
  "flex-direction"?: Property$FlexDirection | Array<Property$FlexDirection>,
  "flex-grow"?: Property$FlexGrow | Array<Property$FlexGrow>,
  "flex-shrink"?: Property$FlexShrink | Array<Property$FlexShrink>,
  "flex-wrap"?: Property$FlexWrap | Array<Property$FlexWrap>,
  float?: Property$Float | Array<Property$Float>,
  "font-family"?: Property$FontFamily | Array<Property$FontFamily>,
  "font-feature-settings"?: Property$FontFeatureSettings | Array<Property$FontFeatureSettings>,
  "font-kerning"?: Property$FontKerning | Array<Property$FontKerning>,
  "font-language-override"?: Property$FontLanguageOverride | Array<Property$FontLanguageOverride>,
  "font-optical-sizing"?: Property$FontOpticalSizing | Array<Property$FontOpticalSizing>,
  "font-size"?: Property$FontSize<TLength> | Array<Property$FontSize<TLength>>,
  "font-size-adjust"?: Property$FontSizeAdjust | Array<Property$FontSizeAdjust>,
  "font-smooth"?: Property$FontSmooth<TLength> | Array<Property$FontSmooth<TLength>>,
  "font-stretch"?: Property$FontStretch | Array<Property$FontStretch>,
  "font-style"?: Property$FontStyle | Array<Property$FontStyle>,
  "font-synthesis"?: Property$FontSynthesis | Array<Property$FontSynthesis>,
  "font-variant"?: Property$FontVariant | Array<Property$FontVariant>,
  "font-variant-caps"?: Property$FontVariantCaps | Array<Property$FontVariantCaps>,
  "font-variant-east-asian"?: Property$FontVariantEastAsian | Array<Property$FontVariantEastAsian>,
  "font-variant-ligatures"?: Property$FontVariantLigatures | Array<Property$FontVariantLigatures>,
  "font-variant-numeric"?: Property$FontVariantNumeric | Array<Property$FontVariantNumeric>,
  "font-variant-position"?: Property$FontVariantPosition | Array<Property$FontVariantPosition>,
  "font-variation-settings"?: Property$FontVariationSettings | Array<Property$FontVariationSettings>,
  "font-weight"?: Property$FontWeight | Array<Property$FontWeight>,
  "forced-color-adjust"?: Property$ForcedColorAdjust | Array<Property$ForcedColorAdjust>,
  "grid-auto-columns"?: Property$GridAutoColumns<TLength> | Array<Property$GridAutoColumns<TLength>>,
  "grid-auto-flow"?: Property$GridAutoFlow | Array<Property$GridAutoFlow>,
  "grid-auto-rows"?: Property$GridAutoRows<TLength> | Array<Property$GridAutoRows<TLength>>,
  "grid-column-end"?: Property$GridColumnEnd | Array<Property$GridColumnEnd>,
  "grid-column-start"?: Property$GridColumnStart | Array<Property$GridColumnStart>,
  "grid-row-end"?: Property$GridRowEnd | Array<Property$GridRowEnd>,
  "grid-row-start"?: Property$GridRowStart | Array<Property$GridRowStart>,
  "grid-template-areas"?: Property$GridTemplateAreas | Array<Property$GridTemplateAreas>,
  "grid-template-columns"?: Property$GridTemplateColumns<TLength> | Array<Property$GridTemplateColumns<TLength>>,
  "grid-template-rows"?: Property$GridTemplateRows<TLength> | Array<Property$GridTemplateRows<TLength>>,
  "hanging-punctuation"?: Property$HangingPunctuation | Array<Property$HangingPunctuation>,
  height?: Property$Height<TLength> | Array<Property$Height<TLength>>,
  hyphens?: Property$Hyphens | Array<Property$Hyphens>,
  "image-orientation"?: Property$ImageOrientation | Array<Property$ImageOrientation>,
  "image-rendering"?: Property$ImageRendering | Array<Property$ImageRendering>,
  "image-resolution"?: Property$ImageResolution | Array<Property$ImageResolution>,
  "initial-letter"?: Property$InitialLetter | Array<Property$InitialLetter>,
  "inline-size"?: Property$InlineSize<TLength> | Array<Property$InlineSize<TLength>>,
  inset?: Property$Inset<TLength> | Array<Property$Inset<TLength>>,
  "inset-block"?: Property$InsetBlock<TLength> | Array<Property$InsetBlock<TLength>>,
  "inset-block-end"?: Property$InsetBlockEnd<TLength> | Array<Property$InsetBlockEnd<TLength>>,
  "inset-block-start"?: Property$InsetBlockStart<TLength> | Array<Property$InsetBlockStart<TLength>>,
  "inset-inline"?: Property$InsetInline<TLength> | Array<Property$InsetInline<TLength>>,
  "inset-inline-end"?: Property$InsetInlineEnd<TLength> | Array<Property$InsetInlineEnd<TLength>>,
  "inset-inline-start"?: Property$InsetInlineStart<TLength> | Array<Property$InsetInlineStart<TLength>>,
  isolation?: Property$Isolation | Array<Property$Isolation>,
  "justify-content"?: Property$JustifyContent | Array<Property$JustifyContent>,
  "justify-items"?: Property$JustifyItems | Array<Property$JustifyItems>,
  "justify-self"?: Property$JustifySelf | Array<Property$JustifySelf>,
  "justify-tracks"?: Property$JustifyTracks | Array<Property$JustifyTracks>,
  left?: Property$Left<TLength> | Array<Property$Left<TLength>>,
  "letter-spacing"?: Property$LetterSpacing<TLength> | Array<Property$LetterSpacing<TLength>>,
  "line-break"?: Property$LineBreak | Array<Property$LineBreak>,
  "line-height"?: Property$LineHeight<TLength> | Array<Property$LineHeight<TLength>>,
  "line-height-step"?: Property$LineHeightStep<TLength> | Array<Property$LineHeightStep<TLength>>,
  "list-style-image"?: Property$ListStyleImage | Array<Property$ListStyleImage>,
  "list-style-position"?: Property$ListStylePosition | Array<Property$ListStylePosition>,
  "list-style-type"?: Property$ListStyleType | Array<Property$ListStyleType>,
  "margin-block"?: Property$MarginBlock<TLength> | Array<Property$MarginBlock<TLength>>,
  "margin-block-end"?: Property$MarginBlockEnd<TLength> | Array<Property$MarginBlockEnd<TLength>>,
  "margin-block-start"?: Property$MarginBlockStart<TLength> | Array<Property$MarginBlockStart<TLength>>,
  "margin-bottom"?: Property$MarginBottom<TLength> | Array<Property$MarginBottom<TLength>>,
  "margin-inline"?: Property$MarginInline<TLength> | Array<Property$MarginInline<TLength>>,
  "margin-inline-end"?: Property$MarginInlineEnd<TLength> | Array<Property$MarginInlineEnd<TLength>>,
  "margin-inline-start"?: Property$MarginInlineStart<TLength> | Array<Property$MarginInlineStart<TLength>>,
  "margin-left"?: Property$MarginLeft<TLength> | Array<Property$MarginLeft<TLength>>,
  "margin-right"?: Property$MarginRight<TLength> | Array<Property$MarginRight<TLength>>,
  "margin-top"?: Property$MarginTop<TLength> | Array<Property$MarginTop<TLength>>,
  "mask-border-mode"?: Property$MaskBorderMode | Array<Property$MaskBorderMode>,
  "mask-border-outset"?: Property$MaskBorderOutset<TLength> | Array<Property$MaskBorderOutset<TLength>>,
  "mask-border-repeat"?: Property$MaskBorderRepeat | Array<Property$MaskBorderRepeat>,
  "mask-border-slice"?: Property$MaskBorderSlice | Array<Property$MaskBorderSlice>,
  "mask-border-source"?: Property$MaskBorderSource | Array<Property$MaskBorderSource>,
  "mask-border-width"?: Property$MaskBorderWidth<TLength> | Array<Property$MaskBorderWidth<TLength>>,
  "mask-clip"?: Property$MaskClip | Array<Property$MaskClip>,
  "mask-composite"?: Property$MaskComposite | Array<Property$MaskComposite>,
  "mask-image"?: Property$MaskImage | Array<Property$MaskImage>,
  "mask-mode"?: Property$MaskMode | Array<Property$MaskMode>,
  "mask-origin"?: Property$MaskOrigin | Array<Property$MaskOrigin>,
  "mask-position"?: Property$MaskPosition<TLength> | Array<Property$MaskPosition<TLength>>,
  "mask-repeat"?: Property$MaskRepeat | Array<Property$MaskRepeat>,
  "mask-size"?: Property$MaskSize<TLength> | Array<Property$MaskSize<TLength>>,
  "mask-type"?: Property$MaskType | Array<Property$MaskType>,
  "math-style"?: Property$MathStyle | Array<Property$MathStyle>,
  "max-block-size"?: Property$MaxBlockSize<TLength> | Array<Property$MaxBlockSize<TLength>>,
  "max-height"?: Property$MaxHeight<TLength> | Array<Property$MaxHeight<TLength>>,
  "max-inline-size"?: Property$MaxInlineSize<TLength> | Array<Property$MaxInlineSize<TLength>>,
  "max-lines"?: Property$MaxLines | Array<Property$MaxLines>,
  "max-width"?: Property$MaxWidth<TLength> | Array<Property$MaxWidth<TLength>>,
  "min-block-size"?: Property$MinBlockSize<TLength> | Array<Property$MinBlockSize<TLength>>,
  "min-height"?: Property$MinHeight<TLength> | Array<Property$MinHeight<TLength>>,
  "min-inline-size"?: Property$MinInlineSize<TLength> | Array<Property$MinInlineSize<TLength>>,
  "min-width"?: Property$MinWidth<TLength> | Array<Property$MinWidth<TLength>>,
  "mix-blend-mode"?: Property$MixBlendMode | Array<Property$MixBlendMode>,
  "motion-distance"?: Property$OffsetDistance<TLength> | Array<Property$OffsetDistance<TLength>>,
  "motion-path"?: Property$OffsetPath | Array<Property$OffsetPath>,
  "motion-rotation"?: Property$OffsetRotate | Array<Property$OffsetRotate>,
  "object-fit"?: Property$ObjectFit | Array<Property$ObjectFit>,
  "object-position"?: Property$ObjectPosition<TLength> | Array<Property$ObjectPosition<TLength>>,
  "offset-anchor"?: Property$OffsetAnchor<TLength> | Array<Property$OffsetAnchor<TLength>>,
  "offset-distance"?: Property$OffsetDistance<TLength> | Array<Property$OffsetDistance<TLength>>,
  "offset-path"?: Property$OffsetPath | Array<Property$OffsetPath>,
  "offset-rotate"?: Property$OffsetRotate | Array<Property$OffsetRotate>,
  "offset-rotation"?: Property$OffsetRotate | Array<Property$OffsetRotate>,
  opacity?: Property$Opacity | Array<Property$Opacity>,
  order?: Property$Order | Array<Property$Order>,
  orphans?: Property$Orphans | Array<Property$Orphans>,
  "outline-color"?: Property$OutlineColor | Array<Property$OutlineColor>,
  "outline-offset"?: Property$OutlineOffset<TLength> | Array<Property$OutlineOffset<TLength>>,
  "outline-style"?: Property$OutlineStyle | Array<Property$OutlineStyle>,
  "outline-width"?: Property$OutlineWidth<TLength> | Array<Property$OutlineWidth<TLength>>,
  "overflow-anchor"?: Property$OverflowAnchor | Array<Property$OverflowAnchor>,
  "overflow-block"?: Property$OverflowBlock | Array<Property$OverflowBlock>,
  "overflow-clip-box"?: Property$OverflowClipBox | Array<Property$OverflowClipBox>,
  "overflow-inline"?: Property$OverflowInline | Array<Property$OverflowInline>,
  "overflow-wrap"?: Property$OverflowWrap | Array<Property$OverflowWrap>,
  "overflow-x"?: Property$OverflowX | Array<Property$OverflowX>,
  "overflow-y"?: Property$OverflowY | Array<Property$OverflowY>,
  "overscroll-behavior"?: Property$OverscrollBehavior | Array<Property$OverscrollBehavior>,
  "overscroll-behavior-block"?: Property$OverscrollBehaviorBlock | Array<Property$OverscrollBehaviorBlock>,
  "overscroll-behavior-inline"?: Property$OverscrollBehaviorInline | Array<Property$OverscrollBehaviorInline>,
  "overscroll-behavior-x"?: Property$OverscrollBehaviorX | Array<Property$OverscrollBehaviorX>,
  "overscroll-behavior-y"?: Property$OverscrollBehaviorY | Array<Property$OverscrollBehaviorY>,
  "padding-block"?: Property$PaddingBlock<TLength> | Array<Property$PaddingBlock<TLength>>,
  "padding-block-end"?: Property$PaddingBlockEnd<TLength> | Array<Property$PaddingBlockEnd<TLength>>,
  "padding-block-start"?: Property$PaddingBlockStart<TLength> | Array<Property$PaddingBlockStart<TLength>>,
  "padding-bottom"?: Property$PaddingBottom<TLength> | Array<Property$PaddingBottom<TLength>>,
  "padding-inline"?: Property$PaddingInline<TLength> | Array<Property$PaddingInline<TLength>>,
  "padding-inline-end"?: Property$PaddingInlineEnd<TLength> | Array<Property$PaddingInlineEnd<TLength>>,
  "padding-inline-start"?: Property$PaddingInlineStart<TLength> | Array<Property$PaddingInlineStart<TLength>>,
  "padding-left"?: Property$PaddingLeft<TLength> | Array<Property$PaddingLeft<TLength>>,
  "padding-right"?: Property$PaddingRight<TLength> | Array<Property$PaddingRight<TLength>>,
  "padding-top"?: Property$PaddingTop<TLength> | Array<Property$PaddingTop<TLength>>,
  "page-break-after"?: Property$PageBreakAfter | Array<Property$PageBreakAfter>,
  "page-break-before"?: Property$PageBreakBefore | Array<Property$PageBreakBefore>,
  "page-break-inside"?: Property$PageBreakInside | Array<Property$PageBreakInside>,
  "paint-order"?: Property$PaintOrder | Array<Property$PaintOrder>,
  perspective?: Property$Perspective<TLength> | Array<Property$Perspective<TLength>>,
  "perspective-origin"?: Property$PerspectiveOrigin<TLength> | Array<Property$PerspectiveOrigin<TLength>>,
  "place-content"?: Property$PlaceContent | Array<Property$PlaceContent>,
  "pointer-events"?: Property$PointerEvents | Array<Property$PointerEvents>,
  position?: Property$Position | Array<Property$Position>,
  quotes?: Property$Quotes | Array<Property$Quotes>,
  resize?: Property$Resize | Array<Property$Resize>,
  right?: Property$Right<TLength> | Array<Property$Right<TLength>>,
  rotate?: Property$Rotate | Array<Property$Rotate>,
  "row-gap"?: Property$RowGap<TLength> | Array<Property$RowGap<TLength>>,
  "ruby-align"?: Property$RubyAlign | Array<Property$RubyAlign>,
  "ruby-merge"?: Property$RubyMerge | Array<Property$RubyMerge>,
  "ruby-position"?: Property$RubyPosition | Array<Property$RubyPosition>,
  scale?: Property$Scale | Array<Property$Scale>,
  "scroll-behavior"?: Property$ScrollBehavior | Array<Property$ScrollBehavior>,
  "scroll-margin"?: Property$ScrollMargin<TLength> | Array<Property$ScrollMargin<TLength>>,
  "scroll-margin-block"?: Property$ScrollMarginBlock<TLength> | Array<Property$ScrollMarginBlock<TLength>>,
  "scroll-margin-block-end"?: Property$ScrollMarginBlockEnd<TLength> | Array<Property$ScrollMarginBlockEnd<TLength>>,
  "scroll-margin-block-start"?: Property$ScrollMarginBlockStart<TLength> | Array<Property$ScrollMarginBlockStart<TLength>>,
  "scroll-margin-bottom"?: Property$ScrollMarginBottom<TLength> | Array<Property$ScrollMarginBottom<TLength>>,
  "scroll-margin-inline"?: Property$ScrollMarginInline<TLength> | Array<Property$ScrollMarginInline<TLength>>,
  "scroll-margin-inline-end"?: Property$ScrollMarginInlineEnd<TLength> | Array<Property$ScrollMarginInlineEnd<TLength>>,
  "scroll-margin-inline-start"?: Property$ScrollMarginInlineStart<TLength> | Array<Property$ScrollMarginInlineStart<TLength>>,
  "scroll-margin-left"?: Property$ScrollMarginLeft<TLength> | Array<Property$ScrollMarginLeft<TLength>>,
  "scroll-margin-right"?: Property$ScrollMarginRight<TLength> | Array<Property$ScrollMarginRight<TLength>>,
  "scroll-margin-top"?: Property$ScrollMarginTop<TLength> | Array<Property$ScrollMarginTop<TLength>>,
  "scroll-padding"?: Property$ScrollPadding<TLength> | Array<Property$ScrollPadding<TLength>>,
  "scroll-padding-block"?: Property$ScrollPaddingBlock<TLength> | Array<Property$ScrollPaddingBlock<TLength>>,
  "scroll-padding-block-end"?: Property$ScrollPaddingBlockEnd<TLength> | Array<Property$ScrollPaddingBlockEnd<TLength>>,
  "scroll-padding-block-start"?: Property$ScrollPaddingBlockStart<TLength> | Array<Property$ScrollPaddingBlockStart<TLength>>,
  "scroll-padding-bottom"?: Property$ScrollPaddingBottom<TLength> | Array<Property$ScrollPaddingBottom<TLength>>,
  "scroll-padding-inline"?: Property$ScrollPaddingInline<TLength> | Array<Property$ScrollPaddingInline<TLength>>,
  "scroll-padding-inline-end"?: Property$ScrollPaddingInlineEnd<TLength> | Array<Property$ScrollPaddingInlineEnd<TLength>>,
  "scroll-padding-inline-start"?: Property$ScrollPaddingInlineStart<TLength> | Array<Property$ScrollPaddingInlineStart<TLength>>,
  "scroll-padding-left"?: Property$ScrollPaddingLeft<TLength> | Array<Property$ScrollPaddingLeft<TLength>>,
  "scroll-padding-right"?: Property$ScrollPaddingRight<TLength> | Array<Property$ScrollPaddingRight<TLength>>,
  "scroll-padding-top"?: Property$ScrollPaddingTop<TLength> | Array<Property$ScrollPaddingTop<TLength>>,
  "scroll-snap-align"?: Property$ScrollSnapAlign | Array<Property$ScrollSnapAlign>,
  "scroll-snap-margin"?: Property$ScrollMargin<TLength> | Array<Property$ScrollMargin<TLength>>,
  "scroll-snap-margin-bottom"?: Property$ScrollMarginBottom<TLength> | Array<Property$ScrollMarginBottom<TLength>>,
  "scroll-snap-margin-left"?: Property$ScrollMarginLeft<TLength> | Array<Property$ScrollMarginLeft<TLength>>,
  "scroll-snap-margin-right"?: Property$ScrollMarginRight<TLength> | Array<Property$ScrollMarginRight<TLength>>,
  "scroll-snap-margin-top"?: Property$ScrollMarginTop<TLength> | Array<Property$ScrollMarginTop<TLength>>,
  "scroll-snap-stop"?: Property$ScrollSnapStop | Array<Property$ScrollSnapStop>,
  "scroll-snap-type"?: Property$ScrollSnapType | Array<Property$ScrollSnapType>,
  "scrollbar-color"?: Property$ScrollbarColor | Array<Property$ScrollbarColor>,
  "scrollbar-gutter"?: Property$ScrollbarGutter | Array<Property$ScrollbarGutter>,
  "scrollbar-width"?: Property$ScrollbarWidth | Array<Property$ScrollbarWidth>,
  "shape-image-threshold"?: Property$ShapeImageThreshold | Array<Property$ShapeImageThreshold>,
  "shape-margin"?: Property$ShapeMargin<TLength> | Array<Property$ShapeMargin<TLength>>,
  "shape-outside"?: Property$ShapeOutside | Array<Property$ShapeOutside>,
  "tab-size"?: Property$TabSize<TLength> | Array<Property$TabSize<TLength>>,
  "table-layout"?: Property$TableLayout | Array<Property$TableLayout>,
  "text-align"?: Property$TextAlign | Array<Property$TextAlign>,
  "text-align-last"?: Property$TextAlignLast | Array<Property$TextAlignLast>,
  "text-combine-upright"?: Property$TextCombineUpright | Array<Property$TextCombineUpright>,
  "text-decoration-color"?: Property$TextDecorationColor | Array<Property$TextDecorationColor>,
  "text-decoration-line"?: Property$TextDecorationLine | Array<Property$TextDecorationLine>,
  "text-decoration-skip"?: Property$TextDecorationSkip | Array<Property$TextDecorationSkip>,
  "text-decoration-skip-ink"?: Property$TextDecorationSkipInk | Array<Property$TextDecorationSkipInk>,
  "text-decoration-style"?: Property$TextDecorationStyle | Array<Property$TextDecorationStyle>,
  "text-decoration-thickness"?: Property$TextDecorationThickness<TLength> | Array<Property$TextDecorationThickness<TLength>>,
  "text-decoration-width"?: Property$TextDecorationThickness<TLength> | Array<Property$TextDecorationThickness<TLength>>,
  "text-emphasis-color"?: Property$TextEmphasisColor | Array<Property$TextEmphasisColor>,
  "text-emphasis-position"?: Property$TextEmphasisPosition | Array<Property$TextEmphasisPosition>,
  "text-emphasis-style"?: Property$TextEmphasisStyle | Array<Property$TextEmphasisStyle>,
  "text-indent"?: Property$TextIndent<TLength> | Array<Property$TextIndent<TLength>>,
  "text-justify"?: Property$TextJustify | Array<Property$TextJustify>,
  "text-orientation"?: Property$TextOrientation | Array<Property$TextOrientation>,
  "text-overflow"?: Property$TextOverflow | Array<Property$TextOverflow>,
  "text-rendering"?: Property$TextRendering | Array<Property$TextRendering>,
  "text-shadow"?: Property$TextShadow | Array<Property$TextShadow>,
  "text-size-adjust"?: Property$TextSizeAdjust | Array<Property$TextSizeAdjust>,
  "text-transform"?: Property$TextTransform | Array<Property$TextTransform>,
  "text-underline-offset"?: Property$TextUnderlineOffset<TLength> | Array<Property$TextUnderlineOffset<TLength>>,
  "text-underline-position"?: Property$TextUnderlinePosition | Array<Property$TextUnderlinePosition>,
  top?: Property$Top<TLength> | Array<Property$Top<TLength>>,
  "touch-action"?: Property$TouchAction | Array<Property$TouchAction>,
  transform?: Property$Transform | Array<Property$Transform>,
  "transform-box"?: Property$TransformBox | Array<Property$TransformBox>,
  "transform-origin"?: Property$TransformOrigin<TLength> | Array<Property$TransformOrigin<TLength>>,
  "transform-style"?: Property$TransformStyle | Array<Property$TransformStyle>,
  "transition-delay"?: Property$TransitionDelay<TTime> | Array<Property$TransitionDelay<TTime>>,
  "transition-duration"?: Property$TransitionDuration<TTime> | Array<Property$TransitionDuration<TTime>>,
  "transition-property"?: Property$TransitionProperty | Array<Property$TransitionProperty>,
  "transition-timing-function"?: Property$TransitionTimingFunction | Array<Property$TransitionTimingFunction>,
  translate?: Property$Translate<TLength> | Array<Property$Translate<TLength>>,
  "unicode-bidi"?: Property$UnicodeBidi | Array<Property$UnicodeBidi>,
  "user-select"?: Property$UserSelect | Array<Property$UserSelect>,
  "vertical-align"?: Property$VerticalAlign<TLength> | Array<Property$VerticalAlign<TLength>>,
  visibility?: Property$Visibility | Array<Property$Visibility>,
  "white-space"?: Property$WhiteSpace | Array<Property$WhiteSpace>,
  widows?: Property$Widows | Array<Property$Widows>,
  width?: Property$Width<TLength> | Array<Property$Width<TLength>>,
  "will-change"?: Property$WillChange | Array<Property$WillChange>,
  "word-break"?: Property$WordBreak | Array<Property$WordBreak>,
  "word-spacing"?: Property$WordSpacing<TLength> | Array<Property$WordSpacing<TLength>>,
  "word-wrap"?: Property$WordWrap | Array<Property$WordWrap>,
  "writing-mode"?: Property$WritingMode | Array<Property$WritingMode>,
  "z-index"?: Property$ZIndex | Array<Property$ZIndex>,
  zoom?: Property$Zoom | Array<Property$Zoom>,
|};

export type StandardShorthandPropertiesHyphenFallback<TLength = string | 0, TTime = string> = {|
  all?: Property$All | Array<Property$All>,
  animation?: Property$Animation<TTime> | Array<Property$Animation<TTime>>,
  background?: Property$Background<TLength> | Array<Property$Background<TLength>>,
  border?: Property$Border<TLength> | Array<Property$Border<TLength>>,
  "border-block"?: Property$BorderBlock<TLength> | Array<Property$BorderBlock<TLength>>,
  "border-block-end"?: Property$BorderBlockEnd<TLength> | Array<Property$BorderBlockEnd<TLength>>,
  "border-block-start"?: Property$BorderBlockStart<TLength> | Array<Property$BorderBlockStart<TLength>>,
  "border-bottom"?: Property$BorderBottom<TLength> | Array<Property$BorderBottom<TLength>>,
  "border-color"?: Property$BorderColor | Array<Property$BorderColor>,
  "border-image"?: Property$BorderImage | Array<Property$BorderImage>,
  "border-inline"?: Property$BorderInline<TLength> | Array<Property$BorderInline<TLength>>,
  "border-inline-end"?: Property$BorderInlineEnd<TLength> | Array<Property$BorderInlineEnd<TLength>>,
  "border-inline-start"?: Property$BorderInlineStart<TLength> | Array<Property$BorderInlineStart<TLength>>,
  "border-left"?: Property$BorderLeft<TLength> | Array<Property$BorderLeft<TLength>>,
  "border-radius"?: Property$BorderRadius<TLength> | Array<Property$BorderRadius<TLength>>,
  "border-right"?: Property$BorderRight<TLength> | Array<Property$BorderRight<TLength>>,
  "border-style"?: Property$BorderStyle | Array<Property$BorderStyle>,
  "border-top"?: Property$BorderTop<TLength> | Array<Property$BorderTop<TLength>>,
  "border-width"?: Property$BorderWidth<TLength> | Array<Property$BorderWidth<TLength>>,
  "column-rule"?: Property$ColumnRule<TLength> | Array<Property$ColumnRule<TLength>>,
  columns?: Property$Columns<TLength> | Array<Property$Columns<TLength>>,
  flex?: Property$Flex<TLength> | Array<Property$Flex<TLength>>,
  "flex-flow"?: Property$FlexFlow | Array<Property$FlexFlow>,
  font?: Property$Font | Array<Property$Font>,
  gap?: Property$Gap<TLength> | Array<Property$Gap<TLength>>,
  grid?: Property$Grid | Array<Property$Grid>,
  "grid-area"?: Property$GridArea | Array<Property$GridArea>,
  "grid-column"?: Property$GridColumn | Array<Property$GridColumn>,
  "grid-row"?: Property$GridRow | Array<Property$GridRow>,
  "grid-template"?: Property$GridTemplate | Array<Property$GridTemplate>,
  "line-clamp"?: Property$LineClamp | Array<Property$LineClamp>,
  "list-style"?: Property$ListStyle | Array<Property$ListStyle>,
  margin?: Property$Margin<TLength> | Array<Property$Margin<TLength>>,
  mask?: Property$Mask<TLength> | Array<Property$Mask<TLength>>,
  "mask-border"?: Property$MaskBorder | Array<Property$MaskBorder>,
  motion?: Property$Offset<TLength> | Array<Property$Offset<TLength>>,
  offset?: Property$Offset<TLength> | Array<Property$Offset<TLength>>,
  outline?: Property$Outline<TLength> | Array<Property$Outline<TLength>>,
  overflow?: Property$Overflow | Array<Property$Overflow>,
  padding?: Property$Padding<TLength> | Array<Property$Padding<TLength>>,
  "place-items"?: Property$PlaceItems | Array<Property$PlaceItems>,
  "place-self"?: Property$PlaceSelf | Array<Property$PlaceSelf>,
  "text-decoration"?: Property$TextDecoration<TLength> | Array<Property$TextDecoration<TLength>>,
  "text-emphasis"?: Property$TextEmphasis | Array<Property$TextEmphasis>,
  transition?: Property$Transition<TTime> | Array<Property$Transition<TTime>>,
|};

export type StandardPropertiesHyphenFallback<TLength = string | 0, TTime = string> = {|
  ...StandardLonghandPropertiesHyphenFallback<TLength, TTime>,
  ...StandardShorthandPropertiesHyphenFallback<TLength, TTime>,
|};

export type VendorLonghandPropertiesHyphenFallback<TLength = string | 0, TTime = string> = {|
  "-moz-animation-delay"?: Property$AnimationDelay<TTime> | Array<Property$AnimationDelay<TTime>>,
  "-moz-animation-direction"?: Property$AnimationDirection | Array<Property$AnimationDirection>,
  "-moz-animation-duration"?: Property$AnimationDuration<TTime> | Array<Property$AnimationDuration<TTime>>,
  "-moz-animation-fill-mode"?: Property$AnimationFillMode | Array<Property$AnimationFillMode>,
  "-moz-animation-iteration-count"?: Property$AnimationIterationCount | Array<Property$AnimationIterationCount>,
  "-moz-animation-name"?: Property$AnimationName | Array<Property$AnimationName>,
  "-moz-animation-play-state"?: Property$AnimationPlayState | Array<Property$AnimationPlayState>,
  "-moz-animation-timing-function"?: Property$AnimationTimingFunction | Array<Property$AnimationTimingFunction>,
  "-moz-appearance"?: Property$MozAppearance | Array<Property$MozAppearance>,
  "-moz-backface-visibility"?: Property$BackfaceVisibility | Array<Property$BackfaceVisibility>,
  "-moz-border-bottom-colors"?: Property$MozBorderBottomColors | Array<Property$MozBorderBottomColors>,
  "-moz-border-end-color"?: Property$BorderInlineEndColor | Array<Property$BorderInlineEndColor>,
  "-moz-border-end-style"?: Property$BorderInlineEndStyle | Array<Property$BorderInlineEndStyle>,
  "-moz-border-end-width"?: Property$BorderInlineEndWidth<TLength> | Array<Property$BorderInlineEndWidth<TLength>>,
  "-moz-border-left-colors"?: Property$MozBorderLeftColors | Array<Property$MozBorderLeftColors>,
  "-moz-border-right-colors"?: Property$MozBorderRightColors | Array<Property$MozBorderRightColors>,
  "-moz-border-start-color"?: Property$BorderInlineStartColor | Array<Property$BorderInlineStartColor>,
  "-moz-border-start-style"?: Property$BorderInlineStartStyle | Array<Property$BorderInlineStartStyle>,
  "-moz-border-top-colors"?: Property$MozBorderTopColors | Array<Property$MozBorderTopColors>,
  "-moz-box-sizing"?: Property$BoxSizing | Array<Property$BoxSizing>,
  "-moz-column-count"?: Property$ColumnCount | Array<Property$ColumnCount>,
  "-moz-column-fill"?: Property$ColumnFill | Array<Property$ColumnFill>,
  "-moz-column-gap"?: Property$ColumnGap<TLength> | Array<Property$ColumnGap<TLength>>,
  "-moz-column-rule-color"?: Property$ColumnRuleColor | Array<Property$ColumnRuleColor>,
  "-moz-column-rule-style"?: Property$ColumnRuleStyle | Array<Property$ColumnRuleStyle>,
  "-moz-column-rule-width"?: Property$ColumnRuleWidth<TLength> | Array<Property$ColumnRuleWidth<TLength>>,
  "-moz-column-width"?: Property$ColumnWidth<TLength> | Array<Property$ColumnWidth<TLength>>,
  "-moz-context-properties"?: Property$MozContextProperties | Array<Property$MozContextProperties>,
  "-moz-font-feature-settings"?: Property$FontFeatureSettings | Array<Property$FontFeatureSettings>,
  "-moz-font-language-override"?: Property$FontLanguageOverride | Array<Property$FontLanguageOverride>,
  "-moz-hyphens"?: Property$Hyphens | Array<Property$Hyphens>,
  "-moz-image-region"?: Property$MozImageRegion | Array<Property$MozImageRegion>,
  "-moz-margin-end"?: Property$MarginInlineEnd<TLength> | Array<Property$MarginInlineEnd<TLength>>,
  "-moz-margin-start"?: Property$MarginInlineStart<TLength> | Array<Property$MarginInlineStart<TLength>>,
  "-moz-orient"?: Property$MozOrient | Array<Property$MozOrient>,
  "-moz-osx-font-smoothing"?: Property$FontSmooth<TLength> | Array<Property$FontSmooth<TLength>>,
  "-moz-padding-end"?: Property$PaddingInlineEnd<TLength> | Array<Property$PaddingInlineEnd<TLength>>,
  "-moz-padding-start"?: Property$PaddingInlineStart<TLength> | Array<Property$PaddingInlineStart<TLength>>,
  "-moz-perspective"?: Property$Perspective<TLength> | Array<Property$Perspective<TLength>>,
  "-moz-perspective-origin"?: Property$PerspectiveOrigin<TLength> | Array<Property$PerspectiveOrigin<TLength>>,
  "-moz-stack-sizing"?: Property$MozStackSizing | Array<Property$MozStackSizing>,
  "-moz-tab-size"?: Property$TabSize<TLength> | Array<Property$TabSize<TLength>>,
  "-moz-text-blink"?: Property$MozTextBlink | Array<Property$MozTextBlink>,
  "-moz-text-size-adjust"?: Property$TextSizeAdjust | Array<Property$TextSizeAdjust>,
  "-moz-transform-origin"?: Property$TransformOrigin<TLength> | Array<Property$TransformOrigin<TLength>>,
  "-moz-transform-style"?: Property$TransformStyle | Array<Property$TransformStyle>,
  "-moz-transition-delay"?: Property$TransitionDelay<TTime> | Array<Property$TransitionDelay<TTime>>,
  "-moz-transition-duration"?: Property$TransitionDuration<TTime> | Array<Property$TransitionDuration<TTime>>,
  "-moz-transition-property"?: Property$TransitionProperty | Array<Property$TransitionProperty>,
  "-moz-transition-timing-function"?: Property$TransitionTimingFunction | Array<Property$TransitionTimingFunction>,
  "-moz-user-focus"?: Property$MozUserFocus | Array<Property$MozUserFocus>,
  "-moz-user-modify"?: Property$MozUserModify | Array<Property$MozUserModify>,
  "-moz-user-select"?: Property$UserSelect | Array<Property$UserSelect>,
  "-moz-window-dragging"?: Property$MozWindowDragging | Array<Property$MozWindowDragging>,
  "-moz-window-shadow"?: Property$MozWindowShadow | Array<Property$MozWindowShadow>,
  "-ms-accelerator"?: Property$MsAccelerator | Array<Property$MsAccelerator>,
  "-ms-align-self"?: Property$AlignSelf | Array<Property$AlignSelf>,
  "-ms-block-progression"?: Property$MsBlockProgression | Array<Property$MsBlockProgression>,
  "-ms-content-zoom-chaining"?: Property$MsContentZoomChaining | Array<Property$MsContentZoomChaining>,
  "-ms-content-zoom-limit-max"?: Property$MsContentZoomLimitMax | Array<Property$MsContentZoomLimitMax>,
  "-ms-content-zoom-limit-min"?: Property$MsContentZoomLimitMin | Array<Property$MsContentZoomLimitMin>,
  "-ms-content-zoom-snap-points"?: Property$MsContentZoomSnapPoints | Array<Property$MsContentZoomSnapPoints>,
  "-ms-content-zoom-snap-type"?: Property$MsContentZoomSnapType | Array<Property$MsContentZoomSnapType>,
  "-ms-content-zooming"?: Property$MsContentZooming | Array<Property$MsContentZooming>,
  "-ms-filter"?: Property$MsFilter | Array<Property$MsFilter>,
  "-ms-flex-direction"?: Property$FlexDirection | Array<Property$FlexDirection>,
  "-ms-flex-positive"?: Property$FlexGrow | Array<Property$FlexGrow>,
  "-ms-flow-from"?: Property$MsFlowFrom | Array<Property$MsFlowFrom>,
  "-ms-flow-into"?: Property$MsFlowInto | Array<Property$MsFlowInto>,
  "-ms-grid-columns"?: Property$MsGridColumns<TLength> | Array<Property$MsGridColumns<TLength>>,
  "-ms-grid-rows"?: Property$MsGridRows<TLength> | Array<Property$MsGridRows<TLength>>,
  "-ms-high-contrast-adjust"?: Property$MsHighContrastAdjust | Array<Property$MsHighContrastAdjust>,
  "-ms-hyphenate-limit-chars"?: Property$MsHyphenateLimitChars | Array<Property$MsHyphenateLimitChars>,
  "-ms-hyphenate-limit-lines"?: Property$MsHyphenateLimitLines | Array<Property$MsHyphenateLimitLines>,
  "-ms-hyphenate-limit-zone"?: Property$MsHyphenateLimitZone<TLength> | Array<Property$MsHyphenateLimitZone<TLength>>,
  "-ms-hyphens"?: Property$Hyphens | Array<Property$Hyphens>,
  "-ms-ime-align"?: Property$MsImeAlign | Array<Property$MsImeAlign>,
  "-ms-justify-self"?: Property$JustifySelf | Array<Property$JustifySelf>,
  "-ms-line-break"?: Property$LineBreak | Array<Property$LineBreak>,
  "-ms-order"?: Property$Order | Array<Property$Order>,
  "-ms-overflow-style"?: Property$MsOverflowStyle | Array<Property$MsOverflowStyle>,
  "-ms-overflow-x"?: Property$OverflowX | Array<Property$OverflowX>,
  "-ms-overflow-y"?: Property$OverflowY | Array<Property$OverflowY>,
  "-ms-scroll-chaining"?: Property$MsScrollChaining | Array<Property$MsScrollChaining>,
  "-ms-scroll-limit-x-max"?: Property$MsScrollLimitXMax<TLength> | Array<Property$MsScrollLimitXMax<TLength>>,
  "-ms-scroll-limit-x-min"?: Property$MsScrollLimitXMin<TLength> | Array<Property$MsScrollLimitXMin<TLength>>,
  "-ms-scroll-limit-y-max"?: Property$MsScrollLimitYMax<TLength> | Array<Property$MsScrollLimitYMax<TLength>>,
  "-ms-scroll-limit-y-min"?: Property$MsScrollLimitYMin<TLength> | Array<Property$MsScrollLimitYMin<TLength>>,
  "-ms-scroll-rails"?: Property$MsScrollRails | Array<Property$MsScrollRails>,
  "-ms-scroll-snap-points-x"?: Property$MsScrollSnapPointsX | Array<Property$MsScrollSnapPointsX>,
  "-ms-scroll-snap-points-y"?: Property$MsScrollSnapPointsY | Array<Property$MsScrollSnapPointsY>,
  "-ms-scroll-snap-type"?: Property$MsScrollSnapType | Array<Property$MsScrollSnapType>,
  "-ms-scroll-translation"?: Property$MsScrollTranslation | Array<Property$MsScrollTranslation>,
  "-ms-scrollbar-3dlight-color"?: Property$MsScrollbar3dlightColor | Array<Property$MsScrollbar3dlightColor>,
  "-ms-scrollbar-arrow-color"?: Property$MsScrollbarArrowColor | Array<Property$MsScrollbarArrowColor>,
  "-ms-scrollbar-base-color"?: Property$MsScrollbarBaseColor | Array<Property$MsScrollbarBaseColor>,
  "-ms-scrollbar-darkshadow-color"?: Property$MsScrollbarDarkshadowColor | Array<Property$MsScrollbarDarkshadowColor>,
  "-ms-scrollbar-face-color"?: Property$MsScrollbarFaceColor | Array<Property$MsScrollbarFaceColor>,
  "-ms-scrollbar-highlight-color"?: Property$MsScrollbarHighlightColor | Array<Property$MsScrollbarHighlightColor>,
  "-ms-scrollbar-shadow-color"?: Property$MsScrollbarShadowColor | Array<Property$MsScrollbarShadowColor>,
  "-ms-text-autospace"?: Property$MsTextAutospace | Array<Property$MsTextAutospace>,
  "-ms-text-combine-horizontal"?: Property$TextCombineUpright | Array<Property$TextCombineUpright>,
  "-ms-text-overflow"?: Property$TextOverflow | Array<Property$TextOverflow>,
  "-ms-touch-action"?: Property$TouchAction | Array<Property$TouchAction>,
  "-ms-touch-select"?: Property$MsTouchSelect | Array<Property$MsTouchSelect>,
  "-ms-transform"?: Property$Transform | Array<Property$Transform>,
  "-ms-transform-origin"?: Property$TransformOrigin<TLength> | Array<Property$TransformOrigin<TLength>>,
  "-ms-transition-delay"?: Property$TransitionDelay<TTime> | Array<Property$TransitionDelay<TTime>>,
  "-ms-transition-duration"?: Property$TransitionDuration<TTime> | Array<Property$TransitionDuration<TTime>>,
  "-ms-transition-property"?: Property$TransitionProperty | Array<Property$TransitionProperty>,
  "-ms-transition-timing-function"?: Property$TransitionTimingFunction | Array<Property$TransitionTimingFunction>,
  "-ms-user-select"?: Property$MsUserSelect | Array<Property$MsUserSelect>,
  "-ms-word-break"?: Property$WordBreak | Array<Property$WordBreak>,
  "-ms-wrap-flow"?: Property$MsWrapFlow | Array<Property$MsWrapFlow>,
  "-ms-wrap-margin"?: Property$MsWrapMargin<TLength> | Array<Property$MsWrapMargin<TLength>>,
  "-ms-wrap-through"?: Property$MsWrapThrough | Array<Property$MsWrapThrough>,
  "-ms-writing-mode"?: Property$WritingMode | Array<Property$WritingMode>,
  "-o-object-fit"?: Property$ObjectFit | Array<Property$ObjectFit>,
  "-o-object-position"?: Property$ObjectPosition<TLength> | Array<Property$ObjectPosition<TLength>>,
  "-o-tab-size"?: Property$TabSize<TLength> | Array<Property$TabSize<TLength>>,
  "-o-text-overflow"?: Property$TextOverflow | Array<Property$TextOverflow>,
  "-o-transform-origin"?: Property$TransformOrigin<TLength> | Array<Property$TransformOrigin<TLength>>,
  "-webkit-align-content"?: Property$AlignContent | Array<Property$AlignContent>,
  "-webkit-align-items"?: Property$AlignItems | Array<Property$AlignItems>,
  "-webkit-align-self"?: Property$AlignSelf | Array<Property$AlignSelf>,
  "-webkit-animation-delay"?: Property$AnimationDelay<TTime> | Array<Property$AnimationDelay<TTime>>,
  "-webkit-animation-direction"?: Property$AnimationDirection | Array<Property$AnimationDirection>,
  "-webkit-animation-duration"?: Property$AnimationDuration<TTime> | Array<Property$AnimationDuration<TTime>>,
  "-webkit-animation-fill-mode"?: Property$AnimationFillMode | Array<Property$AnimationFillMode>,
  "-webkit-animation-iteration-count"?: Property$AnimationIterationCount | Array<Property$AnimationIterationCount>,
  "-webkit-animation-name"?: Property$AnimationName | Array<Property$AnimationName>,
  "-webkit-animation-play-state"?: Property$AnimationPlayState | Array<Property$AnimationPlayState>,
  "-webkit-animation-timing-function"?: Property$AnimationTimingFunction | Array<Property$AnimationTimingFunction>,
  "-webkit-appearance"?: Property$WebkitAppearance | Array<Property$WebkitAppearance>,
  "-webkit-backdrop-filter"?: Property$BackdropFilter | Array<Property$BackdropFilter>,
  "-webkit-backface-visibility"?: Property$BackfaceVisibility | Array<Property$BackfaceVisibility>,
  "-webkit-background-clip"?: Property$BackgroundClip | Array<Property$BackgroundClip>,
  "-webkit-background-origin"?: Property$BackgroundOrigin | Array<Property$BackgroundOrigin>,
  "-webkit-background-size"?: Property$BackgroundSize<TLength> | Array<Property$BackgroundSize<TLength>>,
  "-webkit-border-before-color"?: Property$WebkitBorderBeforeColor | Array<Property$WebkitBorderBeforeColor>,
  "-webkit-border-before-style"?: Property$WebkitBorderBeforeStyle | Array<Property$WebkitBorderBeforeStyle>,
  "-webkit-border-before-width"?: Property$WebkitBorderBeforeWidth<TLength> | Array<Property$WebkitBorderBeforeWidth<TLength>>,
  "-webkit-border-bottom-left-radius"?: Property$BorderBottomLeftRadius<TLength> | Array<Property$BorderBottomLeftRadius<TLength>>,
  "-webkit-border-bottom-right-radius"?: Property$BorderBottomRightRadius<TLength> | Array<Property$BorderBottomRightRadius<TLength>>,
  "-webkit-border-image-slice"?: Property$BorderImageSlice | Array<Property$BorderImageSlice>,
  "-webkit-border-top-left-radius"?: Property$BorderTopLeftRadius<TLength> | Array<Property$BorderTopLeftRadius<TLength>>,
  "-webkit-border-top-right-radius"?: Property$BorderTopRightRadius<TLength> | Array<Property$BorderTopRightRadius<TLength>>,
  "-webkit-box-decoration-break"?: Property$BoxDecorationBreak | Array<Property$BoxDecorationBreak>,
  "-webkit-box-reflect"?: Property$WebkitBoxReflect<TLength> | Array<Property$WebkitBoxReflect<TLength>>,
  "-webkit-box-shadow"?: Property$BoxShadow | Array<Property$BoxShadow>,
  "-webkit-box-sizing"?: Property$BoxSizing | Array<Property$BoxSizing>,
  "-webkit-clip-path"?: Property$ClipPath | Array<Property$ClipPath>,
  "-webkit-column-count"?: Property$ColumnCount | Array<Property$ColumnCount>,
  "-webkit-column-fill"?: Property$ColumnFill | Array<Property$ColumnFill>,
  "-webkit-column-gap"?: Property$ColumnGap<TLength> | Array<Property$ColumnGap<TLength>>,
  "-webkit-column-rule-color"?: Property$ColumnRuleColor | Array<Property$ColumnRuleColor>,
  "-webkit-column-rule-style"?: Property$ColumnRuleStyle | Array<Property$ColumnRuleStyle>,
  "-webkit-column-rule-width"?: Property$ColumnRuleWidth<TLength> | Array<Property$ColumnRuleWidth<TLength>>,
  "-webkit-column-span"?: Property$ColumnSpan | Array<Property$ColumnSpan>,
  "-webkit-column-width"?: Property$ColumnWidth<TLength> | Array<Property$ColumnWidth<TLength>>,
  "-webkit-filter"?: Property$Filter | Array<Property$Filter>,
  "-webkit-flex-basis"?: Property$FlexBasis<TLength> | Array<Property$FlexBasis<TLength>>,
  "-webkit-flex-direction"?: Property$FlexDirection | Array<Property$FlexDirection>,
  "-webkit-flex-grow"?: Property$FlexGrow | Array<Property$FlexGrow>,
  "-webkit-flex-shrink"?: Property$FlexShrink | Array<Property$FlexShrink>,
  "-webkit-flex-wrap"?: Property$FlexWrap | Array<Property$FlexWrap>,
  "-webkit-font-feature-settings"?: Property$FontFeatureSettings | Array<Property$FontFeatureSettings>,
  "-webkit-font-kerning"?: Property$FontKerning | Array<Property$FontKerning>,
  "-webkit-font-smoothing"?: Property$FontSmooth<TLength> | Array<Property$FontSmooth<TLength>>,
  "-webkit-font-variant-ligatures"?: Property$FontVariantLigatures | Array<Property$FontVariantLigatures>,
  "-webkit-hyphens"?: Property$Hyphens | Array<Property$Hyphens>,
  "-webkit-justify-content"?: Property$JustifyContent | Array<Property$JustifyContent>,
  "-webkit-line-break"?: Property$LineBreak | Array<Property$LineBreak>,
  "-webkit-line-clamp"?: Property$WebkitLineClamp | Array<Property$WebkitLineClamp>,
  "-webkit-margin-end"?: Property$MarginInlineEnd<TLength> | Array<Property$MarginInlineEnd<TLength>>,
  "-webkit-margin-start"?: Property$MarginInlineStart<TLength> | Array<Property$MarginInlineStart<TLength>>,
  "-webkit-mask-attachment"?: Property$WebkitMaskAttachment | Array<Property$WebkitMaskAttachment>,
  "-webkit-mask-clip"?: Property$WebkitMaskClip | Array<Property$WebkitMaskClip>,
  "-webkit-mask-composite"?: Property$WebkitMaskComposite | Array<Property$WebkitMaskComposite>,
  "-webkit-mask-image"?: Property$WebkitMaskImage | Array<Property$WebkitMaskImage>,
  "-webkit-mask-origin"?: Property$WebkitMaskOrigin | Array<Property$WebkitMaskOrigin>,
  "-webkit-mask-position"?: Property$WebkitMaskPosition<TLength> | Array<Property$WebkitMaskPosition<TLength>>,
  "-webkit-mask-position-x"?: Property$WebkitMaskPositionX<TLength> | Array<Property$WebkitMaskPositionX<TLength>>,
  "-webkit-mask-position-y"?: Property$WebkitMaskPositionY<TLength> | Array<Property$WebkitMaskPositionY<TLength>>,
  "-webkit-mask-repeat"?: Property$WebkitMaskRepeat | Array<Property$WebkitMaskRepeat>,
  "-webkit-mask-repeat-x"?: Property$WebkitMaskRepeatX | Array<Property$WebkitMaskRepeatX>,
  "-webkit-mask-repeat-y"?: Property$WebkitMaskRepeatY | Array<Property$WebkitMaskRepeatY>,
  "-webkit-mask-size"?: Property$WebkitMaskSize<TLength> | Array<Property$WebkitMaskSize<TLength>>,
  "-webkit-max-inline-size"?: Property$MaxInlineSize<TLength> | Array<Property$MaxInlineSize<TLength>>,
  "-webkit-order"?: Property$Order | Array<Property$Order>,
  "-webkit-overflow-scrolling"?: Property$WebkitOverflowScrolling | Array<Property$WebkitOverflowScrolling>,
  "-webkit-padding-end"?: Property$PaddingInlineEnd<TLength> | Array<Property$PaddingInlineEnd<TLength>>,
  "-webkit-padding-start"?: Property$PaddingInlineStart<TLength> | Array<Property$PaddingInlineStart<TLength>>,
  "-webkit-perspective"?: Property$Perspective<TLength> | Array<Property$Perspective<TLength>>,
  "-webkit-perspective-origin"?: Property$PerspectiveOrigin<TLength> | Array<Property$PerspectiveOrigin<TLength>>,
  "-webkit-print-color-adjust"?: Property$ColorAdjust | Array<Property$ColorAdjust>,
  "-webkit-ruby-position"?: Property$RubyPosition | Array<Property$RubyPosition>,
  "-webkit-scroll-snap-type"?: Property$ScrollSnapType | Array<Property$ScrollSnapType>,
  "-webkit-shape-margin"?: Property$ShapeMargin<TLength> | Array<Property$ShapeMargin<TLength>>,
  "-webkit-tap-highlight-color"?: Property$WebkitTapHighlightColor | Array<Property$WebkitTapHighlightColor>,
  "-webkit-text-combine"?: Property$TextCombineUpright | Array<Property$TextCombineUpright>,
  "-webkit-text-decoration-color"?: Property$TextDecorationColor | Array<Property$TextDecorationColor>,
  "-webkit-text-decoration-line"?: Property$TextDecorationLine | Array<Property$TextDecorationLine>,
  "-webkit-text-decoration-skip"?: Property$TextDecorationSkip | Array<Property$TextDecorationSkip>,
  "-webkit-text-decoration-style"?: Property$TextDecorationStyle | Array<Property$TextDecorationStyle>,
  "-webkit-text-emphasis-color"?: Property$TextEmphasisColor | Array<Property$TextEmphasisColor>,
  "-webkit-text-emphasis-position"?: Property$TextEmphasisPosition | Array<Property$TextEmphasisPosition>,
  "-webkit-text-emphasis-style"?: Property$TextEmphasisStyle | Array<Property$TextEmphasisStyle>,
  "-webkit-text-fill-color"?: Property$WebkitTextFillColor | Array<Property$WebkitTextFillColor>,
  "-webkit-text-orientation"?: Property$TextOrientation | Array<Property$TextOrientation>,
  "-webkit-text-size-adjust"?: Property$TextSizeAdjust | Array<Property$TextSizeAdjust>,
  "-webkit-text-stroke-color"?: Property$WebkitTextStrokeColor | Array<Property$WebkitTextStrokeColor>,
  "-webkit-text-stroke-width"?: Property$WebkitTextStrokeWidth<TLength> | Array<Property$WebkitTextStrokeWidth<TLength>>,
  "-webkit-text-underline-position"?: Property$TextUnderlinePosition | Array<Property$TextUnderlinePosition>,
  "-webkit-touch-callout"?: Property$WebkitTouchCallout | Array<Property$WebkitTouchCallout>,
  "-webkit-transform"?: Property$Transform | Array<Property$Transform>,
  "-webkit-transform-origin"?: Property$TransformOrigin<TLength> | Array<Property$TransformOrigin<TLength>>,
  "-webkit-transform-style"?: Property$TransformStyle | Array<Property$TransformStyle>,
  "-webkit-transition-delay"?: Property$TransitionDelay<TTime> | Array<Property$TransitionDelay<TTime>>,
  "-webkit-transition-duration"?: Property$TransitionDuration<TTime> | Array<Property$TransitionDuration<TTime>>,
  "-webkit-transition-property"?: Property$TransitionProperty | Array<Property$TransitionProperty>,
  "-webkit-transition-timing-function"?: Property$TransitionTimingFunction | Array<Property$TransitionTimingFunction>,
  "-webkit-user-modify"?: Property$WebkitUserModify | Array<Property$WebkitUserModify>,
  "-webkit-user-select"?: Property$UserSelect | Array<Property$UserSelect>,
  "-webkit-writing-mode"?: Property$WritingMode | Array<Property$WritingMode>,
|};

export type VendorShorthandPropertiesHyphenFallback<TLength = string | 0, TTime = string> = {|
  "-moz-animation"?: Property$Animation<TTime> | Array<Property$Animation<TTime>>,
  "-moz-border-image"?: Property$BorderImage | Array<Property$BorderImage>,
  "-moz-column-rule"?: Property$ColumnRule<TLength> | Array<Property$ColumnRule<TLength>>,
  "-moz-columns"?: Property$Columns<TLength> | Array<Property$Columns<TLength>>,
  "-moz-transition"?: Property$Transition<TTime> | Array<Property$Transition<TTime>>,
  "-ms-content-zoom-limit"?: Property$MsContentZoomLimit | Array<Property$MsContentZoomLimit>,
  "-ms-content-zoom-snap"?: Property$MsContentZoomSnap | Array<Property$MsContentZoomSnap>,
  "-ms-flex"?: Property$Flex<TLength> | Array<Property$Flex<TLength>>,
  "-ms-scroll-limit"?: Property$MsScrollLimit | Array<Property$MsScrollLimit>,
  "-ms-scroll-snap-x"?: Property$MsScrollSnapX | Array<Property$MsScrollSnapX>,
  "-ms-scroll-snap-y"?: Property$MsScrollSnapY | Array<Property$MsScrollSnapY>,
  "-ms-transition"?: Property$Transition<TTime> | Array<Property$Transition<TTime>>,
  "-webkit-animation"?: Property$Animation<TTime> | Array<Property$Animation<TTime>>,
  "-webkit-border-before"?: Property$WebkitBorderBefore<TLength> | Array<Property$WebkitBorderBefore<TLength>>,
  "-webkit-border-image"?: Property$BorderImage | Array<Property$BorderImage>,
  "-webkit-border-radius"?: Property$BorderRadius<TLength> | Array<Property$BorderRadius<TLength>>,
  "-webkit-column-rule"?: Property$ColumnRule<TLength> | Array<Property$ColumnRule<TLength>>,
  "-webkit-columns"?: Property$Columns<TLength> | Array<Property$Columns<TLength>>,
  "-webkit-flex"?: Property$Flex<TLength> | Array<Property$Flex<TLength>>,
  "-webkit-flex-flow"?: Property$FlexFlow | Array<Property$FlexFlow>,
  "-webkit-mask"?: Property$WebkitMask<TLength> | Array<Property$WebkitMask<TLength>>,
  "-webkit-text-emphasis"?: Property$TextEmphasis | Array<Property$TextEmphasis>,
  "-webkit-text-stroke"?: Property$WebkitTextStroke<TLength> | Array<Property$WebkitTextStroke<TLength>>,
  "-webkit-transition"?: Property$Transition<TTime> | Array<Property$Transition<TTime>>,
|};

export type VendorPropertiesHyphenFallback<TLength = string | 0, TTime = string> = {|
  ...VendorLonghandPropertiesHyphenFallback<TLength, TTime>,
  ...VendorShorthandPropertiesHyphenFallback<TLength, TTime>,
|};

export type ObsoletePropertiesHyphenFallback<TLength = string | 0, TTime = string> = {|
  azimuth?: Property$Azimuth | Array<Property$Azimuth>,
  "box-align"?: Property$BoxAlign | Array<Property$BoxAlign>,
  "box-direction"?: Property$BoxDirection | Array<Property$BoxDirection>,
  "box-flex"?: Property$BoxFlex | Array<Property$BoxFlex>,
  "box-flex-group"?: Property$BoxFlexGroup | Array<Property$BoxFlexGroup>,
  "box-lines"?: Property$BoxLines | Array<Property$BoxLines>,
  "box-ordinal-group"?: Property$BoxOrdinalGroup | Array<Property$BoxOrdinalGroup>,
  "box-orient"?: Property$BoxOrient | Array<Property$BoxOrient>,
  "box-pack"?: Property$BoxPack | Array<Property$BoxPack>,
  clip?: Property$Clip | Array<Property$Clip>,
  "font-variant-alternates"?: Property$FontVariantAlternates | Array<Property$FontVariantAlternates>,
  "grid-column-gap"?: Property$GridColumnGap<TLength> | Array<Property$GridColumnGap<TLength>>,
  "grid-gap"?: Property$GridGap<TLength> | Array<Property$GridGap<TLength>>,
  "grid-row-gap"?: Property$GridRowGap<TLength> | Array<Property$GridRowGap<TLength>>,
  "ime-mode"?: Property$ImeMode | Array<Property$ImeMode>,
  "offset-block"?: Property$InsetBlock<TLength> | Array<Property$InsetBlock<TLength>>,
  "offset-block-end"?: Property$InsetBlockEnd<TLength> | Array<Property$InsetBlockEnd<TLength>>,
  "offset-block-start"?: Property$InsetBlockStart<TLength> | Array<Property$InsetBlockStart<TLength>>,
  "offset-inline"?: Property$InsetInline<TLength> | Array<Property$InsetInline<TLength>>,
  "offset-inline-end"?: Property$InsetInlineEnd<TLength> | Array<Property$InsetInlineEnd<TLength>>,
  "offset-inline-start"?: Property$InsetInlineStart<TLength> | Array<Property$InsetInlineStart<TLength>>,
  "scroll-snap-coordinate"?: Property$ScrollSnapCoordinate<TLength> | Array<Property$ScrollSnapCoordinate<TLength>>,
  "scroll-snap-destination"?: Property$ScrollSnapDestination<TLength> | Array<Property$ScrollSnapDestination<TLength>>,
  "scroll-snap-points-x"?: Property$ScrollSnapPointsX | Array<Property$ScrollSnapPointsX>,
  "scroll-snap-points-y"?: Property$ScrollSnapPointsY | Array<Property$ScrollSnapPointsY>,
  "scroll-snap-type-x"?: Property$ScrollSnapTypeX | Array<Property$ScrollSnapTypeX>,
  "scroll-snap-type-y"?: Property$ScrollSnapTypeY | Array<Property$ScrollSnapTypeY>,
  "scrollbar-track-color"?: Property$MsScrollbarTrackColor | Array<Property$MsScrollbarTrackColor>,
  "text-combine-horizontal"?: Property$TextCombineUpright | Array<Property$TextCombineUpright>,
  "-khtml-box-align"?: Property$BoxAlign | Array<Property$BoxAlign>,
  "-khtml-box-direction"?: Property$BoxDirection | Array<Property$BoxDirection>,
  "-khtml-box-flex"?: Property$BoxFlex | Array<Property$BoxFlex>,
  "-khtml-box-flex-group"?: Property$BoxFlexGroup | Array<Property$BoxFlexGroup>,
  "-khtml-box-lines"?: Property$BoxLines | Array<Property$BoxLines>,
  "-khtml-box-ordinal-group"?: Property$BoxOrdinalGroup | Array<Property$BoxOrdinalGroup>,
  "-khtml-box-orient"?: Property$BoxOrient | Array<Property$BoxOrient>,
  "-khtml-box-pack"?: Property$BoxPack | Array<Property$BoxPack>,
  "-khtml-line-break"?: Property$LineBreak | Array<Property$LineBreak>,
  "-khtml-opacity"?: Property$Opacity | Array<Property$Opacity>,
  "-khtml-user-select"?: Property$UserSelect | Array<Property$UserSelect>,
  "-moz-background-clip"?: Property$BackgroundClip | Array<Property$BackgroundClip>,
  "-moz-background-inline-policy"?: Property$BoxDecorationBreak | Array<Property$BoxDecorationBreak>,
  "-moz-background-origin"?: Property$BackgroundOrigin | Array<Property$BackgroundOrigin>,
  "-moz-background-size"?: Property$BackgroundSize<TLength> | Array<Property$BackgroundSize<TLength>>,
  "-moz-binding"?: Property$MozBinding | Array<Property$MozBinding>,
  "-moz-border-radius"?: Property$BorderRadius<TLength> | Array<Property$BorderRadius<TLength>>,
  "-moz-border-radius-bottomleft"?: Property$BorderBottomLeftRadius<TLength> | Array<Property$BorderBottomLeftRadius<TLength>>,
  "-moz-border-radius-bottomright"?: Property$BorderBottomRightRadius<TLength> | Array<Property$BorderBottomRightRadius<TLength>>,
  "-moz-border-radius-topleft"?: Property$BorderTopLeftRadius<TLength> | Array<Property$BorderTopLeftRadius<TLength>>,
  "-moz-border-radius-topright"?: Property$BorderTopRightRadius<TLength> | Array<Property$BorderTopRightRadius<TLength>>,
  "-moz-box-align"?: Property$BoxAlign | Array<Property$BoxAlign>,
  "-moz-box-direction"?: Property$BoxDirection | Array<Property$BoxDirection>,
  "-moz-box-flex"?: Property$BoxFlex | Array<Property$BoxFlex>,
  "-moz-box-ordinal-group"?: Property$BoxOrdinalGroup | Array<Property$BoxOrdinalGroup>,
  "-moz-box-orient"?: Property$BoxOrient | Array<Property$BoxOrient>,
  "-moz-box-pack"?: Property$BoxPack | Array<Property$BoxPack>,
  "-moz-box-shadow"?: Property$BoxShadow | Array<Property$BoxShadow>,
  "-moz-float-edge"?: Property$MozFloatEdge | Array<Property$MozFloatEdge>,
  "-moz-force-broken-image-icon"?: Property$MozForceBrokenImageIcon | Array<Property$MozForceBrokenImageIcon>,
  "-moz-opacity"?: Property$Opacity | Array<Property$Opacity>,
  "-moz-outline"?: Property$Outline<TLength> | Array<Property$Outline<TLength>>,
  "-moz-outline-color"?: Property$OutlineColor | Array<Property$OutlineColor>,
  "-moz-outline-radius"?: Property$MozOutlineRadius<TLength> | Array<Property$MozOutlineRadius<TLength>>,
  "-moz-outline-radius-bottomleft"?: Property$MozOutlineRadiusBottomleft<TLength> | Array<Property$MozOutlineRadiusBottomleft<TLength>>,
  "-moz-outline-radius-bottomright"?: Property$MozOutlineRadiusBottomright<TLength> | Array<Property$MozOutlineRadiusBottomright<TLength>>,
  "-moz-outline-radius-topleft"?: Property$MozOutlineRadiusTopleft<TLength> | Array<Property$MozOutlineRadiusTopleft<TLength>>,
  "-moz-outline-radius-topright"?: Property$MozOutlineRadiusTopright<TLength> | Array<Property$MozOutlineRadiusTopright<TLength>>,
  "-moz-outline-style"?: Property$OutlineStyle | Array<Property$OutlineStyle>,
  "-moz-outline-width"?: Property$OutlineWidth<TLength> | Array<Property$OutlineWidth<TLength>>,
  "-moz-text-align-last"?: Property$TextAlignLast | Array<Property$TextAlignLast>,
  "-moz-text-decoration-color"?: Property$TextDecorationColor | Array<Property$TextDecorationColor>,
  "-moz-text-decoration-line"?: Property$TextDecorationLine | Array<Property$TextDecorationLine>,
  "-moz-text-decoration-style"?: Property$TextDecorationStyle | Array<Property$TextDecorationStyle>,
  "-moz-user-input"?: Property$MozUserInput | Array<Property$MozUserInput>,
  "-ms-ime-mode"?: Property$ImeMode | Array<Property$ImeMode>,
  "-ms-scrollbar-track-color"?: Property$MsScrollbarTrackColor | Array<Property$MsScrollbarTrackColor>,
  "-o-animation"?: Property$Animation<TTime> | Array<Property$Animation<TTime>>,
  "-o-animation-delay"?: Property$AnimationDelay<TTime> | Array<Property$AnimationDelay<TTime>>,
  "-o-animation-direction"?: Property$AnimationDirection | Array<Property$AnimationDirection>,
  "-o-animation-duration"?: Property$AnimationDuration<TTime> | Array<Property$AnimationDuration<TTime>>,
  "-o-animation-fill-mode"?: Property$AnimationFillMode | Array<Property$AnimationFillMode>,
  "-o-animation-iteration-count"?: Property$AnimationIterationCount | Array<Property$AnimationIterationCount>,
  "-o-animation-name"?: Property$AnimationName | Array<Property$AnimationName>,
  "-o-animation-play-state"?: Property$AnimationPlayState | Array<Property$AnimationPlayState>,
  "-o-animation-timing-function"?: Property$AnimationTimingFunction | Array<Property$AnimationTimingFunction>,
  "-o-background-size"?: Property$BackgroundSize<TLength> | Array<Property$BackgroundSize<TLength>>,
  "-o-border-image"?: Property$BorderImage | Array<Property$BorderImage>,
  "-o-transform"?: Property$Transform | Array<Property$Transform>,
  "-o-transition"?: Property$Transition<TTime> | Array<Property$Transition<TTime>>,
  "-o-transition-delay"?: Property$TransitionDelay<TTime> | Array<Property$TransitionDelay<TTime>>,
  "-o-transition-duration"?: Property$TransitionDuration<TTime> | Array<Property$TransitionDuration<TTime>>,
  "-o-transition-property"?: Property$TransitionProperty | Array<Property$TransitionProperty>,
  "-o-transition-timing-function"?: Property$TransitionTimingFunction | Array<Property$TransitionTimingFunction>,
  "-webkit-box-align"?: Property$BoxAlign | Array<Property$BoxAlign>,
  "-webkit-box-direction"?: Property$BoxDirection | Array<Property$BoxDirection>,
  "-webkit-box-flex"?: Property$BoxFlex | Array<Property$BoxFlex>,
  "-webkit-box-flex-group"?: Property$BoxFlexGroup | Array<Property$BoxFlexGroup>,
  "-webkit-box-lines"?: Property$BoxLines | Array<Property$BoxLines>,
  "-webkit-box-ordinal-group"?: Property$BoxOrdinalGroup | Array<Property$BoxOrdinalGroup>,
  "-webkit-box-orient"?: Property$BoxOrient | Array<Property$BoxOrient>,
  "-webkit-box-pack"?: Property$BoxPack | Array<Property$BoxPack>,
  "-webkit-scroll-snap-points-x"?: Property$ScrollSnapPointsX | Array<Property$ScrollSnapPointsX>,
  "-webkit-scroll-snap-points-y"?: Property$ScrollSnapPointsY | Array<Property$ScrollSnapPointsY>,
|};

export type SvgPropertiesHyphenFallback<TLength = string | 0, TTime = string> = {|
  "alignment-baseline"?: Property$AlignmentBaseline | Array<Property$AlignmentBaseline>,
  "baseline-shift"?: Property$BaselineShift<TLength> | Array<Property$BaselineShift<TLength>>,
  clip?: Property$Clip | Array<Property$Clip>,
  "clip-path"?: Property$ClipPath | Array<Property$ClipPath>,
  "clip-rule"?: Property$ClipRule | Array<Property$ClipRule>,
  color?: Property$Color | Array<Property$Color>,
  "color-interpolation"?: Property$ColorInterpolation | Array<Property$ColorInterpolation>,
  "color-rendering"?: Property$ColorRendering | Array<Property$ColorRendering>,
  cursor?: Property$Cursor | Array<Property$Cursor>,
  direction?: Property$Direction | Array<Property$Direction>,
  display?: Property$Display | Array<Property$Display>,
  "dominant-baseline"?: Property$DominantBaseline | Array<Property$DominantBaseline>,
  fill?: Property$Fill | Array<Property$Fill>,
  "fill-opacity"?: Property$FillOpacity | Array<Property$FillOpacity>,
  "fill-rule"?: Property$FillRule | Array<Property$FillRule>,
  filter?: Property$Filter | Array<Property$Filter>,
  "flood-color"?: Property$FloodColor | Array<Property$FloodColor>,
  "flood-opacity"?: Property$FloodOpacity | Array<Property$FloodOpacity>,
  font?: Property$Font | Array<Property$Font>,
  "font-family"?: Property$FontFamily | Array<Property$FontFamily>,
  "font-size"?: Property$FontSize<TLength> | Array<Property$FontSize<TLength>>,
  "font-size-adjust"?: Property$FontSizeAdjust | Array<Property$FontSizeAdjust>,
  "font-stretch"?: Property$FontStretch | Array<Property$FontStretch>,
  "font-style"?: Property$FontStyle | Array<Property$FontStyle>,
  "font-variant"?: Property$FontVariant | Array<Property$FontVariant>,
  "font-weight"?: Property$FontWeight | Array<Property$FontWeight>,
  "glyph-orientation-vertical"?: Property$GlyphOrientationVertical | Array<Property$GlyphOrientationVertical>,
  "image-rendering"?: Property$ImageRendering | Array<Property$ImageRendering>,
  "letter-spacing"?: Property$LetterSpacing<TLength> | Array<Property$LetterSpacing<TLength>>,
  "lighting-color"?: Property$LightingColor | Array<Property$LightingColor>,
  "line-height"?: Property$LineHeight<TLength> | Array<Property$LineHeight<TLength>>,
  marker?: Property$Marker | Array<Property$Marker>,
  "marker-end"?: Property$MarkerEnd | Array<Property$MarkerEnd>,
  "marker-mid"?: Property$MarkerMid | Array<Property$MarkerMid>,
  "marker-start"?: Property$MarkerStart | Array<Property$MarkerStart>,
  mask?: Property$Mask<TLength> | Array<Property$Mask<TLength>>,
  opacity?: Property$Opacity | Array<Property$Opacity>,
  overflow?: Property$Overflow | Array<Property$Overflow>,
  "paint-order"?: Property$PaintOrder | Array<Property$PaintOrder>,
  "pointer-events"?: Property$PointerEvents | Array<Property$PointerEvents>,
  "shape-rendering"?: Property$ShapeRendering | Array<Property$ShapeRendering>,
  "stop-color"?: Property$StopColor | Array<Property$StopColor>,
  "stop-opacity"?: Property$StopOpacity | Array<Property$StopOpacity>,
  stroke?: Property$Stroke | Array<Property$Stroke>,
  "stroke-dasharray"?: Property$StrokeDasharray<TLength> | Array<Property$StrokeDasharray<TLength>>,
  "stroke-dashoffset"?: Property$StrokeDashoffset<TLength> | Array<Property$StrokeDashoffset<TLength>>,
  "stroke-linecap"?: Property$StrokeLinecap | Array<Property$StrokeLinecap>,
  "stroke-linejoin"?: Property$StrokeLinejoin | Array<Property$StrokeLinejoin>,
  "stroke-miterlimit"?: Property$StrokeMiterlimit | Array<Property$StrokeMiterlimit>,
  "stroke-opacity"?: Property$StrokeOpacity | Array<Property$StrokeOpacity>,
  "stroke-width"?: Property$StrokeWidth<TLength> | Array<Property$StrokeWidth<TLength>>,
  "text-anchor"?: Property$TextAnchor | Array<Property$TextAnchor>,
  "text-decoration"?: Property$TextDecoration<TLength> | Array<Property$TextDecoration<TLength>>,
  "text-rendering"?: Property$TextRendering | Array<Property$TextRendering>,
  "unicode-bidi"?: Property$UnicodeBidi | Array<Property$UnicodeBidi>,
  "vector-effect"?: Property$VectorEffect | Array<Property$VectorEffect>,
  visibility?: Property$Visibility | Array<Property$Visibility>,
  "white-space"?: Property$WhiteSpace | Array<Property$WhiteSpace>,
  "word-spacing"?: Property$WordSpacing<TLength> | Array<Property$WordSpacing<TLength>>,
  "writing-mode"?: Property$WritingMode | Array<Property$WritingMode>,
|};

export type PropertiesHyphenFallback<TLength = string | 0, TTime = string> = {|
  ...StandardPropertiesHyphenFallback<TLength, TTime>,
  ...VendorPropertiesHyphenFallback<TLength, TTime>,
  ...ObsoletePropertiesHyphenFallback<TLength, TTime>,
  ...SvgPropertiesHyphenFallback<TLength, TTime>,
|};
>>>>>>> develop

export type AtRules =
  | "@charset"
  | "@counter-style"
  | "@document"
  | "@font-face"
  | "@font-feature-values"
  | "@import"
  | "@keyframes"
  | "@media"
  | "@namespace"
  | "@page"
  | "@property"
  | "@supports"
  | "@viewport";

export type AdvancedPseudos =
  | ":-moz-any()"
  | ":-moz-dir"
  | ":-webkit-any()"
  | "::cue"
  | "::cue-region"
  | "::part"
  | "::slotted"
  | ":dir"
  | ":has"
  | ":host"
  | ":host-context"
  | ":is"
  | ":lang"
  | ":matches()"
  | ":not"
  | ":nth-child"
  | ":nth-last-child"
  | ":nth-last-of-type"
  | ":nth-of-type"
  | ":where";

export type SimplePseudos =
  | ":-khtml-any-link"
  | ":-moz-any-link"
  | ":-moz-focusring"
  | ":-moz-full-screen"
  | ":-moz-placeholder"
  | ":-moz-read-only"
  | ":-moz-read-write"
  | ":-ms-fullscreen"
  | ":-ms-input-placeholder"
  | ":-webkit-any-link"
  | ":-webkit-full-screen"
  | "::-moz-placeholder"
  | "::-moz-progress-bar"
  | "::-moz-range-progress"
  | "::-moz-range-thumb"
  | "::-moz-range-track"
  | "::-moz-selection"
  | "::-moz-ui-invalid"
  | "::-ms-backdrop"
  | "::-ms-browse"
  | "::-ms-check"
  | "::-ms-clear"
  | "::-ms-fill"
  | "::-ms-fill-lower"
  | "::-ms-fill-upper"
  | "::-ms-input-placeholder"
  | "::-ms-reveal"
  | "::-ms-thumb"
  | "::-ms-ticks-after"
  | "::-ms-ticks-before"
  | "::-ms-tooltip"
  | "::-ms-track"
  | "::-ms-value"
  | "::-webkit-backdrop"
  | "::-webkit-input-placeholder"
  | "::-webkit-progress-bar"
  | "::-webkit-progress-inner-value"
  | "::-webkit-progress-value"
  | "::-webkit-slider-runnable-track"
  | "::-webkit-slider-thumb"
  | "::after"
  | "::backdrop"
  | "::before"
  | "::cue"
  | "::cue-region"
  | "::first-letter"
  | "::first-line"
  | "::grammar-error"
  | "::marker"
  | "::placeholder"
  | "::selection"
  | "::spelling-error"
<<<<<<< HEAD
  | "::target-text"
=======
>>>>>>> develop
  | ":active"
  | ":after"
  | ":any-link"
  | ":before"
  | ":blank"
  | ":checked"
  | ":current"
  | ":default"
  | ":defined"
  | ":disabled"
  | ":empty"
  | ":enabled"
  | ":first"
  | ":first-child"
  | ":first-letter"
  | ":first-line"
  | ":first-of-type"
  | ":focus"
  | ":focus-visible"
  | ":focus-within"
  | ":fullscreen"
  | ":future"
  | ":hover"
  | ":in-range"
  | ":indeterminate"
  | ":invalid"
  | ":last-child"
  | ":last-of-type"
  | ":left"
  | ":link"
  | ":local-link"
  | ":nth-col"
  | ":nth-last-col"
  | ":only-child"
  | ":only-of-type"
  | ":optional"
  | ":out-of-range"
  | ":past"
  | ":paused"
  | ":picture-in-picture"
  | ":placeholder-shown"
  | ":read-only"
  | ":read-write"
  | ":required"
  | ":right"
  | ":root"
  | ":scope"
  | ":target"
  | ":target-within"
  | ":user-invalid"
  | ":valid"
  | ":visited";

export type Pseudos = AdvancedPseudos | SimplePseudos;

export type HtmlAttributes =
  | "[abbr]"
  | "[accept-charset]"
  | "[accept]"
  | "[accesskey]"
  | "[action]"
  | "[align]"
  | "[alink]"
  | "[allow]"
  | "[allowfullscreen]"
  | "[allowpaymentrequest]"
  | "[alt]"
  | "[archive]"
  | "[async]"
  | "[autobuffer]"
  | "[autocapitalize]"
  | "[autocomplete]"
  | "[autofocus]"
  | "[autoplay]"
  | "[axis]"
  | "[background]"
  | "[behavior]"
  | "[bgcolor]"
  | "[border]"
  | "[bottommargin]"
  | "[buffered]"
  | "[cellpadding]"
  | "[cellspacing]"
  | "[char]"
  | "[charoff]"
  | "[charset]"
  | "[checked]"
  | "[cite]"
  | "[class]"
  | "[classid]"
  | "[clear]"
  | "[code]"
  | "[codebase]"
  | "[codetype]"
  | "[color]"
  | "[cols]"
  | "[colspan]"
  | "[command]"
  | "[compact]"
  | "[content]"
  | "[contenteditable]"
  | "[contextmenu]"
  | "[controls]"
  | "[coords]"
  | "[crossorigin]"
  | "[data]"
  | "[datafld]"
  | "[datasrc]"
  | "[datetime]"
  | "[declare]"
  | "[decoding]"
  | "[default]"
  | "[defer]"
  | "[dir]"
  | "[direction]"
  | "[dirname]"
  | "[disabled]"
  | "[download]"
  | "[draggable]"
  | "[enctype]"
  | "[enterkeyhint]"
  | "[exportparts]"
  | "[face]"
  | "[for]"
  | "[form]"
  | "[formaction]"
  | "[formenctype]"
  | "[formmethod]"
  | "[formnovalidate]"
  | "[formtarget]"
  | "[frame]"
  | "[frameborder]"
  | "[headers]"
  | "[height]"
  | "[hidden]"
  | "[high]"
  | "[href]"
  | "[hreflang]"
  | "[hspace]"
  | "[http-equiv]"
  | "[icon]"
  | "[id]"
<<<<<<< HEAD
  | "[imagesizes]"
  | "[imagesrcset]"
=======
>>>>>>> develop
  | "[inputmode]"
  | "[integrity]"
  | "[intrinsicsize]"
  | "[is]"
  | "[ismap]"
  | "[itemid]"
  | "[itemprop]"
  | "[itemref]"
  | "[itemscope]"
  | "[itemtype]"
  | "[kind]"
  | "[label]"
  | "[lang]"
  | "[language]"
  | "[leftmargin]"
  | "[link]"
  | "[loading]"
  | "[longdesc]"
  | "[loop]"
  | "[low]"
  | "[manifest]"
  | "[marginheight]"
  | "[marginwidth]"
  | "[max]"
  | "[maxlength]"
  | "[mayscript]"
  | "[media]"
  | "[method]"
  | "[methods]"
  | "[min]"
  | "[minlength]"
  | "[moz-opaque]"
  | "[mozallowfullscreen]"
  | "[mozcurrentsampleoffset]"
  | "[msallowfullscreen]"
  | "[multiple]"
  | "[muted]"
  | "[name]"
  | "[nohref]"
  | "[nomodule]"
<<<<<<< HEAD
  | "[nonce]"
=======
>>>>>>> develop
  | "[noresize]"
  | "[noshade]"
  | "[novalidate]"
  | "[nowrap]"
  | "[object]"
  | "[onafterprint]"
  | "[onbeforeprint]"
  | "[onbeforeunload]"
  | "[onblur]"
  | "[onerror]"
  | "[onfocus]"
  | "[onhashchange]"
  | "[onlanguagechange]"
  | "[onload]"
  | "[onmessage]"
  | "[onoffline]"
  | "[ononline]"
  | "[onpopstate]"
  | "[onredo]"
  | "[onresize]"
  | "[onstorage]"
  | "[onundo]"
  | "[onunload]"
  | "[open]"
  | "[optimum]"
  | "[part]"
  | "[ping]"
  | "[placeholder]"
  | "[played]"
  | "[poster]"
  | "[prefetch]"
  | "[preload]"
  | "[profile]"
  | "[prompt]"
  | "[radiogroup]"
  | "[readonly]"
  | "[referrerPolicy]"
  | "[referrerpolicy]"
  | "[rel]"
  | "[required]"
  | "[rev]"
  | "[reversed]"
  | "[rightmargin]"
  | "[rows]"
  | "[rowspan]"
  | "[rules]"
  | "[sandbox-allow-downloads]"
  | "[sandbox-allow-modals]"
  | "[sandbox-allow-popups-to-escape-sandbox]"
  | "[sandbox-allow-popups]"
  | "[sandbox-allow-presentation]"
  | "[sandbox-allow-same-origin]"
  | "[sandbox-allow-storage-access-by-user-activation]"
  | "[sandbox-allow-top-navigation-by-user-activation]"
  | "[sandbox]"
  | "[scope]"
  | "[scoped]"
  | "[scrollamount]"
  | "[scrolldelay]"
  | "[scrolling]"
  | "[selected]"
  | "[shape]"
  | "[size]"
  | "[sizes]"
  | "[slot]"
  | "[span]"
  | "[spellcheck]"
  | "[src]"
  | "[srcdoc]"
  | "[srclang]"
  | "[srcset]"
  | "[standby]"
  | "[start]"
  | "[style]"
  | "[summary]"
  | "[tabindex]"
  | "[target]"
  | "[text]"
  | "[title]"
  | "[topmargin]"
  | "[translate]"
  | "[truespeed]"
  | "[type]"
  | "[typemustmatch]"
  | "[usemap]"
  | "[valign]"
  | "[value]"
  | "[valuetype]"
  | "[version]"
  | "[vlink]"
  | "[volume]"
  | "[vspace]"
  | "[webkitallowfullscreen]"
  | "[width]"
  | "[wrap]"
  | "[xmlns]";

export type SvgAttributes =
  | "[accent-height]"
  | "[alignment-baseline]"
  | "[allowReorder]"
  | "[alphabetic]"
  | "[animation]"
  | "[arabic-form]"
  | "[ascent]"
  | "[attributeName]"
  | "[attributeType]"
  | "[azimuth]"
  | "[baseFrequency]"
  | "[baseProfile]"
  | "[baseline-shift]"
  | "[bbox]"
  | "[bias]"
  | "[by]"
  | "[calcMode]"
  | "[cap-height]"
  | "[class]"
  | "[clip-path]"
  | "[clip-rule]"
  | "[clipPathUnits]"
  | "[clip]"
  | "[color-interpolation-filters]"
  | "[color-interpolation]"
  | "[color-profile]"
  | "[color-rendering]"
  | "[color]"
  | "[contentScriptType]"
  | "[contentStyleType]"
  | "[cursor]"
  | "[cx]"
  | "[cy]"
  | "[d]"
  | "[descent]"
  | "[diffuseConstant]"
  | "[direction]"
  | "[display]"
  | "[divisor]"
  | "[document]"
  | "[dominant-baseline]"
  | "[download]"
  | "[dur]"
  | "[dx]"
  | "[dy]"
  | "[edgeMode]"
  | "[elevation]"
  | "[enable-background]"
  | "[externalResourcesRequired]"
  | "[fill-opacity]"
  | "[fill-rule]"
  | "[fill]"
  | "[filterRes]"
  | "[filterUnits]"
  | "[filter]"
  | "[flood-color]"
  | "[flood-opacity]"
  | "[font-family]"
  | "[font-size-adjust]"
  | "[font-size]"
  | "[font-stretch]"
  | "[font-style]"
  | "[font-variant]"
  | "[font-weight]"
  | "[format]"
  | "[fr]"
  | "[from]"
  | "[fx]"
  | "[fy]"
  | "[g1]"
  | "[g2]"
  | "[global]"
  | "[glyph-name]"
  | "[glyph-orientation-horizontal]"
  | "[glyph-orientation-vertical]"
  | "[glyphRef]"
  | "[gradientTransform]"
  | "[gradientUnits]"
  | "[graphical]"
  | "[hanging]"
  | "[hatchContentUnits]"
  | "[hatchUnits]"
  | "[height]"
  | "[horiz-adv-x]"
  | "[horiz-origin-x]"
  | "[horiz-origin-y]"
  | "[href]"
  | "[hreflang]"
  | "[id]"
  | "[ideographic]"
  | "[image-rendering]"
  | "[in2]"
  | "[in]"
  | "[k1]"
  | "[k2]"
  | "[k3]"
  | "[k4]"
  | "[k]"
  | "[kernelMatrix]"
  | "[kernelUnitLength]"
  | "[kerning]"
  | "[keyPoints]"
  | "[lang]"
  | "[lengthAdjust]"
  | "[letter-spacing]"
  | "[lighterForError]"
  | "[lighting-color]"
  | "[limitingConeAngle]"
  | "[local]"
  | "[marker-end]"
  | "[marker-mid]"
  | "[marker-start]"
  | "[markerHeight]"
  | "[markerUnits]"
  | "[markerWidth]"
  | "[maskContentUnits]"
  | "[maskUnits]"
  | "[mask]"
  | "[mathematical]"
  | "[media]"
  | "[method]"
  | "[mode]"
  | "[name]"
  | "[numOctaves]"
  | "[offset]"
  | "[opacity]"
  | "[operator]"
  | "[order]"
  | "[orient]"
  | "[orientation]"
  | "[origin]"
  | "[overflow]"
  | "[overline-position]"
  | "[overline-thickness]"
  | "[paint-order]"
  | "[panose-1]"
  | "[path]"
  | "[patternContentUnits]"
  | "[patternTransform]"
  | "[patternUnits]"
  | "[ping]"
  | "[pitch]"
  | "[pointer-events]"
  | "[pointsAtX]"
  | "[pointsAtY]"
  | "[pointsAtZ]"
  | "[points]"
  | "[preserveAlpha]"
  | "[preserveAspectRatio]"
  | "[primitiveUnits]"
  | "[r]"
  | "[radius]"
  | "[refX]"
  | "[refY]"
  | "[referrerPolicy]"
  | "[rel]"
  | "[rendering-intent]"
  | "[repeatCount]"
  | "[requiredExtensions]"
  | "[requiredFeatures]"
  | "[rotate]"
  | "[rx]"
  | "[ry]"
  | "[scale]"
  | "[seed]"
  | "[shape-rendering]"
  | "[side]"
  | "[slope]"
  | "[solid-color]"
  | "[solid-opacity]"
  | "[spacing]"
  | "[specularConstant]"
  | "[specularExponent]"
  | "[spreadMethod]"
  | "[startOffset]"
  | "[stdDeviation]"
  | "[stemh]"
  | "[stemv]"
  | "[stitchTiles]"
  | "[stop-color]"
  | "[stop-opacity]"
  | "[strikethrough-position]"
  | "[strikethrough-thickness]"
  | "[string]"
  | "[stroke-dasharray]"
  | "[stroke-dashoffset]"
  | "[stroke-linecap]"
  | "[stroke-linejoin]"
  | "[stroke-miterlimit]"
  | "[stroke-opacity]"
  | "[stroke-width]"
  | "[stroke]"
  | "[style]"
  | "[surfaceScale]"
  | "[systemLanguage]"
  | "[tabindex]"
  | "[targetX]"
  | "[targetY]"
  | "[target]"
  | "[text-anchor]"
  | "[text-decoration]"
  | "[text-overflow]"
  | "[text-rendering]"
  | "[textLength]"
  | "[title]"
  | "[to]"
  | "[transform-origin]"
  | "[transform]"
  | "[type]"
  | "[u1]"
  | "[u2]"
  | "[underline-position]"
  | "[underline-thickness]"
  | "[unicode-bidi]"
  | "[unicode-range]"
  | "[unicode]"
  | "[units-per-em]"
  | "[v-alphabetic]"
  | "[v-hanging]"
  | "[v-ideographic]"
  | "[v-mathematical]"
  | "[values]"
  | "[vector-effect]"
  | "[version]"
  | "[vert-adv-y]"
  | "[vert-origin-x]"
  | "[vert-origin-y]"
  | "[viewBox]"
  | "[viewTarget]"
  | "[visibility]"
  | "[white-space]"
  | "[width]"
  | "[widths]"
  | "[word-spacing]"
  | "[writing-mode]"
  | "[x-height]"
  | "[x1]"
  | "[x2]"
  | "[xChannelSelector]"
  | "[x]"
  | "[y1]"
  | "[y2]"
  | "[yChannelSelector]"
  | "[y]"
  | "[z]"
  | "[zoomAndPan]";

export type Globals = "-moz-initial" | "inherit" | "initial" | "revert" | "unset";

<<<<<<< HEAD
type GlobalsString = Globals | string;

type GlobalsNumber = Globals | number;

export type AlignContentProperty = Globals | ContentDistribution | ContentPosition | "baseline" | "normal" | string;

export type AlignItemsProperty = Globals | SelfPosition | "baseline" | "normal" | "stretch" | string;

export type AlignSelfProperty = Globals | SelfPosition | "auto" | "baseline" | "normal" | "stretch" | string;

export type AlignTracksProperty = Globals | ContentDistribution | ContentPosition | "baseline" | "normal" | string;

export type AnimationProperty = Globals | SingleAnimation | string;

export type AnimationDirectionProperty = Globals | SingleAnimationDirection | string;

export type AnimationFillModeProperty = Globals | SingleAnimationFillMode | string;

export type AnimationIterationCountProperty = Globals | "infinite" | string | number;

export type AnimationNameProperty = Globals | "none" | string;

export type AnimationPlayStateProperty = Globals | "paused" | "running" | string;

export type AnimationTimingFunctionProperty = Globals | EasingFunction | string;

export type AppearanceProperty = Globals | CompatAuto | "auto" | "menulist-button" | "none" | "textfield";

export type AspectRatioProperty = Globals | "auto" | string;

export type AzimuthProperty =
=======
export type Property$AlignContent = Globals | DataType$ContentDistribution | DataType$ContentPosition | "baseline" | "normal" | string;

export type Property$AlignItems = Globals | DataType$SelfPosition | "baseline" | "normal" | "stretch" | string;

export type Property$AlignSelf = Globals | DataType$SelfPosition | "auto" | "baseline" | "normal" | "stretch" | string;

export type Property$AlignTracks = Globals | DataType$ContentDistribution | DataType$ContentPosition | "baseline" | "normal" | string;

export type Property$All = Globals;

export type Property$Animation<TTime = string> = Globals | DataType$SingleAnimation<TTime> | string;

export type Property$AnimationDelay<TTime = string> = Globals | TTime | string;

export type Property$AnimationDirection = Globals | DataType$SingleAnimationDirection | string;

export type Property$AnimationDuration<TTime = string> = Globals | TTime | string;

export type Property$AnimationFillMode = Globals | DataType$SingleAnimationFillMode | string;

export type Property$AnimationIterationCount = Globals | "infinite" | string | number;

export type Property$AnimationName = Globals | "none" | string;

export type Property$AnimationPlayState = Globals | "paused" | "running" | string;

export type Property$AnimationTimingFunction = Globals | DataType$EasingFunction | string;

export type Property$Appearance = Globals | DataType$CompatAuto | "auto" | "menulist-button" | "none" | "textfield";

export type Property$AspectRatio = Globals | "auto" | string;

export type Property$Azimuth =
>>>>>>> develop
  | Globals
  | "behind"
  | "center"
  | "center-left"
  | "center-right"
  | "far-left"
  | "far-right"
  | "left"
  | "left-side"
  | "leftwards"
  | "right"
  | "right-side"
  | "rightwards"
  | string;

<<<<<<< HEAD
export type BackdropFilterProperty = Globals | "none" | string;

export type BackfaceVisibilityProperty = Globals | "hidden" | "visible";

export type BackgroundProperty<TLength> = Globals | FinalBgLayer<TLength> | string;

export type BackgroundAttachmentProperty = Globals | Attachment | string;

export type BackgroundBlendModeProperty = Globals | BlendMode | string;

export type BackgroundClipProperty = Globals | Box | string;

export type BackgroundColorProperty = Globals | Color;

export type BackgroundImageProperty = Globals | "none" | string;

export type BackgroundOriginProperty = Globals | Box | string;

export type BackgroundPositionProperty<TLength> = Globals | BgPosition<TLength> | string;

export type BackgroundPositionXProperty<TLength> = Globals | TLength | "center" | "left" | "right" | "x-end" | "x-start" | string;

export type BackgroundPositionYProperty<TLength> = Globals | TLength | "bottom" | "center" | "top" | "y-end" | "y-start" | string;

export type BackgroundRepeatProperty = Globals | RepeatStyle | string;

export type BackgroundSizeProperty<TLength> = Globals | BgSize<TLength> | string;

export type BlockOverflowProperty = Globals | "clip" | "ellipsis" | string;

export type BlockSizeProperty<TLength> = Globals | TLength | "-moz-max-content" | "-moz-min-content" | "auto" | "max-content" | "min-content" | string;

export type BorderProperty<TLength> = Globals | LineWidth<TLength> | LineStyle | Color | string;

export type BorderBlockProperty<TLength> = Globals | LineWidth<TLength> | LineStyle | Color | string;

export type BorderBlockColorProperty = Globals | Color | string;

export type BorderBlockEndProperty<TLength> = Globals | LineWidth<TLength> | LineStyle | Color | string;

export type BorderBlockEndColorProperty = Globals | Color;

export type BorderBlockEndStyleProperty = Globals | LineStyle;

export type BorderBlockEndWidthProperty<TLength> = Globals | LineWidth<TLength>;

export type BorderBlockStartProperty<TLength> = Globals | LineWidth<TLength> | LineStyle | Color | string;

export type BorderBlockStartColorProperty = Globals | Color;

export type BorderBlockStartStyleProperty = Globals | LineStyle;

export type BorderBlockStartWidthProperty<TLength> = Globals | LineWidth<TLength>;

export type BorderBlockStyleProperty = Globals | LineStyle;

export type BorderBlockWidthProperty<TLength> = Globals | LineWidth<TLength>;

export type BorderBottomProperty<TLength> = Globals | LineWidth<TLength> | LineStyle | Color | string;

export type BorderBottomColorProperty = Globals | Color;

export type BorderBottomLeftRadiusProperty<TLength> = Globals | TLength | string;

export type BorderBottomRightRadiusProperty<TLength> = Globals | TLength | string;

export type BorderBottomStyleProperty = Globals | LineStyle;

export type BorderBottomWidthProperty<TLength> = Globals | LineWidth<TLength>;

export type BorderCollapseProperty = Globals | "collapse" | "separate";

export type BorderColorProperty = Globals | Color | string;

export type BorderEndEndRadiusProperty<TLength> = Globals | TLength | string;

export type BorderEndStartRadiusProperty<TLength> = Globals | TLength | string;

export type BorderImageProperty = Globals | "none" | "repeat" | "round" | "space" | "stretch" | string | number;

export type BorderImageOutsetProperty<TLength> = Globals | TLength | string | number;

export type BorderImageRepeatProperty = Globals | "repeat" | "round" | "space" | "stretch" | string;

export type BorderImageSliceProperty = Globals | string | number;

export type BorderImageSourceProperty = Globals | "none" | string;

export type BorderImageWidthProperty<TLength> = Globals | TLength | "auto" | string | number;

export type BorderInlineProperty<TLength> = Globals | LineWidth<TLength> | LineStyle | Color | string;

export type BorderInlineColorProperty = Globals | Color | string;

export type BorderInlineEndProperty<TLength> = Globals | LineWidth<TLength> | LineStyle | Color | string;

export type BorderInlineEndColorProperty = Globals | Color;

export type BorderInlineEndStyleProperty = Globals | LineStyle;

export type BorderInlineEndWidthProperty<TLength> = Globals | LineWidth<TLength>;

export type BorderInlineStartProperty<TLength> = Globals | LineWidth<TLength> | LineStyle | Color | string;

export type BorderInlineStartColorProperty = Globals | Color;

export type BorderInlineStartStyleProperty = Globals | LineStyle;

export type BorderInlineStartWidthProperty<TLength> = Globals | LineWidth<TLength>;

export type BorderInlineStyleProperty = Globals | LineStyle;

export type BorderInlineWidthProperty<TLength> = Globals | LineWidth<TLength>;

export type BorderLeftProperty<TLength> = Globals | LineWidth<TLength> | LineStyle | Color | string;

export type BorderLeftColorProperty = Globals | Color;

export type BorderLeftStyleProperty = Globals | LineStyle;

export type BorderLeftWidthProperty<TLength> = Globals | LineWidth<TLength>;

export type BorderRadiusProperty<TLength> = Globals | TLength | string;

export type BorderRightProperty<TLength> = Globals | LineWidth<TLength> | LineStyle | Color | string;

export type BorderRightColorProperty = Globals | Color;

export type BorderRightStyleProperty = Globals | LineStyle;

export type BorderRightWidthProperty<TLength> = Globals | LineWidth<TLength>;

export type BorderSpacingProperty<TLength> = Globals | TLength | string;

export type BorderStartEndRadiusProperty<TLength> = Globals | TLength | string;

export type BorderStartStartRadiusProperty<TLength> = Globals | TLength | string;

export type BorderStyleProperty = Globals | LineStyle | string;

export type BorderTopProperty<TLength> = Globals | LineWidth<TLength> | LineStyle | Color | string;

export type BorderTopColorProperty = Globals | Color;

export type BorderTopLeftRadiusProperty<TLength> = Globals | TLength | string;

export type BorderTopRightRadiusProperty<TLength> = Globals | TLength | string;

export type BorderTopStyleProperty = Globals | LineStyle;

export type BorderTopWidthProperty<TLength> = Globals | LineWidth<TLength>;

export type BorderWidthProperty<TLength> = Globals | LineWidth<TLength> | string;

export type BottomProperty<TLength> = Globals | TLength | "auto" | string;

export type BoxAlignProperty = Globals | "baseline" | "center" | "end" | "start" | "stretch";

export type BoxDecorationBreakProperty = Globals | "clone" | "slice";

export type BoxDirectionProperty = Globals | "inherit" | "normal" | "reverse";

export type BoxLinesProperty = Globals | "multiple" | "single";

export type BoxOrientProperty = Globals | "block-axis" | "horizontal" | "inherit" | "inline-axis" | "vertical";

export type BoxPackProperty = Globals | "center" | "end" | "justify" | "start";

export type BoxShadowProperty = Globals | "none" | string;

export type BoxSizingProperty = Globals | "border-box" | "content-box";

export type BreakAfterProperty =
=======
export type Property$BackdropFilter = Globals | "none" | string;

export type Property$BackfaceVisibility = Globals | "hidden" | "visible";

export type Property$Background<TLength = string | 0> = Globals | DataType$FinalBgLayer<TLength> | string;

export type Property$BackgroundAttachment = Globals | DataType$Attachment | string;

export type Property$BackgroundBlendMode = Globals | DataType$BlendMode | string;

export type Property$BackgroundClip = Globals | DataType$Box | string;

export type Property$BackgroundColor = Globals | DataType$Color;

export type Property$BackgroundImage = Globals | "none" | string;

export type Property$BackgroundOrigin = Globals | DataType$Box | string;

export type Property$BackgroundPosition<TLength = string | 0> = Globals | DataType$BgPosition<TLength> | string;

export type Property$BackgroundPositionX<TLength = string | 0> = Globals | TLength | "center" | "left" | "right" | "x-end" | "x-start" | string;

export type Property$BackgroundPositionY<TLength = string | 0> = Globals | TLength | "bottom" | "center" | "top" | "y-end" | "y-start" | string;

export type Property$BackgroundRepeat = Globals | DataType$RepeatStyle | string;

export type Property$BackgroundSize<TLength = string | 0> = Globals | DataType$BgSize<TLength> | string;

export type Property$BlockOverflow = Globals | "clip" | "ellipsis" | string;

export type Property$BlockSize<TLength = string | 0> = Globals | TLength | "-moz-max-content" | "-moz-min-content" | "auto" | "max-content" | "min-content" | string;

export type Property$Border<TLength = string | 0> = Globals | DataType$LineWidth<TLength> | DataType$LineStyle | DataType$Color | string;

export type Property$BorderBlock<TLength = string | 0> = Globals | DataType$LineWidth<TLength> | DataType$LineStyle | DataType$Color | string;

export type Property$BorderBlockColor = Globals | DataType$Color | string;

export type Property$BorderBlockEnd<TLength = string | 0> = Globals | DataType$LineWidth<TLength> | DataType$LineStyle | DataType$Color | string;

export type Property$BorderBlockEndColor = Globals | DataType$Color;

export type Property$BorderBlockEndStyle = Globals | DataType$LineStyle;

export type Property$BorderBlockEndWidth<TLength = string | 0> = Globals | DataType$LineWidth<TLength>;

export type Property$BorderBlockStart<TLength = string | 0> = Globals | DataType$LineWidth<TLength> | DataType$LineStyle | DataType$Color | string;

export type Property$BorderBlockStartColor = Globals | DataType$Color;

export type Property$BorderBlockStartStyle = Globals | DataType$LineStyle;

export type Property$BorderBlockStartWidth<TLength = string | 0> = Globals | DataType$LineWidth<TLength>;

export type Property$BorderBlockStyle = Globals | DataType$LineStyle;

export type Property$BorderBlockWidth<TLength = string | 0> = Globals | DataType$LineWidth<TLength>;

export type Property$BorderBottom<TLength = string | 0> = Globals | DataType$LineWidth<TLength> | DataType$LineStyle | DataType$Color | string;

export type Property$BorderBottomColor = Globals | DataType$Color;

export type Property$BorderBottomLeftRadius<TLength = string | 0> = Globals | TLength | string;

export type Property$BorderBottomRightRadius<TLength = string | 0> = Globals | TLength | string;

export type Property$BorderBottomStyle = Globals | DataType$LineStyle;

export type Property$BorderBottomWidth<TLength = string | 0> = Globals | DataType$LineWidth<TLength>;

export type Property$BorderCollapse = Globals | "collapse" | "separate";

export type Property$BorderColor = Globals | DataType$Color | string;

export type Property$BorderEndEndRadius<TLength = string | 0> = Globals | TLength | string;

export type Property$BorderEndStartRadius<TLength = string | 0> = Globals | TLength | string;

export type Property$BorderImage = Globals | "none" | "repeat" | "round" | "space" | "stretch" | string | number;

export type Property$BorderImageOutset<TLength = string | 0> = Globals | TLength | string | number;

export type Property$BorderImageRepeat = Globals | "repeat" | "round" | "space" | "stretch" | string;

export type Property$BorderImageSlice = Globals | string | number;

export type Property$BorderImageSource = Globals | "none" | string;

export type Property$BorderImageWidth<TLength = string | 0> = Globals | TLength | "auto" | string | number;

export type Property$BorderInline<TLength = string | 0> = Globals | DataType$LineWidth<TLength> | DataType$LineStyle | DataType$Color | string;

export type Property$BorderInlineColor = Globals | DataType$Color | string;

export type Property$BorderInlineEnd<TLength = string | 0> = Globals | DataType$LineWidth<TLength> | DataType$LineStyle | DataType$Color | string;

export type Property$BorderInlineEndColor = Globals | DataType$Color;

export type Property$BorderInlineEndStyle = Globals | DataType$LineStyle;

export type Property$BorderInlineEndWidth<TLength = string | 0> = Globals | DataType$LineWidth<TLength>;

export type Property$BorderInlineStart<TLength = string | 0> = Globals | DataType$LineWidth<TLength> | DataType$LineStyle | DataType$Color | string;

export type Property$BorderInlineStartColor = Globals | DataType$Color;

export type Property$BorderInlineStartStyle = Globals | DataType$LineStyle;

export type Property$BorderInlineStartWidth<TLength = string | 0> = Globals | DataType$LineWidth<TLength>;

export type Property$BorderInlineStyle = Globals | DataType$LineStyle;

export type Property$BorderInlineWidth<TLength = string | 0> = Globals | DataType$LineWidth<TLength>;

export type Property$BorderLeft<TLength = string | 0> = Globals | DataType$LineWidth<TLength> | DataType$LineStyle | DataType$Color | string;

export type Property$BorderLeftColor = Globals | DataType$Color;

export type Property$BorderLeftStyle = Globals | DataType$LineStyle;

export type Property$BorderLeftWidth<TLength = string | 0> = Globals | DataType$LineWidth<TLength>;

export type Property$BorderRadius<TLength = string | 0> = Globals | TLength | string;

export type Property$BorderRight<TLength = string | 0> = Globals | DataType$LineWidth<TLength> | DataType$LineStyle | DataType$Color | string;

export type Property$BorderRightColor = Globals | DataType$Color;

export type Property$BorderRightStyle = Globals | DataType$LineStyle;

export type Property$BorderRightWidth<TLength = string | 0> = Globals | DataType$LineWidth<TLength>;

export type Property$BorderSpacing<TLength = string | 0> = Globals | TLength | string;

export type Property$BorderStartEndRadius<TLength = string | 0> = Globals | TLength | string;

export type Property$BorderStartStartRadius<TLength = string | 0> = Globals | TLength | string;

export type Property$BorderStyle = Globals | DataType$LineStyle | string;

export type Property$BorderTop<TLength = string | 0> = Globals | DataType$LineWidth<TLength> | DataType$LineStyle | DataType$Color | string;

export type Property$BorderTopColor = Globals | DataType$Color;

export type Property$BorderTopLeftRadius<TLength = string | 0> = Globals | TLength | string;

export type Property$BorderTopRightRadius<TLength = string | 0> = Globals | TLength | string;

export type Property$BorderTopStyle = Globals | DataType$LineStyle;

export type Property$BorderTopWidth<TLength = string | 0> = Globals | DataType$LineWidth<TLength>;

export type Property$BorderWidth<TLength = string | 0> = Globals | DataType$LineWidth<TLength> | string;

export type Property$Bottom<TLength = string | 0> = Globals | TLength | "auto" | string;

export type Property$BoxAlign = Globals | "baseline" | "center" | "end" | "start" | "stretch";

export type Property$BoxDecorationBreak = Globals | "clone" | "slice";

export type Property$BoxDirection = Globals | "inherit" | "normal" | "reverse";

export type Property$BoxFlex = Globals | number;

export type Property$BoxFlexGroup = Globals | number;

export type Property$BoxLines = Globals | "multiple" | "single";

export type Property$BoxOrdinalGroup = Globals | number;

export type Property$BoxOrient = Globals | "block-axis" | "horizontal" | "inherit" | "inline-axis" | "vertical";

export type Property$BoxPack = Globals | "center" | "end" | "justify" | "start";

export type Property$BoxShadow = Globals | "none" | string;

export type Property$BoxSizing = Globals | "border-box" | "content-box";

export type Property$BreakAfter =
>>>>>>> develop
  | Globals
  | "all"
  | "always"
  | "auto"
  | "avoid"
  | "avoid-column"
  | "avoid-page"
  | "avoid-region"
  | "column"
  | "left"
  | "page"
  | "recto"
  | "region"
  | "right"
  | "verso";

<<<<<<< HEAD
export type BreakBeforeProperty =
=======
export type Property$BreakBefore =
>>>>>>> develop
  | Globals
  | "all"
  | "always"
  | "auto"
  | "avoid"
  | "avoid-column"
  | "avoid-page"
  | "avoid-region"
  | "column"
  | "left"
  | "page"
  | "recto"
  | "region"
  | "right"
  | "verso";

<<<<<<< HEAD
export type BreakInsideProperty = Globals | "auto" | "avoid" | "avoid-column" | "avoid-page" | "avoid-region";

export type CaptionSideProperty = Globals | "block-end" | "block-start" | "bottom" | "inline-end" | "inline-start" | "top";

export type CaretColorProperty = Globals | Color | "auto";

export type ClearProperty = Globals | "both" | "inline-end" | "inline-start" | "left" | "none" | "right";

export type ClipProperty = Globals | "auto" | string;

export type ClipPathProperty = Globals | GeometryBox | "none" | string;

export type ColorProperty = Globals | Color;

export type ColorAdjustProperty = Globals | "economy" | "exact";

export type ColumnCountProperty = Globals | "auto" | number;

export type ColumnFillProperty = Globals | "auto" | "balance";

export type ColumnGapProperty<TLength> = Globals | TLength | "normal" | string;

export type ColumnRuleProperty<TLength> = Globals | LineWidth<TLength> | LineStyle | Color | string;

export type ColumnRuleColorProperty = Globals | Color;

export type ColumnRuleStyleProperty = Globals | LineStyle | string;

export type ColumnRuleWidthProperty<TLength> = Globals | LineWidth<TLength> | string;

export type ColumnSpanProperty = Globals | "all" | "none";

export type ColumnWidthProperty<TLength> = Globals | TLength | "auto";

export type ColumnsProperty<TLength> = Globals | TLength | "auto" | string | number;

export type ContainProperty = Globals | "content" | "layout" | "none" | "paint" | "size" | "strict" | "style" | string;

export type ContentProperty = Globals | ContentList | "none" | "normal" | string;

export type ContentVisibilityProperty = Globals | "auto" | "hidden" | "visible";

export type CounterIncrementProperty = Globals | "none" | string;

export type CounterResetProperty = Globals | "none" | string;

export type CounterSetProperty = Globals | "none" | string;

export type CursorProperty =
=======
export type Property$BreakInside = Globals | "auto" | "avoid" | "avoid-column" | "avoid-page" | "avoid-region";

export type Property$CaptionSide = Globals | "block-end" | "block-start" | "bottom" | "inline-end" | "inline-start" | "top";

export type Property$CaretColor = Globals | DataType$Color | "auto";

export type Property$Clear = Globals | "both" | "inline-end" | "inline-start" | "left" | "none" | "right";

export type Property$Clip = Globals | "auto" | string;

export type Property$ClipPath = Globals | DataType$GeometryBox | "none" | string;

export type Property$Color = Globals | DataType$Color;

export type Property$ColorAdjust = Globals | "economy" | "exact";

export type Property$ColumnCount = Globals | "auto" | number;

export type Property$ColumnFill = Globals | "auto" | "balance";

export type Property$ColumnGap<TLength = string | 0> = Globals | TLength | "normal" | string;

export type Property$ColumnRule<TLength = string | 0> = Globals | DataType$LineWidth<TLength> | DataType$LineStyle | DataType$Color | string;

export type Property$ColumnRuleColor = Globals | DataType$Color;

export type Property$ColumnRuleStyle = Globals | DataType$LineStyle | string;

export type Property$ColumnRuleWidth<TLength = string | 0> = Globals | DataType$LineWidth<TLength> | string;

export type Property$ColumnSpan = Globals | "all" | "none";

export type Property$ColumnWidth<TLength = string | 0> = Globals | TLength | "auto";

export type Property$Columns<TLength = string | 0> = Globals | TLength | "auto" | string | number;

export type Property$Contain = Globals | "content" | "layout" | "none" | "paint" | "size" | "strict" | "style" | string;

export type Property$Content = Globals | DataType$ContentList | "none" | "normal" | string;

export type Property$ContentVisibility = Globals | "auto" | "hidden" | "visible";

export type Property$CounterIncrement = Globals | "none" | string;

export type Property$CounterReset = Globals | "none" | string;

export type Property$CounterSet = Globals | "none" | string;

export type Property$Cursor =
>>>>>>> develop
  | Globals
  | "-moz-grab"
  | "-webkit-grab"
  | "alias"
  | "all-scroll"
  | "auto"
  | "cell"
  | "col-resize"
  | "context-menu"
  | "copy"
  | "crosshair"
  | "default"
  | "e-resize"
  | "ew-resize"
  | "grab"
  | "grabbing"
  | "help"
  | "move"
  | "n-resize"
  | "ne-resize"
  | "nesw-resize"
  | "no-drop"
  | "none"
  | "not-allowed"
  | "ns-resize"
  | "nw-resize"
  | "nwse-resize"
  | "pointer"
  | "progress"
  | "row-resize"
  | "s-resize"
  | "se-resize"
  | "sw-resize"
  | "text"
  | "vertical-text"
  | "w-resize"
  | "wait"
  | "zoom-in"
  | "zoom-out"
  | string;

<<<<<<< HEAD
export type DirectionProperty = Globals | "ltr" | "rtl";

export type DisplayProperty = Globals | DisplayOutside | DisplayInside | DisplayInternal | DisplayLegacy | "contents" | "list-item" | "none" | string;

export type EmptyCellsProperty = Globals | "hide" | "show";

export type FilterProperty = Globals | "none" | string;

export type FlexProperty<TLength> = Globals | TLength | "auto" | "content" | "max-content" | "min-content" | "none" | string | number;

export type FlexBasisProperty<TLength> = Globals | TLength | "-moz-max-content" | "-moz-min-content" | "-webkit-auto" | "auto" | "content" | "max-content" | "min-content" | string;

export type FlexDirectionProperty = Globals | "column" | "column-reverse" | "row" | "row-reverse";

export type FlexFlowProperty = Globals | "column" | "column-reverse" | "nowrap" | "row" | "row-reverse" | "wrap" | "wrap-reverse" | string;

export type FlexWrapProperty = Globals | "nowrap" | "wrap" | "wrap-reverse";

export type FloatProperty = Globals | "inline-end" | "inline-start" | "left" | "none" | "right";

export type FontProperty = Globals | "caption" | "icon" | "menu" | "message-box" | "small-caption" | "status-bar" | string;

export type FontFamilyProperty = Globals | GenericFamily | string;

export type FontFeatureSettingsProperty = Globals | "normal" | string;

export type FontKerningProperty = Globals | "auto" | "none" | "normal";

export type FontLanguageOverrideProperty = Globals | "normal" | string;

export type FontOpticalSizingProperty = Globals | "auto" | "none";

export type FontSizeProperty<TLength> = Globals | AbsoluteSize | TLength | "larger" | "smaller" | string;

export type FontSizeAdjustProperty = Globals | "none" | number;

export type FontSmoothProperty<TLength> = Globals | AbsoluteSize | TLength | "always" | "auto" | "never";

export type FontStretchProperty = Globals | FontStretchAbsolute;

export type FontStyleProperty = Globals | "italic" | "normal" | "oblique" | string;

export type FontSynthesisProperty = Globals | "none" | "style" | "weight" | string;

export type FontVariantProperty =
  | Globals
  | EastAsianVariantValues
=======
export type Property$Direction = Globals | "ltr" | "rtl";

export type Property$Display =
  | Globals
  | DataType$DisplayOutside
  | DataType$DisplayInside
  | DataType$DisplayInternal
  | DataType$DisplayLegacy
  | "contents"
  | "list-item"
  | "none"
  | string;

export type Property$EmptyCells = Globals | "hide" | "show";

export type Property$Filter = Globals | "none" | string;

export type Property$Flex<TLength = string | 0> = Globals | TLength | "auto" | "content" | "max-content" | "min-content" | "none" | string | number;

export type Property$FlexBasis<TLength = string | 0> =
  | Globals
  | TLength
  | "-moz-max-content"
  | "-moz-min-content"
  | "-webkit-auto"
  | "auto"
  | "content"
  | "max-content"
  | "min-content"
  | string;

export type Property$FlexDirection = Globals | "column" | "column-reverse" | "row" | "row-reverse";

export type Property$FlexFlow = Globals | "column" | "column-reverse" | "nowrap" | "row" | "row-reverse" | "wrap" | "wrap-reverse" | string;

export type Property$FlexGrow = Globals | number;

export type Property$FlexShrink = Globals | number;

export type Property$FlexWrap = Globals | "nowrap" | "wrap" | "wrap-reverse";

export type Property$Float = Globals | "inline-end" | "inline-start" | "left" | "none" | "right";

export type Property$Font = Globals | "caption" | "icon" | "menu" | "message-box" | "small-caption" | "status-bar" | string;

export type Property$FontFamily = Globals | DataType$GenericFamily | string;

export type Property$FontFeatureSettings = Globals | "normal" | string;

export type Property$FontKerning = Globals | "auto" | "none" | "normal";

export type Property$FontLanguageOverride = Globals | "normal" | string;

export type Property$FontOpticalSizing = Globals | "auto" | "none";

export type Property$FontSize<TLength = string | 0> = Globals | DataType$AbsoluteSize | TLength | "larger" | "smaller" | string;

export type Property$FontSizeAdjust = Globals | "none" | number;

export type Property$FontSmooth<TLength = string | 0> = Globals | DataType$AbsoluteSize | TLength | "always" | "auto" | "never";

export type Property$FontStretch = Globals | DataType$FontStretchAbsolute;

export type Property$FontStyle = Globals | "italic" | "normal" | "oblique" | string;

export type Property$FontSynthesis = Globals | "none" | "style" | "weight" | string;

export type Property$FontVariant =
  | Globals
  | DataType$EastAsianVariantValues
>>>>>>> develop
  | "all-petite-caps"
  | "all-small-caps"
  | "common-ligatures"
  | "contextual"
  | "diagonal-fractions"
  | "discretionary-ligatures"
  | "full-width"
  | "historical-forms"
  | "historical-ligatures"
  | "lining-nums"
  | "no-common-ligatures"
  | "no-contextual"
  | "no-discretionary-ligatures"
  | "no-historical-ligatures"
  | "none"
  | "normal"
  | "oldstyle-nums"
  | "ordinal"
  | "petite-caps"
  | "proportional-nums"
  | "proportional-width"
  | "ruby"
  | "slashed-zero"
  | "small-caps"
  | "stacked-fractions"
  | "tabular-nums"
  | "titling-caps"
  | "unicase"
  | string;

<<<<<<< HEAD
export type FontVariantAlternatesProperty = Globals | "historical-forms" | "normal" | string;

export type FontVariantCapsProperty = Globals | "all-petite-caps" | "all-small-caps" | "normal" | "petite-caps" | "small-caps" | "titling-caps" | "unicase";

export type FontVariantEastAsianProperty = Globals | EastAsianVariantValues | "full-width" | "normal" | "proportional-width" | "ruby" | string;

export type FontVariantLigaturesProperty =
=======
export type Property$FontVariantAlternates = Globals | "historical-forms" | "normal" | string;

export type Property$FontVariantCaps = Globals | "all-petite-caps" | "all-small-caps" | "normal" | "petite-caps" | "small-caps" | "titling-caps" | "unicase";

export type Property$FontVariantEastAsian = Globals | DataType$EastAsianVariantValues | "full-width" | "normal" | "proportional-width" | "ruby" | string;

export type Property$FontVariantLigatures =
>>>>>>> develop
  | Globals
  | "common-ligatures"
  | "contextual"
  | "discretionary-ligatures"
  | "historical-ligatures"
  | "no-common-ligatures"
  | "no-contextual"
  | "no-discretionary-ligatures"
  | "no-historical-ligatures"
  | "none"
  | "normal"
  | string;

<<<<<<< HEAD
export type FontVariantNumericProperty =
=======
export type Property$FontVariantNumeric =
>>>>>>> develop
  | Globals
  | "diagonal-fractions"
  | "lining-nums"
  | "normal"
  | "oldstyle-nums"
  | "ordinal"
  | "proportional-nums"
  | "slashed-zero"
  | "stacked-fractions"
  | "tabular-nums"
  | string;

<<<<<<< HEAD
export type FontVariantPositionProperty = Globals | "normal" | "sub" | "super";

export type FontVariationSettingsProperty = Globals | "normal" | string;

export type FontWeightProperty = Globals | FontWeightAbsolute | "bolder" | "lighter";

export type ForcedColorAdjustProperty = Globals | "auto" | "none";

export type GapProperty<TLength> = Globals | TLength | "normal" | string;

export type GridProperty = Globals | "none" | string;

export type GridAreaProperty = Globals | GridLine | string;

export type GridAutoColumnsProperty<TLength> = Globals | TrackBreadth<TLength> | string;

export type GridAutoFlowProperty = Globals | "column" | "dense" | "row" | string;

export type GridAutoRowsProperty<TLength> = Globals | TrackBreadth<TLength> | string;

export type GridColumnProperty = Globals | GridLine | string;

export type GridColumnEndProperty = Globals | GridLine;

export type GridColumnGapProperty<TLength> = Globals | TLength | string;

export type GridColumnStartProperty = Globals | GridLine;

export type GridGapProperty<TLength> = Globals | TLength | string;

export type GridRowProperty = Globals | GridLine | string;

export type GridRowEndProperty = Globals | GridLine;

export type GridRowGapProperty<TLength> = Globals | TLength | string;

export type GridRowStartProperty = Globals | GridLine;

export type GridTemplateProperty = Globals | "none" | string;

export type GridTemplateAreasProperty = Globals | "none" | string;

export type GridTemplateColumnsProperty<TLength> = Globals | TrackBreadth<TLength> | "none" | "subgrid" | string;

export type GridTemplateRowsProperty<TLength> = Globals | TrackBreadth<TLength> | "none" | "subgrid" | string;

export type HangingPunctuationProperty = Globals | "allow-end" | "first" | "force-end" | "last" | "none" | string;

export type HeightProperty<TLength> = Globals | TLength | "-moz-max-content" | "-moz-min-content" | "auto" | "max-content" | "min-content" | string;

export type HyphensProperty = Globals | "auto" | "manual" | "none";

export type ImageOrientationProperty = Globals | "flip" | "from-image" | string;

export type ImageRenderingProperty = Globals | "-moz-crisp-edges" | "-webkit-optimize-contrast" | "auto" | "crisp-edges" | "pixelated";

export type ImageResolutionProperty = Globals | "from-image" | string;

export type ImeModeProperty = Globals | "active" | "auto" | "disabled" | "inactive" | "normal";

export type InitialLetterProperty = Globals | "normal" | string | number;

export type InlineSizeProperty<TLength> = Globals | TLength | "-moz-max-content" | "-moz-min-content" | "auto" | "max-content" | "min-content" | string;

export type InsetProperty<TLength> = Globals | TLength | "auto" | string;

export type InsetBlockProperty<TLength> = Globals | TLength | "auto" | string;

export type InsetBlockEndProperty<TLength> = Globals | TLength | "auto" | string;

export type InsetBlockStartProperty<TLength> = Globals | TLength | "auto" | string;

export type InsetInlineProperty<TLength> = Globals | TLength | "auto" | string;

export type InsetInlineEndProperty<TLength> = Globals | TLength | "auto" | string;

export type InsetInlineStartProperty<TLength> = Globals | TLength | "auto" | string;

export type IsolationProperty = Globals | "auto" | "isolate";

export type JustifyContentProperty = Globals | ContentDistribution | ContentPosition | "left" | "normal" | "right" | string;

export type JustifyItemsProperty = Globals | SelfPosition | "baseline" | "left" | "legacy" | "normal" | "right" | "stretch" | string;

export type JustifySelfProperty = Globals | SelfPosition | "auto" | "baseline" | "left" | "normal" | "right" | "stretch" | string;

export type JustifyTracksProperty = Globals | ContentDistribution | ContentPosition | "left" | "normal" | "right" | string;

export type LeftProperty<TLength> = Globals | TLength | "auto" | string;

export type LetterSpacingProperty<TLength> = Globals | TLength | "normal";

export type LineBreakProperty = Globals | "anywhere" | "auto" | "loose" | "normal" | "strict";

export type LineClampProperty = Globals | "none" | number;

export type LineHeightProperty<TLength> = Globals | TLength | "normal" | string | number;

export type LineHeightStepProperty<TLength> = Globals | TLength;

export type ListStyleProperty = Globals | "inside" | "none" | "outside" | string;

export type ListStyleImageProperty = Globals | "none" | string;

export type ListStylePositionProperty = Globals | "inside" | "outside";

export type ListStyleTypeProperty = Globals | "none" | string;

export type MarginProperty<TLength> = Globals | TLength | "auto" | string;

export type MarginBlockProperty<TLength> = Globals | TLength | "auto" | string;

export type MarginBlockEndProperty<TLength> = Globals | TLength | "auto" | string;

export type MarginBlockStartProperty<TLength> = Globals | TLength | "auto" | string;

export type MarginBottomProperty<TLength> = Globals | TLength | "auto" | string;

export type MarginInlineProperty<TLength> = Globals | TLength | "auto" | string;

export type MarginInlineEndProperty<TLength> = Globals | TLength | "auto" | string;

export type MarginInlineStartProperty<TLength> = Globals | TLength | "auto" | string;

export type MarginLeftProperty<TLength> = Globals | TLength | "auto" | string;

export type MarginRightProperty<TLength> = Globals | TLength | "auto" | string;

export type MarginTopProperty<TLength> = Globals | TLength | "auto" | string;

export type MaskProperty<TLength> = Globals | MaskLayer<TLength> | string;

export type MaskBorderProperty = Globals | "alpha" | "luminance" | "none" | "repeat" | "round" | "space" | "stretch" | string | number;

export type MaskBorderModeProperty = Globals | "alpha" | "luminance";

export type MaskBorderOutsetProperty<TLength> = Globals | TLength | string | number;

export type MaskBorderRepeatProperty = Globals | "repeat" | "round" | "space" | "stretch" | string;

export type MaskBorderSliceProperty = Globals | string | number;

export type MaskBorderSourceProperty = Globals | "none" | string;

export type MaskBorderWidthProperty<TLength> = Globals | TLength | "auto" | string | number;

export type MaskClipProperty = Globals | GeometryBox | "no-clip" | string;

export type MaskCompositeProperty = Globals | CompositingOperator | string;

export type MaskImageProperty = Globals | "none" | string;

export type MaskModeProperty = Globals | MaskingMode | string;

export type MaskOriginProperty = Globals | Box | "margin-box" | string;

export type MaskPositionProperty<TLength> = Globals | Position<TLength> | string;

export type MaskRepeatProperty = Globals | RepeatStyle | string;

export type MaskSizeProperty<TLength> = Globals | BgSize<TLength> | string;

export type MaskTypeProperty = Globals | "alpha" | "luminance";

export type MathStyleProperty = Globals | "compact" | "normal";

export type MaxBlockSizeProperty<TLength> = Globals | TLength | "-moz-max-content" | "-moz-min-content" | "max-content" | "min-content" | "none" | string;

export type MaxHeightProperty<TLength> =
=======
export type Property$FontVariantPosition = Globals | "normal" | "sub" | "super";

export type Property$FontVariationSettings = Globals | "normal" | string;

export type Property$FontWeight = Globals | DataType$FontWeightAbsolute | "bolder" | "lighter";

export type Property$ForcedColorAdjust = Globals | "auto" | "none";

export type Property$Gap<TLength = string | 0> = Globals | TLength | "normal" | string;

export type Property$Grid = Globals | "none" | string;

export type Property$GridArea = Globals | DataType$GridLine | string;

export type Property$GridAutoColumns<TLength = string | 0> = Globals | DataType$TrackBreadth<TLength> | string;

export type Property$GridAutoFlow = Globals | "column" | "dense" | "row" | string;

export type Property$GridAutoRows<TLength = string | 0> = Globals | DataType$TrackBreadth<TLength> | string;

export type Property$GridColumn = Globals | DataType$GridLine | string;

export type Property$GridColumnEnd = Globals | DataType$GridLine;

export type Property$GridColumnGap<TLength = string | 0> = Globals | TLength | string;

export type Property$GridColumnStart = Globals | DataType$GridLine;

export type Property$GridGap<TLength = string | 0> = Globals | TLength | string;

export type Property$GridRow = Globals | DataType$GridLine | string;

export type Property$GridRowEnd = Globals | DataType$GridLine;

export type Property$GridRowGap<TLength = string | 0> = Globals | TLength | string;

export type Property$GridRowStart = Globals | DataType$GridLine;

export type Property$GridTemplate = Globals | "none" | string;

export type Property$GridTemplateAreas = Globals | "none" | string;

export type Property$GridTemplateColumns<TLength = string | 0> = Globals | DataType$TrackBreadth<TLength> | "none" | "subgrid" | string;

export type Property$GridTemplateRows<TLength = string | 0> = Globals | DataType$TrackBreadth<TLength> | "none" | "subgrid" | string;

export type Property$HangingPunctuation = Globals | "allow-end" | "first" | "force-end" | "last" | "none" | string;

export type Property$Height<TLength = string | 0> = Globals | TLength | "-moz-max-content" | "-moz-min-content" | "auto" | "max-content" | "min-content" | string;

export type Property$Hyphens = Globals | "auto" | "manual" | "none";

export type Property$ImageOrientation = Globals | "flip" | "from-image" | string;

export type Property$ImageRendering = Globals | "-moz-crisp-edges" | "-webkit-optimize-contrast" | "auto" | "crisp-edges" | "pixelated";

export type Property$ImageResolution = Globals | "from-image" | string;

export type Property$ImeMode = Globals | "active" | "auto" | "disabled" | "inactive" | "normal";

export type Property$InitialLetter = Globals | "normal" | string | number;

export type Property$InlineSize<TLength = string | 0> = Globals | TLength | "-moz-max-content" | "-moz-min-content" | "auto" | "max-content" | "min-content" | string;

export type Property$Inset<TLength = string | 0> = Globals | TLength | "auto" | string;

export type Property$InsetBlock<TLength = string | 0> = Globals | TLength | "auto" | string;

export type Property$InsetBlockEnd<TLength = string | 0> = Globals | TLength | "auto" | string;

export type Property$InsetBlockStart<TLength = string | 0> = Globals | TLength | "auto" | string;

export type Property$InsetInline<TLength = string | 0> = Globals | TLength | "auto" | string;

export type Property$InsetInlineEnd<TLength = string | 0> = Globals | TLength | "auto" | string;

export type Property$InsetInlineStart<TLength = string | 0> = Globals | TLength | "auto" | string;

export type Property$Isolation = Globals | "auto" | "isolate";

export type Property$JustifyContent = Globals | DataType$ContentDistribution | DataType$ContentPosition | "left" | "normal" | "right" | string;

export type Property$JustifyItems = Globals | DataType$SelfPosition | "baseline" | "left" | "legacy" | "normal" | "right" | "stretch" | string;

export type Property$JustifySelf = Globals | DataType$SelfPosition | "auto" | "baseline" | "left" | "normal" | "right" | "stretch" | string;

export type Property$JustifyTracks = Globals | DataType$ContentDistribution | DataType$ContentPosition | "left" | "normal" | "right" | string;

export type Property$Left<TLength = string | 0> = Globals | TLength | "auto" | string;

export type Property$LetterSpacing<TLength = string | 0> = Globals | TLength | "normal";

export type Property$LineBreak = Globals | "anywhere" | "auto" | "loose" | "normal" | "strict";

export type Property$LineClamp = Globals | "none" | number;

export type Property$LineHeight<TLength = string | 0> = Globals | TLength | "normal" | string | number;

export type Property$LineHeightStep<TLength = string | 0> = Globals | TLength;

export type Property$ListStyle = Globals | "inside" | "none" | "outside" | string;

export type Property$ListStyleImage = Globals | "none" | string;

export type Property$ListStylePosition = Globals | "inside" | "outside";

export type Property$ListStyleType = Globals | "none" | string;

export type Property$Margin<TLength = string | 0> = Globals | TLength | "auto" | string;

export type Property$MarginBlock<TLength = string | 0> = Globals | TLength | "auto" | string;

export type Property$MarginBlockEnd<TLength = string | 0> = Globals | TLength | "auto" | string;

export type Property$MarginBlockStart<TLength = string | 0> = Globals | TLength | "auto" | string;

export type Property$MarginBottom<TLength = string | 0> = Globals | TLength | "auto" | string;

export type Property$MarginInline<TLength = string | 0> = Globals | TLength | "auto" | string;

export type Property$MarginInlineEnd<TLength = string | 0> = Globals | TLength | "auto" | string;

export type Property$MarginInlineStart<TLength = string | 0> = Globals | TLength | "auto" | string;

export type Property$MarginLeft<TLength = string | 0> = Globals | TLength | "auto" | string;

export type Property$MarginRight<TLength = string | 0> = Globals | TLength | "auto" | string;

export type Property$MarginTop<TLength = string | 0> = Globals | TLength | "auto" | string;

export type Property$Mask<TLength = string | 0> = Globals | DataType$MaskLayer<TLength> | string;

export type Property$MaskBorder = Globals | "alpha" | "luminance" | "none" | "repeat" | "round" | "space" | "stretch" | string | number;

export type Property$MaskBorderMode = Globals | "alpha" | "luminance";

export type Property$MaskBorderOutset<TLength = string | 0> = Globals | TLength | string | number;

export type Property$MaskBorderRepeat = Globals | "repeat" | "round" | "space" | "stretch" | string;

export type Property$MaskBorderSlice = Globals | string | number;

export type Property$MaskBorderSource = Globals | "none" | string;

export type Property$MaskBorderWidth<TLength = string | 0> = Globals | TLength | "auto" | string | number;

export type Property$MaskClip = Globals | DataType$GeometryBox | "no-clip" | string;

export type Property$MaskComposite = Globals | DataType$CompositingOperator | string;

export type Property$MaskImage = Globals | "none" | string;

export type Property$MaskMode = Globals | DataType$MaskingMode | string;

export type Property$MaskOrigin = Globals | DataType$Box | "margin-box" | string;

export type Property$MaskPosition<TLength = string | 0> = Globals | DataType$Position<TLength> | string;

export type Property$MaskRepeat = Globals | DataType$RepeatStyle | string;

export type Property$MaskSize<TLength = string | 0> = Globals | DataType$BgSize<TLength> | string;

export type Property$MaskType = Globals | "alpha" | "luminance";

export type Property$MathStyle = Globals | "compact" | "normal";

export type Property$MaxBlockSize<TLength = string | 0> = Globals | TLength | "-moz-max-content" | "-moz-min-content" | "max-content" | "min-content" | "none" | string;

export type Property$MaxHeight<TLength = string | 0> =
>>>>>>> develop
  | Globals
  | TLength
  | "-moz-max-content"
  | "-moz-min-content"
  | "-webkit-max-content"
  | "-webkit-min-content"
  | "max-content"
  | "min-content"
  | "none"
  | string;

<<<<<<< HEAD
export type MaxInlineSizeProperty<TLength> = Globals | TLength | "-moz-max-content" | "-moz-min-content" | "max-content" | "min-content" | "none" | string;

export type MaxLinesProperty = Globals | "none" | number;

export type MaxWidthProperty<TLength> =
=======
export type Property$MaxInlineSize<TLength = string | 0> = Globals | TLength | "-moz-max-content" | "-moz-min-content" | "max-content" | "min-content" | "none" | string;

export type Property$MaxLines = Globals | "none" | number;

export type Property$MaxWidth<TLength = string | 0> =
>>>>>>> develop
  | Globals
  | TLength
  | "-moz-max-content"
  | "-moz-min-content"
  | "-webkit-max-content"
  | "-webkit-min-content"
  | "intrinsic"
  | "max-content"
  | "min-content"
  | "none"
  | string;

<<<<<<< HEAD
export type MinBlockSizeProperty<TLength> = Globals | TLength | "-moz-max-content" | "-moz-min-content" | "auto" | "max-content" | "min-content" | string;

export type MinHeightProperty<TLength> =
=======
export type Property$MinBlockSize<TLength = string | 0> = Globals | TLength | "-moz-max-content" | "-moz-min-content" | "auto" | "max-content" | "min-content" | string;

export type Property$MinHeight<TLength = string | 0> =
>>>>>>> develop
  | Globals
  | TLength
  | "-moz-max-content"
  | "-moz-min-content"
  | "-webkit-max-content"
  | "-webkit-min-content"
  | "auto"
  | "max-content"
  | "min-content"
  | string;

<<<<<<< HEAD
export type MinInlineSizeProperty<TLength> = Globals | TLength | "-moz-max-content" | "-moz-min-content" | "auto" | "max-content" | "min-content" | string;

export type MinWidthProperty<TLength> =
=======
export type Property$MinInlineSize<TLength = string | 0> = Globals | TLength | "-moz-max-content" | "-moz-min-content" | "auto" | "max-content" | "min-content" | string;

export type Property$MinWidth<TLength = string | 0> =
>>>>>>> develop
  | Globals
  | TLength
  | "-moz-max-content"
  | "-moz-min-content"
  | "-webkit-max-content"
  | "-webkit-min-content"
  | "auto"
  | "intrinsic"
  | "max-content"
  | "min-content"
  | "min-intrinsic"
  | string;

<<<<<<< HEAD
export type MixBlendModeProperty = Globals | BlendMode;

export type OffsetProperty<TLength> = Globals | Position<TLength> | GeometryBox | "auto" | "none" | string;

export type OffsetDistanceProperty<TLength> = Globals | TLength | string;

export type OffsetPathProperty = Globals | GeometryBox | "none" | string;

export type OffsetRotateProperty = Globals | "auto" | "reverse" | string;

export type ObjectFitProperty = Globals | "contain" | "cover" | "fill" | "none" | "scale-down";

export type ObjectPositionProperty<TLength> = Globals | Position<TLength>;

export type OffsetAnchorProperty<TLength> = Globals | Position<TLength> | "auto";

export type OpacityProperty = Globals | string | number;

export type OutlineProperty<TLength> = Globals | Color | LineStyle | LineWidth<TLength> | "auto" | "invert" | string;

export type OutlineColorProperty = Globals | Color | "invert";

export type OutlineOffsetProperty<TLength> = Globals | TLength;

export type OutlineStyleProperty = Globals | LineStyle | "auto" | string;

export type OutlineWidthProperty<TLength> = Globals | LineWidth<TLength>;

export type OverflowProperty = Globals | "-moz-hidden-unscrollable" | "auto" | "clip" | "hidden" | "scroll" | "visible" | string;

export type OverflowAnchorProperty = Globals | "auto" | "none";

export type OverflowBlockProperty = Globals | "auto" | "clip" | "hidden" | "scroll" | "visible";

export type OverflowClipBoxProperty = Globals | "content-box" | "padding-box";

export type OverflowInlineProperty = Globals | "auto" | "clip" | "hidden" | "scroll" | "visible";

export type OverflowWrapProperty = Globals | "anywhere" | "break-word" | "normal";

export type OverflowXProperty = Globals | "-moz-hidden-unscrollable" | "auto" | "clip" | "hidden" | "scroll" | "visible";

export type OverflowYProperty = Globals | "-moz-hidden-unscrollable" | "auto" | "clip" | "hidden" | "scroll" | "visible";

export type OverscrollBehaviorProperty = Globals | "auto" | "contain" | "none" | string;

export type OverscrollBehaviorBlockProperty = Globals | "auto" | "contain" | "none";

export type OverscrollBehaviorInlineProperty = Globals | "auto" | "contain" | "none";

export type OverscrollBehaviorXProperty = Globals | "auto" | "contain" | "none";

export type OverscrollBehaviorYProperty = Globals | "auto" | "contain" | "none";

export type PaddingProperty<TLength> = Globals | TLength | string;

export type PaddingBlockProperty<TLength> = Globals | TLength | string;

export type PaddingBlockEndProperty<TLength> = Globals | TLength | string;

export type PaddingBlockStartProperty<TLength> = Globals | TLength | string;

export type PaddingBottomProperty<TLength> = Globals | TLength | string;

export type PaddingInlineProperty<TLength> = Globals | TLength | string;

export type PaddingInlineEndProperty<TLength> = Globals | TLength | string;

export type PaddingInlineStartProperty<TLength> = Globals | TLength | string;

export type PaddingLeftProperty<TLength> = Globals | TLength | string;

export type PaddingRightProperty<TLength> = Globals | TLength | string;

export type PaddingTopProperty<TLength> = Globals | TLength | string;

export type PageBreakAfterProperty = Globals | "always" | "auto" | "avoid" | "left" | "recto" | "right" | "verso";

export type PageBreakBeforeProperty = Globals | "always" | "auto" | "avoid" | "left" | "recto" | "right" | "verso";

export type PageBreakInsideProperty = Globals | "auto" | "avoid";

export type PaintOrderProperty = Globals | "fill" | "markers" | "normal" | "stroke" | string;

export type PerspectiveProperty<TLength> = Globals | TLength | "none";

export type PerspectiveOriginProperty<TLength> = Globals | Position<TLength>;

export type PlaceContentProperty = Globals | ContentDistribution | ContentPosition | "baseline" | "normal" | string;

export type PlaceItemsProperty = Globals | SelfPosition | "baseline" | "normal" | "stretch" | string;

export type PlaceSelfProperty = Globals | SelfPosition | "auto" | "baseline" | "normal" | "stretch" | string;

export type PointerEventsProperty = Globals | "all" | "auto" | "fill" | "inherit" | "none" | "painted" | "stroke" | "visible" | "visibleFill" | "visiblePainted" | "visibleStroke";

export type PositionProperty = Globals | "-webkit-sticky" | "absolute" | "fixed" | "relative" | "static" | "sticky";

export type QuotesProperty = Globals | "auto" | "none" | string;

export type ResizeProperty = Globals | "block" | "both" | "horizontal" | "inline" | "none" | "vertical";

export type RightProperty<TLength> = Globals | TLength | "auto" | string;

export type RotateProperty = Globals | "none" | string;

export type RowGapProperty<TLength> = Globals | TLength | "normal" | string;

export type RubyAlignProperty = Globals | "center" | "space-around" | "space-between" | "start";

export type RubyMergeProperty = Globals | "auto" | "collapse" | "separate";

export type RubyPositionProperty = Globals | "over" | "under";

export type ScaleProperty = Globals | "none" | string | number;

export type ScrollBehaviorProperty = Globals | "auto" | "smooth";

export type ScrollMarginProperty<TLength> = Globals | TLength | string;

export type ScrollMarginBlockProperty<TLength> = Globals | TLength | string;

export type ScrollMarginBlockEndProperty<TLength> = Globals | TLength;

export type ScrollMarginBlockStartProperty<TLength> = Globals | TLength;

export type ScrollMarginBottomProperty<TLength> = Globals | TLength;

export type ScrollMarginInlineProperty<TLength> = Globals | TLength | string;

export type ScrollMarginInlineEndProperty<TLength> = Globals | TLength;

export type ScrollMarginInlineStartProperty<TLength> = Globals | TLength;

export type ScrollMarginLeftProperty<TLength> = Globals | TLength;

export type ScrollMarginRightProperty<TLength> = Globals | TLength;

export type ScrollMarginTopProperty<TLength> = Globals | TLength;

export type ScrollPaddingProperty<TLength> = Globals | TLength | "auto" | string;

export type ScrollPaddingBlockProperty<TLength> = Globals | TLength | "auto" | string;

export type ScrollPaddingBlockEndProperty<TLength> = Globals | TLength | "auto" | string;

export type ScrollPaddingBlockStartProperty<TLength> = Globals | TLength | "auto" | string;

export type ScrollPaddingBottomProperty<TLength> = Globals | TLength | "auto" | string;

export type ScrollPaddingInlineProperty<TLength> = Globals | TLength | "auto" | string;

export type ScrollPaddingInlineEndProperty<TLength> = Globals | TLength | "auto" | string;

export type ScrollPaddingInlineStartProperty<TLength> = Globals | TLength | "auto" | string;

export type ScrollPaddingLeftProperty<TLength> = Globals | TLength | "auto" | string;

export type ScrollPaddingRightProperty<TLength> = Globals | TLength | "auto" | string;

export type ScrollPaddingTopProperty<TLength> = Globals | TLength | "auto" | string;

export type ScrollSnapAlignProperty = Globals | "center" | "end" | "none" | "start" | string;

export type ScrollSnapCoordinateProperty<TLength> = Globals | Position<TLength> | "none" | string;

export type ScrollSnapDestinationProperty<TLength> = Globals | Position<TLength>;

export type ScrollSnapPointsXProperty = Globals | "none" | string;

export type ScrollSnapPointsYProperty = Globals | "none" | string;

export type ScrollSnapStopProperty = Globals | "always" | "normal";

export type ScrollSnapTypeProperty = Globals | "block" | "both" | "inline" | "none" | "x" | "y" | string;

export type ScrollSnapTypeXProperty = Globals | "mandatory" | "none" | "proximity";

export type ScrollSnapTypeYProperty = Globals | "mandatory" | "none" | "proximity";

export type ScrollbarColorProperty = Globals | Color | "auto" | "dark" | "light";

export type ScrollbarGutterProperty = Globals | "always" | "auto" | "stable" | string;

export type MsScrollbarTrackColorProperty = Globals | Color;

export type ScrollbarWidthProperty = Globals | "auto" | "none" | "thin";

export type ShapeImageThresholdProperty = Globals | string | number;

export type ShapeMarginProperty<TLength> = Globals | TLength | string;

export type ShapeOutsideProperty = Globals | Box | "margin-box" | "none" | string;

export type TabSizeProperty<TLength> = Globals | TLength | number;

export type TableLayoutProperty = Globals | "auto" | "fixed";

export type TextAlignProperty = Globals | "center" | "end" | "justify" | "left" | "match-parent" | "right" | "start";

export type TextAlignLastProperty = Globals | "auto" | "center" | "end" | "justify" | "left" | "right" | "start";

export type TextCombineUprightProperty = Globals | "-ms-text-combine-horizontal" | "all" | "digits" | "none" | string;

export type TextDecorationProperty<TLength> =
  | Globals
  | Color
=======
export type Property$MixBlendMode = Globals | DataType$BlendMode;

export type Property$Offset<TLength = string | 0> = Globals | DataType$Position<TLength> | DataType$GeometryBox | "auto" | "none" | string;

export type Property$OffsetDistance<TLength = string | 0> = Globals | TLength | string;

export type Property$OffsetPath = Globals | DataType$GeometryBox | "none" | string;

export type Property$OffsetRotate = Globals | "auto" | "reverse" | string;

export type Property$ObjectFit = Globals | "contain" | "cover" | "fill" | "none" | "scale-down";

export type Property$ObjectPosition<TLength = string | 0> = Globals | DataType$Position<TLength>;

export type Property$OffsetAnchor<TLength = string | 0> = Globals | DataType$Position<TLength> | "auto";

export type Property$Opacity = Globals | string | number;

export type Property$Order = Globals | number;

export type Property$Orphans = Globals | number;

export type Property$Outline<TLength = string | 0> = Globals | DataType$Color | DataType$LineStyle | DataType$LineWidth<TLength> | "auto" | "invert" | string;

export type Property$OutlineColor = Globals | DataType$Color | "invert";

export type Property$OutlineOffset<TLength = string | 0> = Globals | TLength;

export type Property$OutlineStyle = Globals | DataType$LineStyle | "auto" | string;

export type Property$OutlineWidth<TLength = string | 0> = Globals | DataType$LineWidth<TLength>;

export type Property$Overflow = Globals | "-moz-hidden-unscrollable" | "auto" | "clip" | "hidden" | "scroll" | "visible" | string;

export type Property$OverflowAnchor = Globals | "auto" | "none";

export type Property$OverflowBlock = Globals | "auto" | "clip" | "hidden" | "scroll" | "visible";

export type Property$OverflowClipBox = Globals | "content-box" | "padding-box";

export type Property$OverflowInline = Globals | "auto" | "clip" | "hidden" | "scroll" | "visible";

export type Property$OverflowWrap = Globals | "anywhere" | "break-word" | "normal";

export type Property$OverflowX = Globals | "-moz-hidden-unscrollable" | "auto" | "clip" | "hidden" | "scroll" | "visible";

export type Property$OverflowY = Globals | "-moz-hidden-unscrollable" | "auto" | "clip" | "hidden" | "scroll" | "visible";

export type Property$OverscrollBehavior = Globals | "auto" | "contain" | "none" | string;

export type Property$OverscrollBehaviorBlock = Globals | "auto" | "contain" | "none";

export type Property$OverscrollBehaviorInline = Globals | "auto" | "contain" | "none";

export type Property$OverscrollBehaviorX = Globals | "auto" | "contain" | "none";

export type Property$OverscrollBehaviorY = Globals | "auto" | "contain" | "none";

export type Property$Padding<TLength = string | 0> = Globals | TLength | string;

export type Property$PaddingBlock<TLength = string | 0> = Globals | TLength | string;

export type Property$PaddingBlockEnd<TLength = string | 0> = Globals | TLength | string;

export type Property$PaddingBlockStart<TLength = string | 0> = Globals | TLength | string;

export type Property$PaddingBottom<TLength = string | 0> = Globals | TLength | string;

export type Property$PaddingInline<TLength = string | 0> = Globals | TLength | string;

export type Property$PaddingInlineEnd<TLength = string | 0> = Globals | TLength | string;

export type Property$PaddingInlineStart<TLength = string | 0> = Globals | TLength | string;

export type Property$PaddingLeft<TLength = string | 0> = Globals | TLength | string;

export type Property$PaddingRight<TLength = string | 0> = Globals | TLength | string;

export type Property$PaddingTop<TLength = string | 0> = Globals | TLength | string;

export type Property$PageBreakAfter = Globals | "always" | "auto" | "avoid" | "left" | "recto" | "right" | "verso";

export type Property$PageBreakBefore = Globals | "always" | "auto" | "avoid" | "left" | "recto" | "right" | "verso";

export type Property$PageBreakInside = Globals | "auto" | "avoid";

export type Property$PaintOrder = Globals | "fill" | "markers" | "normal" | "stroke" | string;

export type Property$Perspective<TLength = string | 0> = Globals | TLength | "none";

export type Property$PerspectiveOrigin<TLength = string | 0> = Globals | DataType$Position<TLength>;

export type Property$PlaceContent = Globals | DataType$ContentDistribution | DataType$ContentPosition | "baseline" | "normal" | string;

export type Property$PlaceItems = Globals | DataType$SelfPosition | "baseline" | "normal" | "stretch" | string;

export type Property$PlaceSelf = Globals | DataType$SelfPosition | "auto" | "baseline" | "normal" | "stretch" | string;

export type Property$PointerEvents = Globals | "all" | "auto" | "fill" | "inherit" | "none" | "painted" | "stroke" | "visible" | "visibleFill" | "visiblePainted" | "visibleStroke";

export type Property$Position = Globals | "-webkit-sticky" | "absolute" | "fixed" | "relative" | "static" | "sticky";

export type Property$Quotes = Globals | "auto" | "none" | string;

export type Property$Resize = Globals | "block" | "both" | "horizontal" | "inline" | "none" | "vertical";

export type Property$Right<TLength = string | 0> = Globals | TLength | "auto" | string;

export type Property$Rotate = Globals | "none" | string;

export type Property$RowGap<TLength = string | 0> = Globals | TLength | "normal" | string;

export type Property$RubyAlign = Globals | "center" | "space-around" | "space-between" | "start";

export type Property$RubyMerge = Globals | "auto" | "collapse" | "separate";

export type Property$RubyPosition = Globals | "over" | "under";

export type Property$Scale = Globals | "none" | string | number;

export type Property$ScrollBehavior = Globals | "auto" | "smooth";

export type Property$ScrollMargin<TLength = string | 0> = Globals | TLength | string;

export type Property$ScrollMarginBlock<TLength = string | 0> = Globals | TLength | string;

export type Property$ScrollMarginBlockEnd<TLength = string | 0> = Globals | TLength;

export type Property$ScrollMarginBlockStart<TLength = string | 0> = Globals | TLength;

export type Property$ScrollMarginBottom<TLength = string | 0> = Globals | TLength;

export type Property$ScrollMarginInline<TLength = string | 0> = Globals | TLength | string;

export type Property$ScrollMarginInlineEnd<TLength = string | 0> = Globals | TLength;

export type Property$ScrollMarginInlineStart<TLength = string | 0> = Globals | TLength;

export type Property$ScrollMarginLeft<TLength = string | 0> = Globals | TLength;

export type Property$ScrollMarginRight<TLength = string | 0> = Globals | TLength;

export type Property$ScrollMarginTop<TLength = string | 0> = Globals | TLength;

export type Property$ScrollPadding<TLength = string | 0> = Globals | TLength | "auto" | string;

export type Property$ScrollPaddingBlock<TLength = string | 0> = Globals | TLength | "auto" | string;

export type Property$ScrollPaddingBlockEnd<TLength = string | 0> = Globals | TLength | "auto" | string;

export type Property$ScrollPaddingBlockStart<TLength = string | 0> = Globals | TLength | "auto" | string;

export type Property$ScrollPaddingBottom<TLength = string | 0> = Globals | TLength | "auto" | string;

export type Property$ScrollPaddingInline<TLength = string | 0> = Globals | TLength | "auto" | string;

export type Property$ScrollPaddingInlineEnd<TLength = string | 0> = Globals | TLength | "auto" | string;

export type Property$ScrollPaddingInlineStart<TLength = string | 0> = Globals | TLength | "auto" | string;

export type Property$ScrollPaddingLeft<TLength = string | 0> = Globals | TLength | "auto" | string;

export type Property$ScrollPaddingRight<TLength = string | 0> = Globals | TLength | "auto" | string;

export type Property$ScrollPaddingTop<TLength = string | 0> = Globals | TLength | "auto" | string;

export type Property$ScrollSnapAlign = Globals | "center" | "end" | "none" | "start" | string;

export type Property$ScrollSnapCoordinate<TLength = string | 0> = Globals | DataType$Position<TLength> | "none" | string;

export type Property$ScrollSnapDestination<TLength = string | 0> = Globals | DataType$Position<TLength>;

export type Property$ScrollSnapPointsX = Globals | "none" | string;

export type Property$ScrollSnapPointsY = Globals | "none" | string;

export type Property$ScrollSnapStop = Globals | "always" | "normal";

export type Property$ScrollSnapType = Globals | "block" | "both" | "inline" | "none" | "x" | "y" | string;

export type Property$ScrollSnapTypeX = Globals | "mandatory" | "none" | "proximity";

export type Property$ScrollSnapTypeY = Globals | "mandatory" | "none" | "proximity";

export type Property$ScrollbarColor = Globals | DataType$Color | "auto" | "dark" | "light";

export type Property$ScrollbarGutter = Globals | "always" | "auto" | "stable" | string;

export type Property$MsScrollbarTrackColor = Globals | DataType$Color;

export type Property$ScrollbarWidth = Globals | "auto" | "none" | "thin";

export type Property$ShapeImageThreshold = Globals | string | number;

export type Property$ShapeMargin<TLength = string | 0> = Globals | TLength | string;

export type Property$ShapeOutside = Globals | DataType$Box | "margin-box" | "none" | string;

export type Property$TabSize<TLength = string | 0> = Globals | TLength | number;

export type Property$TableLayout = Globals | "auto" | "fixed";

export type Property$TextAlign = Globals | "center" | "end" | "justify" | "left" | "match-parent" | "right" | "start";

export type Property$TextAlignLast = Globals | "auto" | "center" | "end" | "justify" | "left" | "right" | "start";

export type Property$TextCombineUpright = Globals | "-ms-text-combine-horizontal" | "all" | "digits" | "none" | string;

export type Property$TextDecoration<TLength = string | 0> =
  | Globals
  | DataType$Color
>>>>>>> develop
  | TLength
  | "auto"
  | "blink"
  | "dashed"
  | "dotted"
  | "double"
  | "from-font"
  | "grammar-error"
  | "line-through"
  | "none"
  | "overline"
  | "solid"
  | "spelling-error"
  | "underline"
  | "wavy"
  | string;

<<<<<<< HEAD
export type TextDecorationColorProperty = Globals | Color;

export type TextDecorationLineProperty = Globals | "blink" | "grammar-error" | "line-through" | "none" | "overline" | "spelling-error" | "underline" | string;

export type TextDecorationSkipProperty = Globals | "box-decoration" | "edges" | "leading-spaces" | "none" | "objects" | "spaces" | "trailing-spaces" | string;

export type TextDecorationSkipInkProperty = Globals | "all" | "auto" | "none";

export type TextDecorationStyleProperty = Globals | "dashed" | "dotted" | "double" | "solid" | "wavy";

export type TextDecorationThicknessProperty<TLength> = Globals | TLength | "auto" | "from-font" | string;

export type TextEmphasisProperty = Globals | Color | "circle" | "dot" | "double-circle" | "filled" | "none" | "open" | "sesame" | "triangle" | string;

export type TextEmphasisColorProperty = Globals | Color;

export type TextEmphasisStyleProperty = Globals | "circle" | "dot" | "double-circle" | "filled" | "none" | "open" | "sesame" | "triangle" | string;

export type TextIndentProperty<TLength> = Globals | TLength | string;

export type TextJustifyProperty = Globals | "auto" | "inter-character" | "inter-word" | "none";

export type TextOrientationProperty = Globals | "mixed" | "sideways" | "upright";

export type TextOverflowProperty = Globals | "clip" | "ellipsis" | string;

export type TextRenderingProperty = Globals | "auto" | "geometricPrecision" | "optimizeLegibility" | "optimizeSpeed";

export type TextShadowProperty = Globals | "none" | string;

export type TextSizeAdjustProperty = Globals | "auto" | "none" | string;

export type TextTransformProperty = Globals | "capitalize" | "full-size-kana" | "full-width" | "lowercase" | "none" | "uppercase";

export type TextUnderlineOffsetProperty<TLength> = Globals | TLength | "auto" | string;

export type TextUnderlinePositionProperty = Globals | "auto" | "from-font" | "left" | "right" | "under" | string;

export type TopProperty<TLength> = Globals | TLength | "auto" | string;

export type TouchActionProperty =
=======
export type Property$TextDecorationColor = Globals | DataType$Color;

export type Property$TextDecorationLine = Globals | "blink" | "grammar-error" | "line-through" | "none" | "overline" | "spelling-error" | "underline" | string;

export type Property$TextDecorationSkip = Globals | "box-decoration" | "edges" | "leading-spaces" | "none" | "objects" | "spaces" | "trailing-spaces" | string;

export type Property$TextDecorationSkipInk = Globals | "all" | "auto" | "none";

export type Property$TextDecorationStyle = Globals | "dashed" | "dotted" | "double" | "solid" | "wavy";

export type Property$TextDecorationThickness<TLength = string | 0> = Globals | TLength | "auto" | "from-font" | string;

export type Property$TextEmphasis = Globals | DataType$Color | "circle" | "dot" | "double-circle" | "filled" | "none" | "open" | "sesame" | "triangle" | string;

export type Property$TextEmphasisColor = Globals | DataType$Color;

export type Property$TextEmphasisPosition = Globals | string;

export type Property$TextEmphasisStyle = Globals | "circle" | "dot" | "double-circle" | "filled" | "none" | "open" | "sesame" | "triangle" | string;

export type Property$TextIndent<TLength = string | 0> = Globals | TLength | string;

export type Property$TextJustify = Globals | "auto" | "inter-character" | "inter-word" | "none";

export type Property$TextOrientation = Globals | "mixed" | "sideways" | "upright";

export type Property$TextOverflow = Globals | "clip" | "ellipsis" | string;

export type Property$TextRendering = Globals | "auto" | "geometricPrecision" | "optimizeLegibility" | "optimizeSpeed";

export type Property$TextShadow = Globals | "none" | string;

export type Property$TextSizeAdjust = Globals | "auto" | "none" | string;

export type Property$TextTransform = Globals | "capitalize" | "full-size-kana" | "full-width" | "lowercase" | "none" | "uppercase";

export type Property$TextUnderlineOffset<TLength = string | 0> = Globals | TLength | "auto" | string;

export type Property$TextUnderlinePosition = Globals | "auto" | "from-font" | "left" | "right" | "under" | string;

export type Property$Top<TLength = string | 0> = Globals | TLength | "auto" | string;

export type Property$TouchAction =
>>>>>>> develop
  | Globals
  | "-ms-manipulation"
  | "-ms-none"
  | "-ms-pinch-zoom"
  | "auto"
  | "manipulation"
  | "none"
  | "pan-down"
  | "pan-left"
  | "pan-right"
  | "pan-up"
  | "pan-x"
  | "pan-y"
  | "pinch-zoom"
  | string;

<<<<<<< HEAD
export type TransformProperty = Globals | "none" | string;

export type TransformBoxProperty = Globals | "border-box" | "content-box" | "fill-box" | "stroke-box" | "view-box";

export type TransformOriginProperty<TLength> = Globals | TLength | "bottom" | "center" | "left" | "right" | "top" | string;

export type TransformStyleProperty = Globals | "flat" | "preserve-3d";

export type TransitionProperty = Globals | SingleTransition | string;

export type TransitionPropertyProperty = Globals | "all" | "none" | string;

export type TransitionTimingFunctionProperty = Globals | EasingFunction | string;

export type TranslateProperty<TLength> = Globals | TLength | "none" | string;

export type UnicodeBidiProperty =
=======
export type Property$Transform = Globals | "none" | string;

export type Property$TransformBox = Globals | "border-box" | "content-box" | "fill-box" | "stroke-box" | "view-box";

export type Property$TransformOrigin<TLength = string | 0> = Globals | TLength | "bottom" | "center" | "left" | "right" | "top" | string;

export type Property$TransformStyle = Globals | "flat" | "preserve-3d";

export type Property$Transition<TTime = string> = Globals | DataType$SingleTransition<TTime> | string;

export type Property$TransitionDelay<TTime = string> = Globals | TTime | string;

export type Property$TransitionDuration<TTime = string> = Globals | TTime | string;

export type Property$TransitionProperty = Globals | "all" | "none" | string;

export type Property$TransitionTimingFunction = Globals | DataType$EasingFunction | string;

export type Property$Translate<TLength = string | 0> = Globals | TLength | "none" | string;

export type Property$UnicodeBidi =
>>>>>>> develop
  | Globals
  | "-moz-isolate"
  | "-moz-isolate-override"
  | "-moz-plaintext"
  | "-webkit-isolate"
  | "bidi-override"
  | "embed"
  | "isolate"
  | "isolate-override"
  | "normal"
  | "plaintext";

<<<<<<< HEAD
export type UserSelectProperty = Globals | "-moz-none" | "all" | "auto" | "contain" | "element" | "none" | "text";

export type VerticalAlignProperty<TLength> = Globals | TLength | "baseline" | "bottom" | "middle" | "sub" | "super" | "text-bottom" | "text-top" | "top" | string;

export type VisibilityProperty = Globals | "collapse" | "hidden" | "visible";

export type WhiteSpaceProperty = Globals | "-moz-pre-wrap" | "break-spaces" | "normal" | "nowrap" | "pre" | "pre-line" | "pre-wrap";

export type WidthProperty<TLength> =
=======
export type Property$UserSelect = Globals | "-moz-none" | "all" | "auto" | "contain" | "element" | "none" | "text";

export type Property$VerticalAlign<TLength = string | 0> = Globals | TLength | "baseline" | "bottom" | "middle" | "sub" | "super" | "text-bottom" | "text-top" | "top" | string;

export type Property$Visibility = Globals | "collapse" | "hidden" | "visible";

export type Property$WhiteSpace = Globals | "-moz-pre-wrap" | "break-spaces" | "normal" | "nowrap" | "pre" | "pre-line" | "pre-wrap";

export type Property$Widows = Globals | number;

export type Property$Width<TLength = string | 0> =
>>>>>>> develop
  | Globals
  | TLength
  | "-moz-max-content"
  | "-moz-min-content"
  | "-webkit-max-content"
  | "auto"
  | "intrinsic"
  | "max-content"
  | "min-content"
  | "min-intrinsic"
  | string;

<<<<<<< HEAD
export type WillChangeProperty = Globals | AnimateableFeature | "auto" | string;

export type WordBreakProperty = Globals | "break-all" | "break-word" | "keep-all" | "normal";

export type WordSpacingProperty<TLength> = Globals | TLength | "normal" | string;

export type WordWrapProperty = Globals | "break-word" | "normal";

export type WritingModeProperty = Globals | "horizontal-tb" | "sideways-lr" | "sideways-rl" | "vertical-lr" | "vertical-rl";

export type ZIndexProperty = Globals | "auto" | number;

export type ZoomProperty = Globals | "normal" | "reset" | string | number;

export type MozAppearanceProperty =
=======
export type Property$WillChange = Globals | DataType$AnimateableFeature | "auto" | string;

export type Property$WordBreak = Globals | "break-all" | "break-word" | "keep-all" | "normal";

export type Property$WordSpacing<TLength = string | 0> = Globals | TLength | "normal" | string;

export type Property$WordWrap = Globals | "break-word" | "normal";

export type Property$WritingMode = Globals | "horizontal-tb" | "sideways-lr" | "sideways-rl" | "vertical-lr" | "vertical-rl";

export type Property$ZIndex = Globals | "auto" | number;

export type Property$Zoom = Globals | "normal" | "reset" | string | number;

export type Property$MozAppearance =
>>>>>>> develop
  | Globals
  | "-moz-mac-unified-toolbar"
  | "-moz-win-borderless-glass"
  | "-moz-win-browsertabbar-toolbox"
  | "-moz-win-communications-toolbox"
  | "-moz-win-communicationstext"
  | "-moz-win-exclude-glass"
  | "-moz-win-glass"
  | "-moz-win-media-toolbox"
  | "-moz-win-mediatext"
  | "-moz-window-button-box"
  | "-moz-window-button-box-maximized"
  | "-moz-window-button-close"
  | "-moz-window-button-maximize"
  | "-moz-window-button-minimize"
  | "-moz-window-button-restore"
  | "-moz-window-frame-bottom"
  | "-moz-window-frame-left"
  | "-moz-window-frame-right"
  | "-moz-window-titlebar"
  | "-moz-window-titlebar-maximized"
  | "button"
  | "button-arrow-down"
  | "button-arrow-next"
  | "button-arrow-previous"
  | "button-arrow-up"
  | "button-bevel"
  | "button-focus"
  | "caret"
  | "checkbox"
  | "checkbox-container"
  | "checkbox-label"
  | "checkmenuitem"
  | "dualbutton"
  | "groupbox"
  | "listbox"
  | "listitem"
  | "menuarrow"
  | "menubar"
  | "menucheckbox"
  | "menuimage"
  | "menuitem"
  | "menuitemtext"
  | "menulist"
  | "menulist-button"
  | "menulist-text"
  | "menulist-textfield"
  | "menupopup"
  | "menuradio"
  | "menuseparator"
  | "meterbar"
  | "meterchunk"
  | "none"
  | "progressbar"
  | "progressbar-vertical"
  | "progresschunk"
  | "progresschunk-vertical"
  | "radio"
  | "radio-container"
  | "radio-label"
  | "radiomenuitem"
  | "range"
  | "range-thumb"
  | "resizer"
  | "resizerpanel"
  | "scale-horizontal"
  | "scale-vertical"
  | "scalethumb-horizontal"
  | "scalethumb-vertical"
  | "scalethumbend"
  | "scalethumbstart"
  | "scalethumbtick"
  | "scrollbarbutton-down"
  | "scrollbarbutton-left"
  | "scrollbarbutton-right"
  | "scrollbarbutton-up"
  | "scrollbarthumb-horizontal"
  | "scrollbarthumb-vertical"
  | "scrollbartrack-horizontal"
  | "scrollbartrack-vertical"
  | "searchfield"
  | "separator"
  | "sheet"
  | "spinner"
  | "spinner-downbutton"
  | "spinner-textfield"
  | "spinner-upbutton"
  | "splitter"
  | "statusbar"
  | "statusbarpanel"
  | "tab"
  | "tab-scroll-arrow-back"
  | "tab-scroll-arrow-forward"
  | "tabpanel"
  | "tabpanels"
  | "textfield"
  | "textfield-multiline"
  | "toolbar"
  | "toolbarbutton"
  | "toolbarbutton-dropdown"
  | "toolbargripper"
  | "toolbox"
  | "tooltip"
  | "treeheader"
  | "treeheadercell"
  | "treeheadersortarrow"
  | "treeitem"
  | "treeline"
  | "treetwisty"
  | "treetwistyopen"
  | "treeview";

<<<<<<< HEAD
export type MozBindingProperty = Globals | "none" | string;

export type MozBorderBottomColorsProperty = Globals | Color | "none" | string;

export type MozBorderLeftColorsProperty = Globals | Color | "none" | string;

export type MozBorderRightColorsProperty = Globals | Color | "none" | string;

export type MozBorderTopColorsProperty = Globals | Color | "none" | string;

export type MozContextPropertiesProperty = Globals | "fill" | "fill-opacity" | "none" | "stroke" | "stroke-opacity" | string;

export type MozFloatEdgeProperty = Globals | "border-box" | "content-box" | "margin-box" | "padding-box";

export type MozImageRegionProperty = Globals | "auto" | string;

export type MozOrientProperty = Globals | "block" | "horizontal" | "inline" | "vertical";

export type MozOutlineRadiusProperty<TLength> = Globals | TLength | string;

export type MozOutlineRadiusBottomleftProperty<TLength> = Globals | TLength | string;

export type MozOutlineRadiusBottomrightProperty<TLength> = Globals | TLength | string;

export type MozOutlineRadiusTopleftProperty<TLength> = Globals | TLength | string;

export type MozOutlineRadiusToprightProperty<TLength> = Globals | TLength | string;

export type MozStackSizingProperty = Globals | "ignore" | "stretch-to-fit";

export type MozTextBlinkProperty = Globals | "blink" | "none";

export type MozUserFocusProperty = Globals | "ignore" | "none" | "normal" | "select-after" | "select-all" | "select-before" | "select-menu" | "select-same";

export type MozUserInputProperty = Globals | "auto" | "disabled" | "enabled" | "none";

export type MozUserModifyProperty = Globals | "read-only" | "read-write" | "write-only";

export type MozWindowDraggingProperty = Globals | "drag" | "no-drag";

export type MozWindowShadowProperty = Globals | "default" | "menu" | "none" | "sheet" | "tooltip";

export type MsAcceleratorProperty = Globals | "false" | "true";

export type MsBlockProgressionProperty = Globals | "bt" | "lr" | "rl" | "tb";

export type MsContentZoomChainingProperty = Globals | "chained" | "none";

export type MsContentZoomSnapProperty = Globals | "mandatory" | "none" | "proximity" | string;

export type MsContentZoomSnapTypeProperty = Globals | "mandatory" | "none" | "proximity";

export type MsContentZoomingProperty = Globals | "none" | "zoom";

export type MsFlowFromProperty = Globals | "none" | string;

export type MsFlowIntoProperty = Globals | "none" | string;

export type MsGridColumnsProperty<TLength> = Globals | TrackBreadth<TLength> | "none" | string;

export type MsGridRowsProperty<TLength> = Globals | TrackBreadth<TLength> | "none" | string;

export type MsHighContrastAdjustProperty = Globals | "auto" | "none";

export type MsHyphenateLimitCharsProperty = Globals | "auto" | string | number;

export type MsHyphenateLimitLinesProperty = Globals | "no-limit" | number;

export type MsHyphenateLimitZoneProperty<TLength> = Globals | TLength | string;

export type MsImeAlignProperty = Globals | "after" | "auto";

export type MsOverflowStyleProperty = Globals | "-ms-autohiding-scrollbar" | "auto" | "none" | "scrollbar";

export type MsScrollChainingProperty = Globals | "chained" | "none";

export type MsScrollLimitXMaxProperty<TLength> = Globals | TLength | "auto";

export type MsScrollLimitXMinProperty<TLength> = Globals | TLength;

export type MsScrollLimitYMaxProperty<TLength> = Globals | TLength | "auto";

export type MsScrollLimitYMinProperty<TLength> = Globals | TLength;

export type MsScrollRailsProperty = Globals | "none" | "railed";

export type MsScrollSnapTypeProperty = Globals | "mandatory" | "none" | "proximity";

export type MsScrollTranslationProperty = Globals | "none" | "vertical-to-horizontal";

export type MsScrollbar3dlightColorProperty = Globals | Color;

export type MsScrollbarArrowColorProperty = Globals | Color;

export type MsScrollbarBaseColorProperty = Globals | Color;

export type MsScrollbarDarkshadowColorProperty = Globals | Color;

export type MsScrollbarFaceColorProperty = Globals | Color;

export type MsScrollbarHighlightColorProperty = Globals | Color;

export type MsScrollbarShadowColorProperty = Globals | Color;

export type MsTextAutospaceProperty = Globals | "ideograph-alpha" | "ideograph-numeric" | "ideograph-parenthesis" | "ideograph-space" | "none";

export type MsTouchSelectProperty = Globals | "grippers" | "none";

export type MsUserSelectProperty = Globals | "element" | "none" | "text";

export type MsWrapFlowProperty = Globals | "auto" | "both" | "clear" | "end" | "maximum" | "start";

export type MsWrapMarginProperty<TLength> = Globals | TLength;

export type MsWrapThroughProperty = Globals | "none" | "wrap";

export type WebkitAppearanceProperty =
=======
export type Property$MozBinding = Globals | "none" | string;

export type Property$MozBorderBottomColors = Globals | DataType$Color | "none" | string;

export type Property$MozBorderLeftColors = Globals | DataType$Color | "none" | string;

export type Property$MozBorderRightColors = Globals | DataType$Color | "none" | string;

export type Property$MozBorderTopColors = Globals | DataType$Color | "none" | string;

export type Property$MozContextProperties = Globals | "fill" | "fill-opacity" | "none" | "stroke" | "stroke-opacity" | string;

export type Property$MozFloatEdge = Globals | "border-box" | "content-box" | "margin-box" | "padding-box";

export type Property$MozForceBrokenImageIcon = Globals | number;

export type Property$MozImageRegion = Globals | "auto" | string;

export type Property$MozOrient = Globals | "block" | "horizontal" | "inline" | "vertical";

export type Property$MozOutlineRadius<TLength = string | 0> = Globals | TLength | string;

export type Property$MozOutlineRadiusBottomleft<TLength = string | 0> = Globals | TLength | string;

export type Property$MozOutlineRadiusBottomright<TLength = string | 0> = Globals | TLength | string;

export type Property$MozOutlineRadiusTopleft<TLength = string | 0> = Globals | TLength | string;

export type Property$MozOutlineRadiusTopright<TLength = string | 0> = Globals | TLength | string;

export type Property$MozStackSizing = Globals | "ignore" | "stretch-to-fit";

export type Property$MozTextBlink = Globals | "blink" | "none";

export type Property$MozUserFocus = Globals | "ignore" | "none" | "normal" | "select-after" | "select-all" | "select-before" | "select-menu" | "select-same";

export type Property$MozUserInput = Globals | "auto" | "disabled" | "enabled" | "none";

export type Property$MozUserModify = Globals | "read-only" | "read-write" | "write-only";

export type Property$MozWindowDragging = Globals | "drag" | "no-drag";

export type Property$MozWindowShadow = Globals | "default" | "menu" | "none" | "sheet" | "tooltip";

export type Property$MsAccelerator = Globals | "false" | "true";

export type Property$MsBlockProgression = Globals | "bt" | "lr" | "rl" | "tb";

export type Property$MsContentZoomChaining = Globals | "chained" | "none";

export type Property$MsContentZoomLimit = Globals | string;

export type Property$MsContentZoomLimitMax = Globals | string;

export type Property$MsContentZoomLimitMin = Globals | string;

export type Property$MsContentZoomSnap = Globals | "mandatory" | "none" | "proximity" | string;

export type Property$MsContentZoomSnapPoints = Globals | string;

export type Property$MsContentZoomSnapType = Globals | "mandatory" | "none" | "proximity";

export type Property$MsContentZooming = Globals | "none" | "zoom";

export type Property$MsFilter = Globals | string;

export type Property$MsFlowFrom = Globals | "none" | string;

export type Property$MsFlowInto = Globals | "none" | string;

export type Property$MsGridColumns<TLength = string | 0> = Globals | DataType$TrackBreadth<TLength> | "none" | string;

export type Property$MsGridRows<TLength = string | 0> = Globals | DataType$TrackBreadth<TLength> | "none" | string;

export type Property$MsHighContrastAdjust = Globals | "auto" | "none";

export type Property$MsHyphenateLimitChars = Globals | "auto" | string | number;

export type Property$MsHyphenateLimitLines = Globals | "no-limit" | number;

export type Property$MsHyphenateLimitZone<TLength = string | 0> = Globals | TLength | string;

export type Property$MsImeAlign = Globals | "after" | "auto";

export type Property$MsOverflowStyle = Globals | "-ms-autohiding-scrollbar" | "auto" | "none" | "scrollbar";

export type Property$MsScrollChaining = Globals | "chained" | "none";

export type Property$MsScrollLimit = Globals | string;

export type Property$MsScrollLimitXMax<TLength = string | 0> = Globals | TLength | "auto";

export type Property$MsScrollLimitXMin<TLength = string | 0> = Globals | TLength;

export type Property$MsScrollLimitYMax<TLength = string | 0> = Globals | TLength | "auto";

export type Property$MsScrollLimitYMin<TLength = string | 0> = Globals | TLength;

export type Property$MsScrollRails = Globals | "none" | "railed";

export type Property$MsScrollSnapPointsX = Globals | string;

export type Property$MsScrollSnapPointsY = Globals | string;

export type Property$MsScrollSnapType = Globals | "mandatory" | "none" | "proximity";

export type Property$MsScrollSnapX = Globals | string;

export type Property$MsScrollSnapY = Globals | string;

export type Property$MsScrollTranslation = Globals | "none" | "vertical-to-horizontal";

export type Property$MsScrollbar3dlightColor = Globals | DataType$Color;

export type Property$MsScrollbarArrowColor = Globals | DataType$Color;

export type Property$MsScrollbarBaseColor = Globals | DataType$Color;

export type Property$MsScrollbarDarkshadowColor = Globals | DataType$Color;

export type Property$MsScrollbarFaceColor = Globals | DataType$Color;

export type Property$MsScrollbarHighlightColor = Globals | DataType$Color;

export type Property$MsScrollbarShadowColor = Globals | DataType$Color;

export type Property$MsTextAutospace = Globals | "ideograph-alpha" | "ideograph-numeric" | "ideograph-parenthesis" | "ideograph-space" | "none";

export type Property$MsTouchSelect = Globals | "grippers" | "none";

export type Property$MsUserSelect = Globals | "element" | "none" | "text";

export type Property$MsWrapFlow = Globals | "auto" | "both" | "clear" | "end" | "maximum" | "start";

export type Property$MsWrapMargin<TLength = string | 0> = Globals | TLength;

export type Property$MsWrapThrough = Globals | "none" | "wrap";

export type Property$WebkitAppearance =
>>>>>>> develop
  | Globals
  | "-apple-pay-button"
  | "button"
  | "button-bevel"
  | "caret"
  | "checkbox"
  | "default-button"
  | "inner-spin-button"
  | "listbox"
  | "listitem"
  | "media-controls-background"
  | "media-controls-fullscreen-background"
  | "media-current-time-display"
  | "media-enter-fullscreen-button"
  | "media-exit-fullscreen-button"
  | "media-fullscreen-button"
  | "media-mute-button"
  | "media-overlay-play-button"
  | "media-play-button"
  | "media-seek-back-button"
  | "media-seek-forward-button"
  | "media-slider"
  | "media-sliderthumb"
  | "media-time-remaining-display"
  | "media-toggle-closed-captions-button"
  | "media-volume-slider"
  | "media-volume-slider-container"
  | "media-volume-sliderthumb"
  | "menulist"
  | "menulist-button"
  | "menulist-text"
  | "menulist-textfield"
  | "meter"
  | "none"
  | "progress-bar"
  | "progress-bar-value"
  | "push-button"
  | "radio"
  | "searchfield"
  | "searchfield-cancel-button"
  | "searchfield-decoration"
  | "searchfield-results-button"
  | "searchfield-results-decoration"
  | "slider-horizontal"
  | "slider-vertical"
  | "sliderthumb-horizontal"
  | "sliderthumb-vertical"
  | "square-button"
  | "textarea"
  | "textfield";

<<<<<<< HEAD
export type WebkitBorderBeforeProperty<TLength> = Globals | LineWidth<TLength> | LineStyle | Color | string;

export type WebkitBorderBeforeColorProperty = Globals | Color;

export type WebkitBorderBeforeStyleProperty = Globals | LineStyle | string;

export type WebkitBorderBeforeWidthProperty<TLength> = Globals | LineWidth<TLength> | string;

export type WebkitBoxReflectProperty<TLength> = Globals | TLength | "above" | "below" | "left" | "right" | string;

export type WebkitLineClampProperty = Globals | "none" | number;

export type WebkitMaskProperty<TLength> = Globals | Position<TLength> | RepeatStyle | Box | "border" | "content" | "none" | "padding" | "text" | string;

export type WebkitMaskAttachmentProperty = Globals | Attachment | string;

export type WebkitMaskClipProperty = Globals | Box | "border" | "content" | "padding" | "text" | string;

export type WebkitMaskCompositeProperty = Globals | CompositeStyle | string;

export type WebkitMaskImageProperty = Globals | "none" | string;

export type WebkitMaskOriginProperty = Globals | Box | "border" | "content" | "padding" | string;

export type WebkitMaskPositionProperty<TLength> = Globals | Position<TLength> | string;

export type WebkitMaskPositionXProperty<TLength> = Globals | TLength | "center" | "left" | "right" | string;

export type WebkitMaskPositionYProperty<TLength> = Globals | TLength | "bottom" | "center" | "top" | string;

export type WebkitMaskRepeatProperty = Globals | RepeatStyle | string;

export type WebkitMaskRepeatXProperty = Globals | "no-repeat" | "repeat" | "round" | "space";

export type WebkitMaskRepeatYProperty = Globals | "no-repeat" | "repeat" | "round" | "space";

export type WebkitMaskSizeProperty<TLength> = Globals | BgSize<TLength> | string;

export type WebkitOverflowScrollingProperty = Globals | "auto" | "touch";

export type WebkitTapHighlightColorProperty = Globals | Color;

export type WebkitTextFillColorProperty = Globals | Color;

export type WebkitTextStrokeProperty<TLength> = Globals | Color | TLength | string;

export type WebkitTextStrokeColorProperty = Globals | Color;

export type WebkitTextStrokeWidthProperty<TLength> = Globals | TLength;

export type WebkitTouchCalloutProperty = Globals | "default" | "none";

export type WebkitUserModifyProperty = Globals | "read-only" | "read-write" | "read-write-plaintext-only";

export type AlignmentBaselineProperty =
=======
export type Property$WebkitBorderBefore<TLength = string | 0> = Globals | DataType$LineWidth<TLength> | DataType$LineStyle | DataType$Color | string;

export type Property$WebkitBorderBeforeColor = Globals | DataType$Color;

export type Property$WebkitBorderBeforeStyle = Globals | DataType$LineStyle | string;

export type Property$WebkitBorderBeforeWidth<TLength = string | 0> = Globals | DataType$LineWidth<TLength> | string;

export type Property$WebkitBoxReflect<TLength = string | 0> = Globals | TLength | "above" | "below" | "left" | "right" | string;

export type Property$WebkitLineClamp = Globals | "none" | number;

export type Property$WebkitMask<TLength = string | 0> =
  | Globals
  | DataType$Position<TLength>
  | DataType$RepeatStyle
  | DataType$Box
  | "border"
  | "content"
  | "none"
  | "padding"
  | "text"
  | string;

export type Property$WebkitMaskAttachment = Globals | DataType$Attachment | string;

export type Property$WebkitMaskClip = Globals | DataType$Box | "border" | "content" | "padding" | "text" | string;

export type Property$WebkitMaskComposite = Globals | DataType$CompositeStyle | string;

export type Property$WebkitMaskImage = Globals | "none" | string;

export type Property$WebkitMaskOrigin = Globals | DataType$Box | "border" | "content" | "padding" | string;

export type Property$WebkitMaskPosition<TLength = string | 0> = Globals | DataType$Position<TLength> | string;

export type Property$WebkitMaskPositionX<TLength = string | 0> = Globals | TLength | "center" | "left" | "right" | string;

export type Property$WebkitMaskPositionY<TLength = string | 0> = Globals | TLength | "bottom" | "center" | "top" | string;

export type Property$WebkitMaskRepeat = Globals | DataType$RepeatStyle | string;

export type Property$WebkitMaskRepeatX = Globals | "no-repeat" | "repeat" | "round" | "space";

export type Property$WebkitMaskRepeatY = Globals | "no-repeat" | "repeat" | "round" | "space";

export type Property$WebkitMaskSize<TLength = string | 0> = Globals | DataType$BgSize<TLength> | string;

export type Property$WebkitOverflowScrolling = Globals | "auto" | "touch";

export type Property$WebkitTapHighlightColor = Globals | DataType$Color;

export type Property$WebkitTextFillColor = Globals | DataType$Color;

export type Property$WebkitTextStroke<TLength = string | 0> = Globals | DataType$Color | TLength | string;

export type Property$WebkitTextStrokeColor = Globals | DataType$Color;

export type Property$WebkitTextStrokeWidth<TLength = string | 0> = Globals | TLength;

export type Property$WebkitTouchCallout = Globals | "default" | "none";

export type Property$WebkitUserModify = Globals | "read-only" | "read-write" | "read-write-plaintext-only";

export type Property$AlignmentBaseline =
>>>>>>> develop
  | Globals
  | "after-edge"
  | "alphabetic"
  | "auto"
  | "baseline"
  | "before-edge"
  | "central"
  | "hanging"
  | "ideographic"
  | "mathematical"
  | "middle"
  | "text-after-edge"
  | "text-before-edge";

<<<<<<< HEAD
export type BaselineShiftProperty<TLength> = Globals | TLength | "baseline" | "sub" | "super" | string;

export type ClipRuleProperty = Globals | "evenodd" | "nonzero";

export type ColorInterpolationProperty = Globals | "auto" | "linearRGB" | "sRGB";

export type ColorRenderingProperty = Globals | "auto" | "optimizeQuality" | "optimizeSpeed";

export type DominantBaselineProperty =
=======
export type Property$BaselineShift<TLength = string | 0> = Globals | TLength | "baseline" | "sub" | "super" | string;

export type Property$ClipRule = Globals | "evenodd" | "nonzero";

export type Property$ColorInterpolation = Globals | "auto" | "linearRGB" | "sRGB";

export type Property$ColorRendering = Globals | "auto" | "optimizeQuality" | "optimizeSpeed";

export type Property$DominantBaseline =
>>>>>>> develop
  | Globals
  | "alphabetic"
  | "auto"
  | "central"
  | "hanging"
  | "ideographic"
  | "mathematical"
  | "middle"
  | "no-change"
  | "reset-size"
  | "text-after-edge"
  | "text-before-edge"
  | "use-script";

<<<<<<< HEAD
export type FillProperty = Globals | Paint;

export type FillRuleProperty = Globals | "evenodd" | "nonzero";

export type FloodColorProperty = Globals | Color | "currentColor";

export type GlyphOrientationVerticalProperty = Globals | "auto" | string | number;

export type LightingColorProperty = Globals | Color | "currentColor";

export type MarkerProperty = Globals | "none" | string;

export type MarkerEndProperty = Globals | "none" | string;

export type MarkerMidProperty = Globals | "none" | string;

export type MarkerStartProperty = Globals | "none" | string;

export type ShapeRenderingProperty = Globals | "auto" | "crispEdges" | "geometricPrecision" | "optimizeSpeed";

export type StopColorProperty = Globals | Color | "currentColor";

export type StrokeProperty = Globals | Paint;

export type StrokeDasharrayProperty<TLength> = Globals | Dasharray<TLength> | "none";

export type StrokeDashoffsetProperty<TLength> = Globals | TLength | string;

export type StrokeLinecapProperty = Globals | "butt" | "round" | "square";

export type StrokeLinejoinProperty = Globals | "bevel" | "miter" | "round";

export type StrokeWidthProperty<TLength> = Globals | TLength | string;

export type TextAnchorProperty = Globals | "end" | "middle" | "start";

export type VectorEffectProperty = Globals | "non-scaling-stroke" | "none";

type CounterStyleRangeProperty = "auto" | "infinite" | string | number;

type CounterStyleSpeakAsProperty = "auto" | "bullets" | "numbers" | "spell-out" | "words" | string;

type CounterStyleSystemProperty = "additive" | "alphabetic" | "cyclic" | "fixed" | "numeric" | "symbolic" | string;

type FontFaceFontFeatureSettingsProperty = "normal" | string;

type FontFaceFontDisplayProperty = "auto" | "block" | "fallback" | "optional" | "swap";

type FontFaceFontStretchProperty = FontStretchAbsolute | string;

type FontFaceFontStyleProperty = "italic" | "normal" | "oblique" | string;

type FontFaceFontVariantProperty =
  | EastAsianVariantValues
=======
export type Property$Fill = Globals | DataType$Paint;

export type Property$FillOpacity = Globals | number;

export type Property$FillRule = Globals | "evenodd" | "nonzero";

export type Property$FloodColor = Globals | DataType$Color | "currentColor";

export type Property$FloodOpacity = Globals | number;

export type Property$GlyphOrientationVertical = Globals | "auto" | string | number;

export type Property$LightingColor = Globals | DataType$Color | "currentColor";

export type Property$Marker = Globals | "none" | string;

export type Property$MarkerEnd = Globals | "none" | string;

export type Property$MarkerMid = Globals | "none" | string;

export type Property$MarkerStart = Globals | "none" | string;

export type Property$ShapeRendering = Globals | "auto" | "crispEdges" | "geometricPrecision" | "optimizeSpeed";

export type Property$StopColor = Globals | DataType$Color | "currentColor";

export type Property$StopOpacity = Globals | number;

export type Property$Stroke = Globals | DataType$Paint;

export type Property$StrokeDasharray<TLength = string | 0> = Globals | DataType$Dasharray<TLength> | "none";

export type Property$StrokeDashoffset<TLength = string | 0> = Globals | TLength | string;

export type Property$StrokeLinecap = Globals | "butt" | "round" | "square";

export type Property$StrokeLinejoin = Globals | "bevel" | "miter" | "round";

export type Property$StrokeMiterlimit = Globals | number;

export type Property$StrokeOpacity = Globals | number;

export type Property$StrokeWidth<TLength = string | 0> = Globals | TLength | string;

export type Property$TextAnchor = Globals | "end" | "middle" | "start";

export type Property$VectorEffect = Globals | "non-scaling-stroke" | "none";

export type AtRule$CounterStyle<TLength = string | 0, TTime = string> = {|
  additiveSymbols?: string,
  fallback?: string,
  negative?: string,
  pad?: string,
  prefix?: string,
  range?: AtRule$Range,
  speakAs?: AtRule$SpeakAs,
  suffix?: string,
  symbols?: string,
  system?: AtRule$System,
|};

export type AtRule$CounterStyleHyphen<TLength = string | 0, TTime = string> = {|
  "additive-symbols"?: string,
  fallback?: string,
  negative?: string,
  pad?: string,
  prefix?: string,
  range?: AtRule$Range,
  "speak-as"?: AtRule$SpeakAs,
  suffix?: string,
  symbols?: string,
  system?: AtRule$System,
|};

export type AtRule$CounterStyleFallback<TLength = string | 0, TTime = string> = {|
  additiveSymbols?: string | Array<string>,
  fallback?: string | Array<string>,
  negative?: string | Array<string>,
  pad?: string | Array<string>,
  prefix?: string | Array<string>,
  range?: AtRule$Range | Array<AtRule$Range>,
  speakAs?: AtRule$SpeakAs | Array<AtRule$SpeakAs>,
  suffix?: string | Array<string>,
  symbols?: string | Array<string>,
  system?: AtRule$System | Array<AtRule$System>,
|};

export type AtRule$CounterStyleHyphenFallback<TLength = string | 0, TTime = string> = {|
  "additive-symbols"?: string | Array<string>,
  fallback?: string | Array<string>,
  negative?: string | Array<string>,
  pad?: string | Array<string>,
  prefix?: string | Array<string>,
  range?: AtRule$Range | Array<AtRule$Range>,
  "speak-as"?: AtRule$SpeakAs | Array<AtRule$SpeakAs>,
  suffix?: string | Array<string>,
  symbols?: string | Array<string>,
  system?: AtRule$System | Array<AtRule$System>,
|};

export type AtRule$FontFace<TLength = string | 0, TTime = string> = {|
  MozFontFeatureSettings?: AtRule$FontFeatureSettings,
  fontDisplay?: AtRule$FontDisplay,
  fontFamily?: string,
  fontFeatureSettings?: AtRule$FontFeatureSettings,
  fontStretch?: AtRule$FontStretch,
  fontStyle?: AtRule$FontStyle,
  fontVariant?: AtRule$FontVariant,
  fontVariationSettings?: AtRule$FontVariationSettings,
  fontWeight?: AtRule$FontWeight,
  src?: string,
  unicodeRange?: string,
|};

export type AtRule$FontFaceHyphen<TLength = string | 0, TTime = string> = {|
  "-moz-font-feature-settings"?: AtRule$FontFeatureSettings,
  "font-display"?: AtRule$FontDisplay,
  "font-family"?: string,
  "font-feature-settings"?: AtRule$FontFeatureSettings,
  "font-stretch"?: AtRule$FontStretch,
  "font-style"?: AtRule$FontStyle,
  "font-variant"?: AtRule$FontVariant,
  "font-variation-settings"?: AtRule$FontVariationSettings,
  "font-weight"?: AtRule$FontWeight,
  src?: string,
  "unicode-range"?: string,
|};

export type AtRule$FontFaceFallback<TLength = string | 0, TTime = string> = {|
  MozFontFeatureSettings?: AtRule$FontFeatureSettings | Array<AtRule$FontFeatureSettings>,
  fontDisplay?: AtRule$FontDisplay | Array<AtRule$FontDisplay>,
  fontFamily?: string | Array<string>,
  fontFeatureSettings?: AtRule$FontFeatureSettings | Array<AtRule$FontFeatureSettings>,
  fontStretch?: AtRule$FontStretch | Array<AtRule$FontStretch>,
  fontStyle?: AtRule$FontStyle | Array<AtRule$FontStyle>,
  fontVariant?: AtRule$FontVariant | Array<AtRule$FontVariant>,
  fontVariationSettings?: AtRule$FontVariationSettings | Array<AtRule$FontVariationSettings>,
  fontWeight?: AtRule$FontWeight | Array<AtRule$FontWeight>,
  src?: string | Array<string>,
  unicodeRange?: string | Array<string>,
|};

export type AtRule$FontFaceHyphenFallback<TLength = string | 0, TTime = string> = {|
  "-moz-font-feature-settings"?: AtRule$FontFeatureSettings | Array<AtRule$FontFeatureSettings>,
  "font-display"?: AtRule$FontDisplay | Array<AtRule$FontDisplay>,
  "font-family"?: string | Array<string>,
  "font-feature-settings"?: AtRule$FontFeatureSettings | Array<AtRule$FontFeatureSettings>,
  "font-stretch"?: AtRule$FontStretch | Array<AtRule$FontStretch>,
  "font-style"?: AtRule$FontStyle | Array<AtRule$FontStyle>,
  "font-variant"?: AtRule$FontVariant | Array<AtRule$FontVariant>,
  "font-variation-settings"?: AtRule$FontVariationSettings | Array<AtRule$FontVariationSettings>,
  "font-weight"?: AtRule$FontWeight | Array<AtRule$FontWeight>,
  src?: string | Array<string>,
  "unicode-range"?: string | Array<string>,
|};

export type AtRule$Page<TLength = string | 0, TTime = string> = {|
  size?: AtRule$Size<TLength>,
|};

export type AtRule$PageHyphen<TLength = string | 0, TTime = string> = {|
  size?: AtRule$Size<TLength>,
|};

export type AtRule$PageFallback<TLength = string | 0, TTime = string> = {|
  size?: AtRule$Size<TLength> | Array<AtRule$Size<TLength>>,
|};

export type AtRule$PageHyphenFallback<TLength = string | 0, TTime = string> = {|
  size?: AtRule$Size<TLength> | Array<AtRule$Size<TLength>>,
|};

export type AtRule$Property<TLength = string | 0, TTime = string> = {|
  inherits?: AtRule$Inherits,
  initialValue?: string,
  syntax?: string,
|};

export type AtRule$PropertyHyphen<TLength = string | 0, TTime = string> = {|
  inherits?: AtRule$Inherits,
  "initial-value"?: string,
  syntax?: string,
|};

export type AtRule$PropertyFallback<TLength = string | 0, TTime = string> = {|
  inherits?: AtRule$Inherits | Array<AtRule$Inherits>,
  initialValue?: string | Array<string>,
  syntax?: string | Array<string>,
|};

export type AtRule$PropertyHyphenFallback<TLength = string | 0, TTime = string> = {|
  inherits?: AtRule$Inherits | Array<AtRule$Inherits>,
  "initial-value"?: string | Array<string>,
  syntax?: string | Array<string>,
|};

export type AtRule$Viewport<TLength = string | 0, TTime = string> = {|
  height?: AtRule$Height<TLength>,
  maxHeight?: AtRule$MaxHeight<TLength>,
  maxWidth?: AtRule$MaxWidth<TLength>,
  maxZoom?: AtRule$MaxZoom,
  minHeight?: AtRule$MinHeight<TLength>,
  minWidth?: AtRule$MinWidth<TLength>,
  minZoom?: AtRule$MinZoom,
  orientation?: AtRule$Orientation,
  userZoom?: AtRule$UserZoom,
  viewportFit?: AtRule$ViewportFit,
  width?: AtRule$Width<TLength>,
  zoom?: AtRule$Zoom,
|};

export type AtRule$ViewportHyphen<TLength = string | 0, TTime = string> = {|
  height?: AtRule$Height<TLength>,
  "max-height"?: AtRule$MaxHeight<TLength>,
  "max-width"?: AtRule$MaxWidth<TLength>,
  "max-zoom"?: AtRule$MaxZoom,
  "min-height"?: AtRule$MinHeight<TLength>,
  "min-width"?: AtRule$MinWidth<TLength>,
  "min-zoom"?: AtRule$MinZoom,
  orientation?: AtRule$Orientation,
  "user-zoom"?: AtRule$UserZoom,
  "viewport-fit"?: AtRule$ViewportFit,
  width?: AtRule$Width<TLength>,
  zoom?: AtRule$Zoom,
|};

export type AtRule$ViewportFallback<TLength = string | 0, TTime = string> = {|
  height?: AtRule$Height<TLength> | Array<AtRule$Height<TLength>>,
  maxHeight?: AtRule$MaxHeight<TLength> | Array<AtRule$MaxHeight<TLength>>,
  maxWidth?: AtRule$MaxWidth<TLength> | Array<AtRule$MaxWidth<TLength>>,
  maxZoom?: AtRule$MaxZoom | Array<AtRule$MaxZoom>,
  minHeight?: AtRule$MinHeight<TLength> | Array<AtRule$MinHeight<TLength>>,
  minWidth?: AtRule$MinWidth<TLength> | Array<AtRule$MinWidth<TLength>>,
  minZoom?: AtRule$MinZoom | Array<AtRule$MinZoom>,
  orientation?: AtRule$Orientation | Array<AtRule$Orientation>,
  userZoom?: AtRule$UserZoom | Array<AtRule$UserZoom>,
  viewportFit?: AtRule$ViewportFit | Array<AtRule$ViewportFit>,
  width?: AtRule$Width<TLength> | Array<AtRule$Width<TLength>>,
  zoom?: AtRule$Zoom | Array<AtRule$Zoom>,
|};

export type AtRule$ViewportHyphenFallback<TLength = string | 0, TTime = string> = {|
  height?: AtRule$Height<TLength> | Array<AtRule$Height<TLength>>,
  "max-height"?: AtRule$MaxHeight<TLength> | Array<AtRule$MaxHeight<TLength>>,
  "max-width"?: AtRule$MaxWidth<TLength> | Array<AtRule$MaxWidth<TLength>>,
  "max-zoom"?: AtRule$MaxZoom | Array<AtRule$MaxZoom>,
  "min-height"?: AtRule$MinHeight<TLength> | Array<AtRule$MinHeight<TLength>>,
  "min-width"?: AtRule$MinWidth<TLength> | Array<AtRule$MinWidth<TLength>>,
  "min-zoom"?: AtRule$MinZoom | Array<AtRule$MinZoom>,
  orientation?: AtRule$Orientation | Array<AtRule$Orientation>,
  "user-zoom"?: AtRule$UserZoom | Array<AtRule$UserZoom>,
  "viewport-fit"?: AtRule$ViewportFit | Array<AtRule$ViewportFit>,
  width?: AtRule$Width<TLength> | Array<AtRule$Width<TLength>>,
  zoom?: AtRule$Zoom | Array<AtRule$Zoom>,
|};

type AtRule$Range = "auto" | "infinite" | string | number;

type AtRule$SpeakAs = "auto" | "bullets" | "numbers" | "spell-out" | "words" | string;

type AtRule$System = "additive" | "alphabetic" | "cyclic" | "fixed" | "numeric" | "symbolic" | string;

type AtRule$FontFeatureSettings = "normal" | string;

type AtRule$FontDisplay = "auto" | "block" | "fallback" | "optional" | "swap";

type AtRule$FontStretch = DataType$FontStretchAbsolute | string;

type AtRule$FontStyle = "italic" | "normal" | "oblique" | string;

type AtRule$FontVariant =
  | DataType$EastAsianVariantValues
>>>>>>> develop
  | "all-petite-caps"
  | "all-small-caps"
  | "common-ligatures"
  | "contextual"
  | "diagonal-fractions"
  | "discretionary-ligatures"
  | "full-width"
  | "historical-forms"
  | "historical-ligatures"
  | "lining-nums"
  | "no-common-ligatures"
  | "no-contextual"
  | "no-discretionary-ligatures"
  | "no-historical-ligatures"
  | "none"
  | "normal"
  | "oldstyle-nums"
  | "ordinal"
  | "petite-caps"
  | "proportional-nums"
  | "proportional-width"
  | "ruby"
  | "slashed-zero"
  | "small-caps"
  | "stacked-fractions"
  | "tabular-nums"
  | "titling-caps"
  | "unicase"
  | string;

<<<<<<< HEAD
type FontFaceFontVariationSettingsProperty = "normal" | string;

type FontFaceFontWeightProperty = FontWeightAbsolute | string;

type PageSizeProperty<TLength> = PageSize | TLength | "auto" | "landscape" | "portrait" | string;

type PropertyInheritsProperty = "false" | "true";

type ViewportHeightProperty<TLength> = ViewportLength<TLength> | string;

type ViewportMaxHeightProperty<TLength> = ViewportLength<TLength>;

type ViewportMaxWidthProperty<TLength> = ViewportLength<TLength>;

type ViewportMaxZoomProperty = "auto" | string | number;

type ViewportMinHeightProperty<TLength> = ViewportLength<TLength>;

type ViewportMinWidthProperty<TLength> = ViewportLength<TLength>;

type ViewportMinZoomProperty = "auto" | string | number;

type ViewportOrientationProperty = "auto" | "landscape" | "portrait";

type ViewportUserZoomProperty = "fixed" | "zoom";

type ViewportViewportFitProperty = "auto" | "contain" | "cover";

type ViewportWidthProperty<TLength> = ViewportLength<TLength> | string;

type ViewportZoomProperty = "auto" | string | number;

type AbsoluteSize = "large" | "medium" | "small" | "x-large" | "x-small" | "xx-large" | "xx-small" | "xxx-large";

type AnimateableFeature = "contents" | "scroll-position" | string;

type Attachment = "fixed" | "local" | "scroll";

type BgPosition<TLength> = TLength | "bottom" | "center" | "left" | "right" | "top" | string;

type BgSize<TLength> = TLength | "auto" | "contain" | "cover" | string;

type BlendMode =
=======
type AtRule$FontVariationSettings = "normal" | string;

type AtRule$FontWeight = DataType$FontWeightAbsolute | string;

type AtRule$Size<TLength> = DataType$PageSize | TLength | "auto" | "landscape" | "portrait" | string;

type AtRule$Inherits = "false" | "true";

type AtRule$Height<TLength> = DataType$ViewportLength<TLength> | string;

type AtRule$MaxHeight<TLength> = DataType$ViewportLength<TLength>;

type AtRule$MaxWidth<TLength> = DataType$ViewportLength<TLength>;

type AtRule$MaxZoom = "auto" | string | number;

type AtRule$MinHeight<TLength> = DataType$ViewportLength<TLength>;

type AtRule$MinWidth<TLength> = DataType$ViewportLength<TLength>;

type AtRule$MinZoom = "auto" | string | number;

type AtRule$Orientation = "auto" | "landscape" | "portrait";

type AtRule$UserZoom = "fixed" | "zoom";

type AtRule$ViewportFit = "auto" | "contain" | "cover";

type AtRule$Width<TLength> = DataType$ViewportLength<TLength> | string;

type AtRule$Zoom = "auto" | string | number;

type DataType$AbsoluteSize = "large" | "medium" | "small" | "x-large" | "x-small" | "xx-large" | "xx-small" | "xxx-large";

type DataType$AnimateableFeature = "contents" | "scroll-position" | string;

type DataType$Attachment = "fixed" | "local" | "scroll";

type DataType$BgPosition<TLength> = TLength | "bottom" | "center" | "left" | "right" | "top" | string;

type DataType$BgSize<TLength> = TLength | "auto" | "contain" | "cover" | string;

type DataType$BlendMode =
>>>>>>> develop
  | "color"
  | "color-burn"
  | "color-dodge"
  | "darken"
  | "difference"
  | "exclusion"
  | "hard-light"
  | "hue"
  | "lighten"
  | "luminosity"
  | "multiply"
  | "normal"
  | "overlay"
  | "saturation"
  | "screen"
  | "soft-light";

<<<<<<< HEAD
type Box = "border-box" | "content-box" | "padding-box";

type Color = NamedColor | DeprecatedSystemColor | "currentcolor" | string;

type CompatAuto =
=======
type DataType$Box = "border-box" | "content-box" | "padding-box";

type DataType$Color = DataType$NamedColor | DataType$DeprecatedSystemColor | "currentcolor" | string;

type DataType$CompatAuto =
>>>>>>> develop
  | "button"
  | "checkbox"
  | "listbox"
  | "menulist"
  | "meter"
  | "progress-bar"
  | "push-button"
  | "radio"
  | "searchfield"
  | "slider-horizontal"
  | "square-button"
  | "textarea";

<<<<<<< HEAD
type CompositeStyle =
=======
type DataType$CompositeStyle =
>>>>>>> develop
  | "clear"
  | "copy"
  | "destination-atop"
  | "destination-in"
  | "destination-out"
  | "destination-over"
  | "source-atop"
  | "source-in"
  | "source-out"
  | "source-over"
  | "xor";

<<<<<<< HEAD
type CompositingOperator = "add" | "exclude" | "intersect" | "subtract";

type ContentDistribution = "space-around" | "space-between" | "space-evenly" | "stretch";

type ContentList = Quote | "contents" | string;

type ContentPosition = "center" | "end" | "flex-end" | "flex-start" | "start";

type CubicBezierTimingFunction = "ease" | "ease-in" | "ease-in-out" | "ease-out" | string;

type Dasharray<TLength> = TLength | string | number;

type DeprecatedSystemColor =
=======
type DataType$CompositingOperator = "add" | "exclude" | "intersect" | "subtract";

type DataType$ContentDistribution = "space-around" | "space-between" | "space-evenly" | "stretch";

type DataType$ContentList = DataType$Quote | "contents" | string;

type DataType$ContentPosition = "center" | "end" | "flex-end" | "flex-start" | "start";

type DataType$CubicBezierTimingFunction = "ease" | "ease-in" | "ease-in-out" | "ease-out" | string;

type DataType$Dasharray<TLength> = TLength | string | number;

type DataType$DeprecatedSystemColor =
>>>>>>> develop
  | "ActiveBorder"
  | "ActiveCaption"
  | "AppWorkspace"
  | "Background"
  | "ButtonFace"
  | "ButtonHighlight"
  | "ButtonShadow"
  | "ButtonText"
  | "CaptionText"
  | "GrayText"
  | "Highlight"
  | "HighlightText"
  | "InactiveBorder"
  | "InactiveCaption"
  | "InactiveCaptionText"
  | "InfoBackground"
  | "InfoText"
  | "Menu"
  | "MenuText"
  | "Scrollbar"
  | "ThreeDDarkShadow"
  | "ThreeDFace"
  | "ThreeDHighlight"
  | "ThreeDLightShadow"
  | "ThreeDShadow"
  | "Window"
  | "WindowFrame"
  | "WindowText";

<<<<<<< HEAD
type DisplayInside = "-ms-flexbox" | "-ms-grid" | "-webkit-flex" | "flex" | "flow" | "flow-root" | "grid" | "ruby" | "table";

type DisplayInternal =
=======
type DataType$DisplayInside = "-ms-flexbox" | "-ms-grid" | "-webkit-flex" | "flex" | "flow" | "flow-root" | "grid" | "ruby" | "table";

type DataType$DisplayInternal =
>>>>>>> develop
  | "ruby-base"
  | "ruby-base-container"
  | "ruby-text"
  | "ruby-text-container"
  | "table-caption"
  | "table-cell"
  | "table-column"
  | "table-column-group"
  | "table-footer-group"
  | "table-header-group"
  | "table-row"
  | "table-row-group";

<<<<<<< HEAD
type DisplayLegacy = "-ms-inline-flexbox" | "-ms-inline-grid" | "-webkit-inline-flex" | "inline-block" | "inline-flex" | "inline-grid" | "inline-list-item" | "inline-table";

type DisplayOutside = "block" | "inline" | "run-in";

type EasingFunction = CubicBezierTimingFunction | StepTimingFunction | "linear";

type EastAsianVariantValues = "jis04" | "jis78" | "jis83" | "jis90" | "simplified" | "traditional";

type FinalBgLayer<TLength> = Color | BgPosition<TLength> | RepeatStyle | Attachment | Box | "none" | string;

type FontStretchAbsolute =
=======
type DataType$DisplayLegacy =
  | "-ms-inline-flexbox"
  | "-ms-inline-grid"
  | "-webkit-inline-flex"
  | "inline-block"
  | "inline-flex"
  | "inline-grid"
  | "inline-list-item"
  | "inline-table";

type DataType$DisplayOutside = "block" | "inline" | "run-in";

type DataType$EasingFunction = DataType$CubicBezierTimingFunction | DataType$StepTimingFunction | "linear";

type DataType$EastAsianVariantValues = "jis04" | "jis78" | "jis83" | "jis90" | "simplified" | "traditional";

type DataType$FinalBgLayer<TLength> = DataType$Color | DataType$BgPosition<TLength> | DataType$RepeatStyle | DataType$Attachment | DataType$Box | "none" | string;

type DataType$FontStretchAbsolute =
>>>>>>> develop
  | "condensed"
  | "expanded"
  | "extra-condensed"
  | "extra-expanded"
  | "normal"
  | "semi-condensed"
  | "semi-expanded"
  | "ultra-condensed"
  | "ultra-expanded"
  | string;

<<<<<<< HEAD
type FontWeightAbsolute = "bold" | "normal" | number;

type GenericFamily = "cursive" | "fantasy" | "monospace" | "sans-serif" | "serif";

type GeometryBox = Box | "fill-box" | "margin-box" | "stroke-box" | "view-box";

type GridLine = "auto" | string | number;

type LineStyle = "dashed" | "dotted" | "double" | "groove" | "hidden" | "inset" | "none" | "outset" | "ridge" | "solid";

type LineWidth<TLength> = TLength | "medium" | "thick" | "thin";

type MaskLayer<TLength> = Position<TLength> | RepeatStyle | GeometryBox | CompositingOperator | MaskingMode | "no-clip" | "none" | string;

type MaskingMode = "alpha" | "luminance" | "match-source";

type NamedColor =
=======
type DataType$FontWeightAbsolute = "bold" | "normal" | number;

type DataType$GenericFamily = "cursive" | "fantasy" | "monospace" | "sans-serif" | "serif";

type DataType$GeometryBox = DataType$Box | "fill-box" | "margin-box" | "stroke-box" | "view-box";

type DataType$GridLine = "auto" | string | number;

type DataType$LineStyle = "dashed" | "dotted" | "double" | "groove" | "hidden" | "inset" | "none" | "outset" | "ridge" | "solid";

type DataType$LineWidth<TLength> = TLength | "medium" | "thick" | "thin";

type DataType$MaskLayer<TLength> =
  | DataType$Position<TLength>
  | DataType$RepeatStyle
  | DataType$GeometryBox
  | DataType$CompositingOperator
  | DataType$MaskingMode
  | "no-clip"
  | "none"
  | string;

type DataType$MaskingMode = "alpha" | "luminance" | "match-source";

type DataType$NamedColor =
>>>>>>> develop
  | "aliceblue"
  | "antiquewhite"
  | "aqua"
  | "aquamarine"
  | "azure"
  | "beige"
  | "bisque"
  | "black"
  | "blanchedalmond"
  | "blue"
  | "blueviolet"
  | "brown"
  | "burlywood"
  | "cadetblue"
  | "chartreuse"
  | "chocolate"
  | "coral"
  | "cornflowerblue"
  | "cornsilk"
  | "crimson"
  | "cyan"
  | "darkblue"
  | "darkcyan"
  | "darkgoldenrod"
  | "darkgray"
  | "darkgreen"
  | "darkgrey"
  | "darkkhaki"
  | "darkmagenta"
  | "darkolivegreen"
  | "darkorange"
  | "darkorchid"
  | "darkred"
  | "darksalmon"
  | "darkseagreen"
  | "darkslateblue"
  | "darkslategray"
  | "darkslategrey"
  | "darkturquoise"
  | "darkviolet"
  | "deeppink"
  | "deepskyblue"
  | "dimgray"
  | "dimgrey"
  | "dodgerblue"
  | "firebrick"
  | "floralwhite"
  | "forestgreen"
  | "fuchsia"
  | "gainsboro"
  | "ghostwhite"
  | "gold"
  | "goldenrod"
  | "gray"
  | "green"
  | "greenyellow"
  | "grey"
  | "honeydew"
  | "hotpink"
  | "indianred"
  | "indigo"
  | "ivory"
  | "khaki"
  | "lavender"
  | "lavenderblush"
  | "lawngreen"
  | "lemonchiffon"
  | "lightblue"
  | "lightcoral"
  | "lightcyan"
  | "lightgoldenrodyellow"
  | "lightgray"
  | "lightgreen"
  | "lightgrey"
  | "lightpink"
  | "lightsalmon"
  | "lightseagreen"
  | "lightskyblue"
  | "lightslategray"
  | "lightslategrey"
  | "lightsteelblue"
  | "lightyellow"
  | "lime"
  | "limegreen"
  | "linen"
  | "magenta"
  | "maroon"
  | "mediumaquamarine"
  | "mediumblue"
  | "mediumorchid"
  | "mediumpurple"
  | "mediumseagreen"
  | "mediumslateblue"
  | "mediumspringgreen"
  | "mediumturquoise"
  | "mediumvioletred"
  | "midnightblue"
  | "mintcream"
  | "mistyrose"
  | "moccasin"
  | "navajowhite"
  | "navy"
  | "oldlace"
  | "olive"
  | "olivedrab"
  | "orange"
  | "orangered"
  | "orchid"
  | "palegoldenrod"
  | "palegreen"
  | "paleturquoise"
  | "palevioletred"
  | "papayawhip"
  | "peachpuff"
  | "peru"
  | "pink"
  | "plum"
  | "powderblue"
  | "purple"
  | "rebeccapurple"
  | "red"
  | "rosybrown"
  | "royalblue"
  | "saddlebrown"
  | "salmon"
  | "sandybrown"
  | "seagreen"
  | "seashell"
  | "sienna"
  | "silver"
  | "skyblue"
  | "slateblue"
  | "slategray"
  | "slategrey"
  | "snow"
  | "springgreen"
  | "steelblue"
  | "tan"
  | "teal"
  | "thistle"
  | "tomato"
  | "transparent"
  | "turquoise"
  | "violet"
  | "wheat"
  | "white"
  | "whitesmoke"
  | "yellow"
  | "yellowgreen";

<<<<<<< HEAD
type PageSize = "A3" | "A4" | "A5" | "B4" | "B5" | "JIS-B4" | "JIS-B5" | "ledger" | "legal" | "letter";

type Paint = Color | "child" | "context-fill" | "context-stroke" | "none" | string;

type Position<TLength> = TLength | "bottom" | "center" | "left" | "right" | "top" | string;

type Quote = "close-quote" | "no-close-quote" | "no-open-quote" | "open-quote";

type RepeatStyle = "no-repeat" | "repeat" | "repeat-x" | "repeat-y" | "round" | "space" | string;

type SelfPosition = "center" | "end" | "flex-end" | "flex-start" | "self-end" | "self-start" | "start";

type SingleAnimation = EasingFunction | SingleAnimationDirection | SingleAnimationFillMode | "infinite" | "none" | "paused" | "running" | string | number;

type SingleAnimationDirection = "alternate" | "alternate-reverse" | "normal" | "reverse";

type SingleAnimationFillMode = "backwards" | "both" | "forwards" | "none";

type SingleTransition = EasingFunction | "all" | "none" | string;

type StepTimingFunction = "step-end" | "step-start" | string;

type TrackBreadth<TLength> = TLength | "auto" | "max-content" | "min-content" | string;

type ViewportLength<TLength> = TLength | "auto" | string;
=======
type DataType$PageSize = "A3" | "A4" | "A5" | "B4" | "B5" | "JIS-B4" | "JIS-B5" | "ledger" | "legal" | "letter";

type DataType$Paint = DataType$Color | "child" | "context-fill" | "context-stroke" | "none" | string;

type DataType$Position<TLength> = TLength | "bottom" | "center" | "left" | "right" | "top" | string;

type DataType$Quote = "close-quote" | "no-close-quote" | "no-open-quote" | "open-quote";

type DataType$RepeatStyle = "no-repeat" | "repeat" | "repeat-x" | "repeat-y" | "round" | "space" | string;

type DataType$SelfPosition = "center" | "end" | "flex-end" | "flex-start" | "self-end" | "self-start" | "start";

type DataType$SingleAnimation<TTime> =
  | DataType$EasingFunction
  | DataType$SingleAnimationDirection
  | DataType$SingleAnimationFillMode
  | TTime
  | "infinite"
  | "none"
  | "paused"
  | "running"
  | string
  | number;

type DataType$SingleAnimationDirection = "alternate" | "alternate-reverse" | "normal" | "reverse";

type DataType$SingleAnimationFillMode = "backwards" | "both" | "forwards" | "none";

type DataType$SingleTransition<TTime> = DataType$EasingFunction | TTime | "all" | "none" | string;

type DataType$StepTimingFunction = "step-end" | "step-start" | string;

type DataType$TrackBreadth<TLength> = TLength | "auto" | "max-content" | "min-content" | string;

type DataType$ViewportLength<TLength> = TLength | "auto" | string;
>>>>>>> develop
